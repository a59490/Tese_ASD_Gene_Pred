2024-05-06 12:08:02,580 [DEBUG] py4...: Calling cytoscape_ping()
2024-05-06 12:08:02,580 [DEBUG] py4...: ǀCalling cytoscape_version_info(base_url='http://127.0.0.1:1234/v1')
2024-05-06 12:08:02,581 [DEBUG] py4...: ǀǀCalling cyrest_get('version', base_url='http://127.0.0.1:1234/v1')
2024-05-06 12:08:02,581 [DEBUG] py4...: Attempting to direct connect to Cytoscape on http://127.0.0.1:1234/v1
2024-05-06 12:08:02,780 [DEBUG] py4...: Detected py4cytoscape running on Cytoscape workstation
2024-05-06 12:08:02,781 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/version)
2024-05-06 12:08:02,795 [DEBUG] py4...: ǀǀOK[200], content: {"apiVersion":"v1","cytoscapeVersion":"3.10.2"}
2024-05-06 12:08:02,795 [DEBUG] py4...: ǀǀReturning 'cyrest_get': {'apiVersion': 'v1', 'cytoscapeVersion': '3.10.2'}
2024-05-06 12:08:02,795 [DEBUG] py4...: ǀReturning 'cytoscape_version_info': {'apiVersion': 'v1', 'cytoscapeVersion': '3.10.2', 'automationAPIVersion': '1.9.0', 'py4cytoscapeVersion': '1.9.0'}
2024-05-06 12:08:02,795 [DEBUG] py4...: Returning 'cytoscape_ping': 'You are connected to Cytoscape!'
2024-05-06 12:08:02,795 [DEBUG] py4...: --------------------
2024-05-06 12:08:02,795 [DEBUG] py4...: Calling cytoscape_version_info()
2024-05-06 12:08:02,795 [DEBUG] py4...: ǀCalling cyrest_get('version', base_url='http://127.0.0.1:1234/v1')
2024-05-06 12:08:02,795 [DEBUG] py4...: ǀHTTP GET(http://127.0.0.1:1234/v1/version)
2024-05-06 12:08:02,807 [DEBUG] py4...: ǀOK[200], content: {"apiVersion":"v1","cytoscapeVersion":"3.10.2"}
2024-05-06 12:08:02,807 [DEBUG] py4...: ǀReturning 'cyrest_get': {'apiVersion': 'v1', 'cytoscapeVersion': '3.10.2'}
2024-05-06 12:08:02,807 [DEBUG] py4...: Returning 'cytoscape_version_info': {'apiVersion': 'v1', 'cytoscapeVersion': '3.10.2', 'automationAPIVersion': '1.9.0', 'py4cytoscapeVersion': '1.9.0'}
2024-05-06 12:08:02,807 [DEBUG] py4...: --------------------
2024-05-06 12:08:31,455 [DEBUG] py4...: Calling create_network_from_data_frames(       id group  score
0  node 0     A     20
1  node 1     A     10
2  node 2     B     15
3  node 3     B      5,    source  target interaction  weight
0  node 0  node 1    inhibits     5.1
1  node 0  node 2   interacts     3.0
2  node 0  node 3   activates     5.2
3  node 2  node 3   interacts     9.9, title='my first network', collection='DataFrame Example')
2024-05-06 12:08:31,462 [DEBUG] py4...: ǀCalling cyrest_post('networks', parameters={'title': 'my first network', 'collection': 'DataFrame Example'}, body={'data': [{'name': 'my first network'}], 'elements': {'nodes': [{'data': {'id': 'node 0'}}, {'data': {'id': 'node 1'}}, {'data': {'id': 'node 2'}}, {'data': {'id': 'node 3'}}], 'edges': [{'data': {'name': 'node 0 (inhibits) node 1', 'source': 'node 0', 'target': 'node 1', 'interaction': 'inhibits'}}, {'data': {'name': 'node 0 (interacts) node 2', 'source': 'node 0', 'target': 'node 2', 'interaction': 'interacts'}}, {'data': {'name': 'node 0 (activates) node 3', 'source': 'node 0', 'target': 'node 3', 'interaction': 'activates'}}, {'data': {'name': 'node 2 (interacts) node 3', 'source': 'node 2', 'target': 'node 3', 'interaction': 'interacts'}}]}}, base_url='http://127.0.0.1:1234/v1')
2024-05-06 12:08:31,462 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/networks), params: {'title': 'my first network', 'collection': 'DataFrame Example'}, json: {'data': [{'name': 'my first network'}], 'elements': {'nodes': [{'data': {'id': 'node 0'}}, {'data': {'id': 'node 1'}}, {'data': {'id': 'node 2'}}, {'data': {'id': 'node 3'}}], 'edges': [{'data': {'name': 'node 0 (inhibits) node 1', 'source': 'node 0', 'target': 'node 1', 'interaction': 'inhibits'}}, {'data': {'name': 'node 0 (interacts) node 2', 'source': 'node 0', 'target': 'node 2', 'interaction': 'interacts'}}, {'data': {'name': 'node 0 (activates) node 3', 'source': 'node 0', 'target': 'node 3', 'interaction': 'activates'}}, {'data': {'name': 'node 2 (interacts) node 3', 'source': 'node 2', 'target': 'node 3', 'interaction': 'interacts'}}]}}
2024-05-06 12:08:31,687 [DEBUG] py4...: ǀOK[200], content: {"networkSUID":1216740}
2024-05-06 12:08:31,687 [DEBUG] py4...: ǀReturning 'cyrest_post': {'networkSUID': 1216740}
2024-05-06 12:08:31,687 [DEBUG] py4...: ǀCalling get_network_suid(1216740, base_url='http://127.0.0.1:1234/v1')
2024-05-06 12:08:31,687 [DEBUG] py4...: ǀǀCalling cyrest_get('networks', base_url='http://127.0.0.1:1234/v1')
2024-05-06 12:08:31,702 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks)
2024-05-06 12:08:31,703 [DEBUG] py4...: ǀǀOK[200], content: [1216740]
2024-05-06 12:08:31,719 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [1216740]
2024-05-06 12:08:31,719 [DEBUG] py4...: ǀReturning 'get_network_suid': 1216740
2024-05-06 12:08:31,721 [DEBUG] py4...: ǀCalling get_network_suid(1216740, base_url='http://127.0.0.1:1234/v1')
2024-05-06 12:08:31,723 [DEBUG] py4...: ǀǀCalling cyrest_get('networks', base_url='http://127.0.0.1:1234/v1')
2024-05-06 12:08:31,724 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks)
2024-05-06 12:08:31,735 [DEBUG] py4...: ǀǀOK[200], content: [1216740]
2024-05-06 12:08:31,736 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [1216740]
2024-05-06 12:08:31,737 [DEBUG] py4...: ǀReturning 'get_network_suid': 1216740
2024-05-06 12:08:31,737 [DEBUG] py4...: ǀCalling get_network_suid(1216740, base_url='http://127.0.0.1:1234/v1')
2024-05-06 12:08:31,738 [DEBUG] py4...: ǀǀCalling cyrest_get('networks', base_url='http://127.0.0.1:1234/v1')
2024-05-06 12:08:31,738 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks)
2024-05-06 12:08:31,739 [DEBUG] py4...: ǀǀOK[200], content: [1216740]
2024-05-06 12:08:31,739 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [1216740]
2024-05-06 12:08:31,739 [DEBUG] py4...: ǀReturning 'get_network_suid': 1216740
2024-05-06 12:08:31,739 [DEBUG] py4...: ǀCalling get_network_suid(1216740, base_url='http://127.0.0.1:1234/v1')
2024-05-06 12:08:31,739 [DEBUG] py4...: ǀǀCalling cyrest_get('networks', base_url='http://127.0.0.1:1234/v1')
2024-05-06 12:08:31,739 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks)
2024-05-06 12:08:31,762 [DEBUG] py4...: ǀǀOK[200], content: [1216740]
2024-05-06 12:08:31,762 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [1216740]
2024-05-06 12:08:31,762 [DEBUG] py4...: ǀReturning 'get_network_suid': 1216740
2024-05-06 12:08:31,762 [DEBUG] py4...: ǀCalling get_network_suid(1216740, base_url='http://127.0.0.1:1234/v1')
2024-05-06 12:08:31,762 [DEBUG] py4...: ǀǀCalling cyrest_get('networks', base_url='http://127.0.0.1:1234/v1')
2024-05-06 12:08:31,762 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks)
2024-05-06 12:08:31,774 [DEBUG] py4...: ǀǀOK[200], content: [1216740]
2024-05-06 12:08:31,774 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [1216740]
2024-05-06 12:08:31,774 [DEBUG] py4...: ǀReturning 'get_network_suid': 1216740
2024-05-06 12:08:31,774 [DEBUG] py4...: ǀCalling get_network_suid(1216740, base_url='http://127.0.0.1:1234/v1')
2024-05-06 12:08:31,774 [DEBUG] py4...: ǀǀCalling cyrest_get('networks', base_url='http://127.0.0.1:1234/v1')
2024-05-06 12:08:31,774 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks)
2024-05-06 12:08:31,787 [DEBUG] py4...: ǀǀOK[200], content: [1216740]
2024-05-06 12:08:31,787 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [1216740]
2024-05-06 12:08:31,787 [DEBUG] py4...: ǀReturning 'get_network_suid': 1216740
2024-05-06 12:08:31,787 [DEBUG] py4...: ǀCalling get_network_suid(1216740, base_url='http://127.0.0.1:1234/v1')
2024-05-06 12:08:31,787 [DEBUG] py4...: ǀǀCalling cyrest_get('networks', base_url='http://127.0.0.1:1234/v1')
2024-05-06 12:08:31,787 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks)
2024-05-06 12:08:31,803 [DEBUG] py4...: ǀǀOK[200], content: [1216740]
2024-05-06 12:08:31,803 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [1216740]
2024-05-06 12:08:31,803 [DEBUG] py4...: ǀReturning 'get_network_suid': 1216740
2024-05-06 12:08:31,803 [DEBUG] py4...: ǀCalling get_network_suid(1216740, base_url='http://127.0.0.1:1234/v1')
2024-05-06 12:08:31,803 [DEBUG] py4...: ǀǀCalling cyrest_get('networks', base_url='http://127.0.0.1:1234/v1')
2024-05-06 12:08:31,803 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks)
2024-05-06 12:08:31,803 [DEBUG] py4...: ǀǀOK[200], content: [1216740]
2024-05-06 12:08:31,803 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [1216740]
2024-05-06 12:08:31,803 [DEBUG] py4...: ǀReturning 'get_network_suid': 1216740
2024-05-06 12:08:31,818 [DEBUG] py4...: ǀCalling get_network_suid(1216740, base_url='http://127.0.0.1:1234/v1')
2024-05-06 12:08:31,818 [DEBUG] py4...: ǀǀCalling cyrest_get('networks', base_url='http://127.0.0.1:1234/v1')
2024-05-06 12:08:31,818 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks)
2024-05-06 12:08:31,830 [DEBUG] py4...: ǀǀOK[200], content: [1216740]
2024-05-06 12:08:31,831 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [1216740]
2024-05-06 12:08:31,832 [DEBUG] py4...: ǀReturning 'get_network_suid': 1216740
2024-05-06 12:08:31,832 [DEBUG] py4...: ǀCalling get_network_suid(1216740, base_url='http://127.0.0.1:1234/v1')
2024-05-06 12:08:31,832 [DEBUG] py4...: ǀǀCalling cyrest_get('networks', base_url='http://127.0.0.1:1234/v1')
2024-05-06 12:08:31,833 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks)
2024-05-06 12:08:31,838 [DEBUG] py4...: ǀǀOK[200], content: [1216740]
2024-05-06 12:08:31,838 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [1216740]
2024-05-06 12:08:31,838 [DEBUG] py4...: ǀReturning 'get_network_suid': 1216740
2024-05-06 12:08:31,838 [DEBUG] py4...: ǀCalling load_table_data(       id group  score
0  node 0     A     20
1  node 1     A     10
2  node 2     B     15
3  node 3     B      5, data_key_column='id', table_key_column='id', network=1216740, base_url='http://127.0.0.1:1234/v1')
2024-05-06 12:08:31,838 [DEBUG] py4...: ǀǀCalling get_network_suid(1216740, base_url='http://127.0.0.1:1234/v1')
2024-05-06 12:08:31,838 [DEBUG] py4...: ǀǀǀCalling cyrest_get('networks', base_url='http://127.0.0.1:1234/v1')
2024-05-06 12:08:31,838 [DEBUG] py4...: ǀǀǀHTTP GET(http://127.0.0.1:1234/v1/networks)
2024-05-06 12:08:31,860 [DEBUG] py4...: ǀǀǀOK[200], content: [1216740]
2024-05-06 12:08:31,860 [DEBUG] py4...: ǀǀǀReturning 'cyrest_get': [1216740]
2024-05-06 12:08:31,862 [DEBUG] py4...: ǀǀReturning 'get_network_suid': 1216740
2024-05-06 12:08:31,862 [DEBUG] py4...: ǀǀCalling get_table_columns(table='node', namespace='default', columns='id', network=1216740, base_url='http://127.0.0.1:1234/v1')
2024-05-06 12:08:31,863 [DEBUG] py4...: ǀǀǀCalling get_network_suid(1216740, 'http://127.0.0.1:1234/v1')
2024-05-06 12:08:31,863 [DEBUG] py4...: ǀǀǀǀCalling cyrest_get('networks', base_url='http://127.0.0.1:1234/v1')
2024-05-06 12:08:31,863 [DEBUG] py4...: ǀǀǀǀHTTP GET(http://127.0.0.1:1234/v1/networks)
2024-05-06 12:08:31,873 [DEBUG] py4...: ǀǀǀǀOK[200], content: [1216740]
2024-05-06 12:08:31,874 [DEBUG] py4...: ǀǀǀǀReturning 'cyrest_get': [1216740]
2024-05-06 12:08:31,874 [DEBUG] py4...: ǀǀǀReturning 'get_network_suid': 1216740
2024-05-06 12:08:31,875 [DEBUG] py4...: ǀǀǀCalling get_table_column_types('node', namespace='default', network=1216740, base_url='http://127.0.0.1:1234/v1')
2024-05-06 12:08:31,875 [DEBUG] py4...: ǀǀǀǀCalling get_network_suid(1216740, base_url='http://127.0.0.1:1234/v1')
2024-05-06 12:08:31,876 [DEBUG] py4...: ǀǀǀǀǀCalling cyrest_get('networks', base_url='http://127.0.0.1:1234/v1')
2024-05-06 12:08:31,876 [DEBUG] py4...: ǀǀǀǀǀHTTP GET(http://127.0.0.1:1234/v1/networks)
2024-05-06 12:08:31,886 [DEBUG] py4...: ǀǀǀǀǀOK[200], content: [1216740]
2024-05-06 12:08:31,886 [DEBUG] py4...: ǀǀǀǀǀReturning 'cyrest_get': [1216740]
2024-05-06 12:08:31,887 [DEBUG] py4...: ǀǀǀǀReturning 'get_network_suid': 1216740
2024-05-06 12:08:31,887 [DEBUG] py4...: ǀǀǀǀCalling cyrest_get('networks/1216740/tables/defaultnode/columns', base_url='http://127.0.0.1:1234/v1')
2024-05-06 12:08:31,888 [DEBUG] py4...: ǀǀǀǀHTTP GET(http://127.0.0.1:1234/v1/networks/1216740/tables/defaultnode/columns)
2024-05-06 12:08:31,888 [DEBUG] py4...: ǀǀǀǀOK[200], content: [{"name":"SUID","type":"Long","immutable":true,"primaryKey":true},{"name":"shared name","type":"String","immutable":true,"primaryKey":false},{"name":"name","type":"String","immutable":true,"primaryKey":false},{"name":"selected","type":"Boolean","immutable":true,"primaryKey":false},{"name":"id","type":"String","immutable":false,"primaryKey":false}]
2024-05-06 12:08:31,888 [DEBUG] py4...: ǀǀǀǀReturning 'cyrest_get': [{'name': 'SUID', 'type': 'Long', 'immutable': True, 'primaryKey': True}, {'name': 'shared name', 'type': 'String', 'immutable': True, 'primaryKey': False}, {'name': 'name', 'type': 'String', 'immutable': True, 'primaryKey': False}, {'name': 'selected', 'type': 'Boolean', 'immutable': True, 'primaryKey': False}, {'name': 'id', 'type': 'String', 'immutable': False, 'primaryKey': False}]
2024-05-06 12:08:31,888 [DEBUG] py4...: ǀǀǀReturning 'get_table_column_types': {'SUID': 'Long', 'shared name': 'String', 'name': 'String', 'selected': 'Boolean', 'id': 'String'}
2024-05-06 12:08:31,888 [DEBUG] py4...: ǀǀǀCalling cyrest_get('networks/1216740/tables/defaultnode/columns/SUID', base_url='http://127.0.0.1:1234/v1')
2024-05-06 12:08:31,888 [DEBUG] py4...: ǀǀǀHTTP GET(http://127.0.0.1:1234/v1/networks/1216740/tables/defaultnode/columns/SUID)
2024-05-06 12:08:31,911 [DEBUG] py4...: ǀǀǀOK[200], content: {"name":"SUID","values":[1216774,1216777,1216780,1216767]}
2024-05-06 12:08:31,911 [DEBUG] py4...: ǀǀǀReturning 'cyrest_get': {'name': 'SUID', 'values': [1216774, 1216777, 1216780, 1216767]}
2024-05-06 12:08:31,913 [DEBUG] py4...: ǀǀǀCalling cyrest_get('networks/1216740/tables/defaultnode/columns/id', base_url='http://127.0.0.1:1234/v1')
2024-05-06 12:08:31,913 [DEBUG] py4...: ǀǀǀHTTP GET(http://127.0.0.1:1234/v1/networks/1216740/tables/defaultnode/columns/id)
2024-05-06 12:08:31,923 [DEBUG] py4...: ǀǀǀOK[200], content: {"name":"id","values":["node 1","node 2","node 3","node 0"]}
2024-05-06 12:08:31,923 [DEBUG] py4...: ǀǀǀReturning 'cyrest_get': {'name': 'id', 'values': ['node 1', 'node 2', 'node 3', 'node 0']}
2024-05-06 12:08:31,926 [DEBUG] py4...: ǀǀReturning 'get_table_columns':              id
1216774  node 1
1216777  node 2
1216780  node 3
1216767  node 0
2024-05-06 12:08:31,934 [DEBUG] py4...: ǀǀCalling get_table_column_names('node', 'default', 1216740, base_url='http://127.0.0.1:1234/v1')
2024-05-06 12:08:31,934 [DEBUG] py4...: ǀǀǀCalling get_network_suid(1216740, base_url='http://127.0.0.1:1234/v1')
2024-05-06 12:08:31,935 [DEBUG] py4...: ǀǀǀǀCalling cyrest_get('networks', base_url='http://127.0.0.1:1234/v1')
2024-05-06 12:08:31,935 [DEBUG] py4...: ǀǀǀǀHTTP GET(http://127.0.0.1:1234/v1/networks)
2024-05-06 12:08:31,936 [DEBUG] py4...: ǀǀǀǀOK[200], content: [1216740]
2024-05-06 12:08:31,936 [DEBUG] py4...: ǀǀǀǀReturning 'cyrest_get': [1216740]
2024-05-06 12:08:31,936 [DEBUG] py4...: ǀǀǀReturning 'get_network_suid': 1216740
2024-05-06 12:08:31,936 [DEBUG] py4...: ǀǀǀCalling cyrest_get('networks/1216740/tables/defaultnode/columns', base_url='http://127.0.0.1:1234/v1')
2024-05-06 12:08:31,936 [DEBUG] py4...: ǀǀǀHTTP GET(http://127.0.0.1:1234/v1/networks/1216740/tables/defaultnode/columns)
2024-05-06 12:08:31,958 [DEBUG] py4...: ǀǀǀOK[200], content: [{"name":"SUID","type":"Long","immutable":true,"primaryKey":true},{"name":"shared name","type":"String","immutable":true,"primaryKey":false},{"name":"name","type":"String","immutable":true,"primaryKey":false},{"name":"selected","type":"Boolean","immutable":true,"primaryKey":false},{"name":"id","type":"String","immutable":false,"primaryKey":false}]
2024-05-06 12:08:31,959 [DEBUG] py4...: ǀǀǀReturning 'cyrest_get': [{'name': 'SUID', 'type': 'Long', 'immutable': True, 'primaryKey': True}, {'name': 'shared name', 'type': 'String', 'immutable': True, 'primaryKey': False}, {'name': 'name', 'type': 'String', 'immutable': True, 'primaryKey': False}, {'name': 'selected', 'type': 'Boolean', 'immutable': True, 'primaryKey': False}, {'name': 'id', 'type': 'String', 'immutable': False, 'primaryKey': False}]
2024-05-06 12:08:31,959 [DEBUG] py4...: ǀǀReturning 'get_table_column_names': ['SUID', 'shared name', 'name', 'selected', 'id']
2024-05-06 12:08:31,959 [DEBUG] py4...: ǀǀCalling cyrest_post('networks/1216740/tables/defaultnode/columns', body={'name': 'score', 'type': 'Integer'}, require_json=False, base_url='http://127.0.0.1:1234/v1')
2024-05-06 12:08:31,959 [DEBUG] py4...: ǀǀHTTP POST(http://127.0.0.1:1234/v1/networks/1216740/tables/defaultnode/columns), json: {'name': 'score', 'type': 'Integer'}
2024-05-06 12:08:32,004 [DEBUG] py4...: ǀǀCreated[201], content: 
2024-05-06 12:08:32,004 [DEBUG] py4...: ǀǀReturning 'cyrest_post': ''
2024-05-06 12:08:32,004 [DEBUG] py4...: ǀǀCalling cyrest_put('networks/1216740/tables/defaultnode', body={'key': 'id', 'dataKey': 'id', 'data': [{'id': 'node 0', 'group': 'A', 'score': 20}, {'id': 'node 1', 'group': 'A', 'score': 10}, {'id': 'node 2', 'group': 'B', 'score': 15}, {'id': 'node 3', 'group': 'B', 'score': 5}]}, require_json=False, base_url='http://127.0.0.1:1234/v1')
2024-05-06 12:08:32,004 [DEBUG] py4...: ǀǀHTTP PUT(http://127.0.0.1:1234/v1/networks/1216740/tables/defaultnode), json: {'key': 'id', 'dataKey': 'id', 'data': [{'id': 'node 0', 'group': 'A', 'score': 20}, {'id': 'node 1', 'group': 'A', 'score': 10}, {'id': 'node 2', 'group': 'B', 'score': 15}, {'id': 'node 3', 'group': 'B', 'score': 5}]}
2024-05-06 12:08:32,037 [DEBUG] py4...: ǀǀOK[200], content: 
2024-05-06 12:08:32,037 [DEBUG] py4...: ǀǀReturning 'cyrest_put': ''
2024-05-06 12:08:32,037 [DEBUG] py4...: ǀReturning 'load_table_data': 'Success: Data loaded in defaultnode table'
2024-05-06 12:08:32,037 [DEBUG] py4...: ǀCalling get_table_columns('edge', ['name'], 'default', 1216740, base_url='http://127.0.0.1:1234/v1')
2024-05-06 12:08:32,037 [DEBUG] py4...: ǀǀCalling get_network_suid(1216740, 'http://127.0.0.1:1234/v1')
2024-05-06 12:08:32,037 [DEBUG] py4...: ǀǀǀCalling cyrest_get('networks', base_url='http://127.0.0.1:1234/v1')
2024-05-06 12:08:32,037 [DEBUG] py4...: ǀǀǀHTTP GET(http://127.0.0.1:1234/v1/networks)
2024-05-06 12:08:32,037 [DEBUG] py4...: ǀǀǀOK[200], content: [1216740]
2024-05-06 12:08:32,052 [DEBUG] py4...: ǀǀǀReturning 'cyrest_get': [1216740]
2024-05-06 12:08:32,052 [DEBUG] py4...: ǀǀReturning 'get_network_suid': 1216740
2024-05-06 12:08:32,052 [DEBUG] py4...: ǀǀCalling get_table_column_types('edge', namespace='default', network=1216740, base_url='http://127.0.0.1:1234/v1')
2024-05-06 12:08:32,052 [DEBUG] py4...: ǀǀǀCalling get_network_suid(1216740, base_url='http://127.0.0.1:1234/v1')
2024-05-06 12:08:32,052 [DEBUG] py4...: ǀǀǀǀCalling cyrest_get('networks', base_url='http://127.0.0.1:1234/v1')
2024-05-06 12:08:32,055 [DEBUG] py4...: ǀǀǀǀHTTP GET(http://127.0.0.1:1234/v1/networks)
2024-05-06 12:08:32,062 [DEBUG] py4...: ǀǀǀǀOK[200], content: [1216740]
2024-05-06 12:08:32,062 [DEBUG] py4...: ǀǀǀǀReturning 'cyrest_get': [1216740]
2024-05-06 12:08:32,062 [DEBUG] py4...: ǀǀǀReturning 'get_network_suid': 1216740
2024-05-06 12:08:32,062 [DEBUG] py4...: ǀǀǀCalling cyrest_get('networks/1216740/tables/defaultedge/columns', base_url='http://127.0.0.1:1234/v1')
2024-05-06 12:08:32,062 [DEBUG] py4...: ǀǀǀHTTP GET(http://127.0.0.1:1234/v1/networks/1216740/tables/defaultedge/columns)
2024-05-06 12:08:32,070 [DEBUG] py4...: ǀǀǀOK[200], content: [{"name":"SUID","type":"Long","immutable":true,"primaryKey":true},{"name":"shared name","type":"String","immutable":true,"primaryKey":false},{"name":"shared interaction","type":"String","immutable":true,"primaryKey":false},{"name":"name","type":"String","immutable":true,"primaryKey":false},{"name":"selected","type":"Boolean","immutable":true,"primaryKey":false},{"name":"interaction","type":"String","immutable":true,"primaryKey":false},{"name":"source","type":"String","immutable":false,"primaryKey":false},{"name":"target","type":"String","immutable":false,"primaryKey":false}]
2024-05-06 12:08:32,070 [DEBUG] py4...: ǀǀǀReturning 'cyrest_get': [{'name': 'SUID', 'type': 'Long', 'immutable': True, 'primaryKey': True}, {'name': 'shared name', 'type': 'String', 'immutable': True, 'primaryKey': False}, {'name': 'shared interaction', 'type': 'String', 'immutable': True, 'primaryKey': False}, {'name': 'name', 'type': 'String', 'immutable': True, 'primaryKey': False}, {'name': 'selected', 'type': 'Boolean', 'immutable': True, 'primaryKey': False}, {'name': 'interaction', 'type': 'String', 'immutable': True, 'primaryKey': False}, {'name': 'source', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'target', 'type': 'String', 'immutable': False, 'primaryKey': False}]
2024-05-06 12:08:32,070 [DEBUG] py4...: ǀǀReturning 'get_table_column_types': {'SUID': 'Long', 'shared name': 'String', 'shared interaction': 'String', 'name': 'String', 'selected': 'Boolean', 'interaction': 'String', 'source': 'String', 'target': 'String'}
2024-05-06 12:08:32,070 [DEBUG] py4...: ǀǀCalling cyrest_get('networks/1216740/tables/defaultedge/columns/SUID', base_url='http://127.0.0.1:1234/v1')
2024-05-06 12:08:32,070 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks/1216740/tables/defaultedge/columns/SUID)
2024-05-06 12:08:32,090 [DEBUG] py4...: ǀǀOK[200], content: {"name":"SUID","values":[1216795,1216792,1216798,1216783]}
2024-05-06 12:08:32,090 [DEBUG] py4...: ǀǀReturning 'cyrest_get': {'name': 'SUID', 'values': [1216795, 1216792, 1216798, 1216783]}
2024-05-06 12:08:32,090 [DEBUG] py4...: ǀǀCalling cyrest_get('networks/1216740/tables/defaultedge/columns/name', base_url='http://127.0.0.1:1234/v1')
2024-05-06 12:08:32,090 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks/1216740/tables/defaultedge/columns/name)
2024-05-06 12:08:32,090 [DEBUG] py4...: ǀǀOK[200], content: {"name":"name","values":["node 0 (activates) node 3","node 0 (interacts) node 2","node 2 (interacts) node 3","node 0 (inhibits) node 1"]}
2024-05-06 12:08:32,090 [DEBUG] py4...: ǀǀReturning 'cyrest_get': {'name': 'name', 'values': ['node 0 (activates) node 3', 'node 0 (interacts) node 2', 'node 2 (interacts) node 3', 'node 0 (inhibits) node 1']}
2024-05-06 12:08:32,103 [DEBUG] py4...: ǀReturning 'get_table_columns':                               name
1216795  node 0 (activates) node 3
1216792  node 0 (interacts) node 2
1216798  node 2 (interacts) node 3
1216783   node 0 (inhibits) node 1
2024-05-06 12:08:32,103 [DEBUG] py4...: ǀCalling load_table_data(   source  target interaction  weight                       name  \
0  node 0  node 1    inhibits     5.1   node 0 (inhibits) node 1   
1  node 0  node 2   interacts     3.0  node 0 (interacts) node 2   
2  node 0  node 3   activates     5.2  node 0 (activates) node 3   
3  node 2  node 3   interacts     9.9  node 2 (interacts) node 3   

   data.key.column  
0          1216783  
1          1216792  
2          1216795  
3          1216798  , data_key_column='data.key.column', table='edge', table_key_column='SUID', network=1216740, base_url='http://127.0.0.1:1234/v1')
2024-05-06 12:08:32,103 [DEBUG] py4...: ǀǀCalling get_network_suid(1216740, base_url='http://127.0.0.1:1234/v1')
2024-05-06 12:08:32,103 [DEBUG] py4...: ǀǀǀCalling cyrest_get('networks', base_url='http://127.0.0.1:1234/v1')
2024-05-06 12:08:32,103 [DEBUG] py4...: ǀǀǀHTTP GET(http://127.0.0.1:1234/v1/networks)
2024-05-06 12:08:32,118 [DEBUG] py4...: ǀǀǀOK[200], content: [1216740]
2024-05-06 12:08:32,118 [DEBUG] py4...: ǀǀǀReturning 'cyrest_get': [1216740]
2024-05-06 12:08:32,121 [DEBUG] py4...: ǀǀReturning 'get_network_suid': 1216740
2024-05-06 12:08:32,121 [DEBUG] py4...: ǀǀCalling get_table_columns(table='edge', namespace='default', columns='SUID', network=1216740, base_url='http://127.0.0.1:1234/v1')
2024-05-06 12:08:32,121 [DEBUG] py4...: ǀǀǀCalling get_network_suid(1216740, 'http://127.0.0.1:1234/v1')
2024-05-06 12:08:32,121 [DEBUG] py4...: ǀǀǀǀCalling cyrest_get('networks', base_url='http://127.0.0.1:1234/v1')
2024-05-06 12:08:32,121 [DEBUG] py4...: ǀǀǀǀHTTP GET(http://127.0.0.1:1234/v1/networks)
2024-05-06 12:08:32,121 [DEBUG] py4...: ǀǀǀǀOK[200], content: [1216740]
2024-05-06 12:08:32,121 [DEBUG] py4...: ǀǀǀǀReturning 'cyrest_get': [1216740]
2024-05-06 12:08:32,121 [DEBUG] py4...: ǀǀǀReturning 'get_network_suid': 1216740
2024-05-06 12:08:32,121 [DEBUG] py4...: ǀǀǀCalling get_table_column_types('edge', namespace='default', network=1216740, base_url='http://127.0.0.1:1234/v1')
2024-05-06 12:08:32,121 [DEBUG] py4...: ǀǀǀǀCalling get_network_suid(1216740, base_url='http://127.0.0.1:1234/v1')
2024-05-06 12:08:32,121 [DEBUG] py4...: ǀǀǀǀǀCalling cyrest_get('networks', base_url='http://127.0.0.1:1234/v1')
2024-05-06 12:08:32,121 [DEBUG] py4...: ǀǀǀǀǀHTTP GET(http://127.0.0.1:1234/v1/networks)
2024-05-06 12:08:32,137 [DEBUG] py4...: ǀǀǀǀǀOK[200], content: [1216740]
2024-05-06 12:08:32,137 [DEBUG] py4...: ǀǀǀǀǀReturning 'cyrest_get': [1216740]
2024-05-06 12:08:32,137 [DEBUG] py4...: ǀǀǀǀReturning 'get_network_suid': 1216740
2024-05-06 12:08:32,137 [DEBUG] py4...: ǀǀǀǀCalling cyrest_get('networks/1216740/tables/defaultedge/columns', base_url='http://127.0.0.1:1234/v1')
2024-05-06 12:08:32,137 [DEBUG] py4...: ǀǀǀǀHTTP GET(http://127.0.0.1:1234/v1/networks/1216740/tables/defaultedge/columns)
2024-05-06 12:08:32,153 [DEBUG] py4...: ǀǀǀǀOK[200], content: [{"name":"SUID","type":"Long","immutable":true,"primaryKey":true},{"name":"shared name","type":"String","immutable":true,"primaryKey":false},{"name":"shared interaction","type":"String","immutable":true,"primaryKey":false},{"name":"name","type":"String","immutable":true,"primaryKey":false},{"name":"selected","type":"Boolean","immutable":true,"primaryKey":false},{"name":"interaction","type":"String","immutable":true,"primaryKey":false},{"name":"source","type":"String","immutable":false,"primaryKey":false},{"name":"target","type":"String","immutable":false,"primaryKey":false}]
2024-05-06 12:08:32,153 [DEBUG] py4...: ǀǀǀǀReturning 'cyrest_get': [{'name': 'SUID', 'type': 'Long', 'immutable': True, 'primaryKey': True}, {'name': 'shared name', 'type': 'String', 'immutable': True, 'primaryKey': False}, {'name': 'shared interaction', 'type': 'String', 'immutable': True, 'primaryKey': False}, {'name': 'name', 'type': 'String', 'immutable': True, 'primaryKey': False}, {'name': 'selected', 'type': 'Boolean', 'immutable': True, 'primaryKey': False}, {'name': 'interaction', 'type': 'String', 'immutable': True, 'primaryKey': False}, {'name': 'source', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'target', 'type': 'String', 'immutable': False, 'primaryKey': False}]
2024-05-06 12:08:32,153 [DEBUG] py4...: ǀǀǀReturning 'get_table_column_types': {'SUID': 'Long', 'shared name': 'String', 'shared interaction': 'String', 'name': 'String', 'selected': 'Boolean', 'interaction': 'String', 'source': 'String', 'target': 'String'}
2024-05-06 12:08:32,153 [DEBUG] py4...: ǀǀǀCalling cyrest_get('networks/1216740/tables/defaultedge/columns/SUID', base_url='http://127.0.0.1:1234/v1')
2024-05-06 12:08:32,153 [DEBUG] py4...: ǀǀǀHTTP GET(http://127.0.0.1:1234/v1/networks/1216740/tables/defaultedge/columns/SUID)
2024-05-06 12:08:32,162 [DEBUG] py4...: ǀǀǀOK[200], content: {"name":"SUID","values":[1216795,1216792,1216798,1216783]}
2024-05-06 12:08:32,162 [DEBUG] py4...: ǀǀǀReturning 'cyrest_get': {'name': 'SUID', 'values': [1216795, 1216792, 1216798, 1216783]}
2024-05-06 12:08:32,162 [DEBUG] py4...: ǀǀǀCalling cyrest_get('networks/1216740/tables/defaultedge/columns/SUID', base_url='http://127.0.0.1:1234/v1')
2024-05-06 12:08:32,162 [DEBUG] py4...: ǀǀǀHTTP GET(http://127.0.0.1:1234/v1/networks/1216740/tables/defaultedge/columns/SUID)
2024-05-06 12:08:32,170 [DEBUG] py4...: ǀǀǀOK[200], content: {"name":"SUID","values":[1216795,1216792,1216798,1216783]}
2024-05-06 12:08:32,170 [DEBUG] py4...: ǀǀǀReturning 'cyrest_get': {'name': 'SUID', 'values': [1216795, 1216792, 1216798, 1216783]}
2024-05-06 12:08:32,170 [DEBUG] py4...: ǀǀReturning 'get_table_columns':             SUID
1216795  1216795
1216792  1216792
1216798  1216798
1216783  1216783
2024-05-06 12:08:32,170 [DEBUG] py4...: ǀǀCalling get_table_column_names('edge', 'default', 1216740, base_url='http://127.0.0.1:1234/v1')
2024-05-06 12:08:32,170 [DEBUG] py4...: ǀǀǀCalling get_network_suid(1216740, base_url='http://127.0.0.1:1234/v1')
2024-05-06 12:08:32,170 [DEBUG] py4...: ǀǀǀǀCalling cyrest_get('networks', base_url='http://127.0.0.1:1234/v1')
2024-05-06 12:08:32,170 [DEBUG] py4...: ǀǀǀǀHTTP GET(http://127.0.0.1:1234/v1/networks)
2024-05-06 12:08:32,190 [DEBUG] py4...: ǀǀǀǀOK[200], content: [1216740]
2024-05-06 12:08:32,190 [DEBUG] py4...: ǀǀǀǀReturning 'cyrest_get': [1216740]
2024-05-06 12:08:32,190 [DEBUG] py4...: ǀǀǀReturning 'get_network_suid': 1216740
2024-05-06 12:08:32,190 [DEBUG] py4...: ǀǀǀCalling cyrest_get('networks/1216740/tables/defaultedge/columns', base_url='http://127.0.0.1:1234/v1')
2024-05-06 12:08:32,190 [DEBUG] py4...: ǀǀǀHTTP GET(http://127.0.0.1:1234/v1/networks/1216740/tables/defaultedge/columns)
2024-05-06 12:08:32,190 [DEBUG] py4...: ǀǀǀOK[200], content: [{"name":"SUID","type":"Long","immutable":true,"primaryKey":true},{"name":"shared name","type":"String","immutable":true,"primaryKey":false},{"name":"shared interaction","type":"String","immutable":true,"primaryKey":false},{"name":"name","type":"String","immutable":true,"primaryKey":false},{"name":"selected","type":"Boolean","immutable":true,"primaryKey":false},{"name":"interaction","type":"String","immutable":true,"primaryKey":false},{"name":"source","type":"String","immutable":false,"primaryKey":false},{"name":"target","type":"String","immutable":false,"primaryKey":false}]
2024-05-06 12:08:32,203 [DEBUG] py4...: ǀǀǀReturning 'cyrest_get': [{'name': 'SUID', 'type': 'Long', 'immutable': True, 'primaryKey': True}, {'name': 'shared name', 'type': 'String', 'immutable': True, 'primaryKey': False}, {'name': 'shared interaction', 'type': 'String', 'immutable': True, 'primaryKey': False}, {'name': 'name', 'type': 'String', 'immutable': True, 'primaryKey': False}, {'name': 'selected', 'type': 'Boolean', 'immutable': True, 'primaryKey': False}, {'name': 'interaction', 'type': 'String', 'immutable': True, 'primaryKey': False}, {'name': 'source', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'target', 'type': 'String', 'immutable': False, 'primaryKey': False}]
2024-05-06 12:08:32,203 [DEBUG] py4...: ǀǀReturning 'get_table_column_names': ['SUID', 'shared name', 'shared interaction', 'name', 'selected', 'interaction', 'source', 'target']
2024-05-06 12:08:32,203 [DEBUG] py4...: ǀǀCalling cyrest_post('networks/1216740/tables/defaultedge/columns', body={'name': 'data.key.column', 'type': 'Integer'}, require_json=False, base_url='http://127.0.0.1:1234/v1')
2024-05-06 12:08:32,203 [DEBUG] py4...: ǀǀHTTP POST(http://127.0.0.1:1234/v1/networks/1216740/tables/defaultedge/columns), json: {'name': 'data.key.column', 'type': 'Integer'}
2024-05-06 12:08:32,203 [DEBUG] py4...: ǀǀCreated[201], content: 
2024-05-06 12:08:32,218 [DEBUG] py4...: ǀǀReturning 'cyrest_post': ''
2024-05-06 12:08:32,218 [DEBUG] py4...: ǀǀCalling cyrest_put('networks/1216740/tables/defaultedge', body={'key': 'SUID', 'dataKey': 'data.key.column', 'data': [{'source': 'node 0', 'target': 'node 1', 'interaction': 'inhibits', 'weight': 5.1, 'name': 'node 0 (inhibits) node 1', 'data.key.column': 1216783}, {'source': 'node 0', 'target': 'node 2', 'interaction': 'interacts', 'weight': 3.0, 'name': 'node 0 (interacts) node 2', 'data.key.column': 1216792}, {'source': 'node 0', 'target': 'node 3', 'interaction': 'activates', 'weight': 5.2, 'name': 'node 0 (activates) node 3', 'data.key.column': 1216795}, {'source': 'node 2', 'target': 'node 3', 'interaction': 'interacts', 'weight': 9.9, 'name': 'node 2 (interacts) node 3', 'data.key.column': 1216798}]}, require_json=False, base_url='http://127.0.0.1:1234/v1')
2024-05-06 12:08:32,218 [DEBUG] py4...: ǀǀHTTP PUT(http://127.0.0.1:1234/v1/networks/1216740/tables/defaultedge), json: {'key': 'SUID', 'dataKey': 'data.key.column', 'data': [{'source': 'node 0', 'target': 'node 1', 'interaction': 'inhibits', 'weight': 5.1, 'name': 'node 0 (inhibits) node 1', 'data.key.column': 1216783}, {'source': 'node 0', 'target': 'node 2', 'interaction': 'interacts', 'weight': 3.0, 'name': 'node 0 (interacts) node 2', 'data.key.column': 1216792}, {'source': 'node 0', 'target': 'node 3', 'interaction': 'activates', 'weight': 5.2, 'name': 'node 0 (activates) node 3', 'data.key.column': 1216795}, {'source': 'node 2', 'target': 'node 3', 'interaction': 'interacts', 'weight': 9.9, 'name': 'node 2 (interacts) node 3', 'data.key.column': 1216798}]}
2024-05-06 12:08:32,237 [DEBUG] py4...: ǀǀOK[200], content: 
2024-05-06 12:08:32,238 [DEBUG] py4...: ǀǀReturning 'cyrest_put': ''
2024-05-06 12:08:32,238 [DEBUG] py4...: ǀReturning 'load_table_data': 'Success: Data loaded in defaultedge table'
2024-05-06 12:08:32,238 [DEBUG] py4...: ǀCalling commands_post('vizmap apply styles="default"', base_url='http://127.0.0.1:1234/v1')
2024-05-06 12:08:32,238 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/vizmap/apply), json: {'styles': 'default'}
2024-05-06 12:08:32,270 [DEBUG] py4...: ǀOK[200], content: {
 "data": {"views":[
  1216832
]},
 "errors":[]
}
2024-05-06 12:08:32,270 [DEBUG] py4...: ǀReturning 'commands_post': {'views': [1216832]}
2024-05-06 12:08:32,270 [DEBUG] py4...: ǀCalling layout_network(network=1216740, base_url='http://127.0.0.1:1234/v1')
2024-05-06 12:08:32,270 [DEBUG] py4...: ǀǀCalling get_network_suid(1216740, base_url='http://127.0.0.1:1234/v1')
2024-05-06 12:08:32,270 [DEBUG] py4...: ǀǀǀCalling cyrest_get('networks', base_url='http://127.0.0.1:1234/v1')
2024-05-06 12:08:32,270 [DEBUG] py4...: ǀǀǀHTTP GET(http://127.0.0.1:1234/v1/networks)
2024-05-06 12:08:32,287 [DEBUG] py4...: ǀǀǀOK[200], content: [1216740]
2024-05-06 12:08:32,287 [DEBUG] py4...: ǀǀǀReturning 'cyrest_get': [1216740]
2024-05-06 12:08:32,287 [DEBUG] py4...: ǀǀReturning 'get_network_suid': 1216740
2024-05-06 12:08:32,287 [DEBUG] py4...: ǀǀCalling commands_post('layout apply preferred networkSelected="SUID:1216740"', base_url='http://127.0.0.1:1234/v1')
2024-05-06 12:08:32,287 [DEBUG] py4...: ǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/layout/apply%20preferred), json: {'networkSelected': 'SUID:1216740'}
2024-05-06 12:08:32,337 [DEBUG] py4...: ǀǀOK[200], content: {
 "data": {},
 "errors":[]
}
2024-05-06 12:08:32,337 [DEBUG] py4...: ǀǀReturning 'commands_post': {}
2024-05-06 12:08:32,337 [DEBUG] py4...: ǀReturning 'layout_network': {}
2024-05-06 12:08:32,337 [DEBUG] py4...: Returning 'create_network_from_data_frames': 1216740
2024-05-06 12:08:32,337 [DEBUG] py4...: --------------------
2024-05-06 12:08:45,086 [DEBUG] py4...: Calling notebook_export_show_image()
2024-05-06 12:08:45,086 [DEBUG] py4...: ǀCalling export_image(filename='image.png', type='PNG', resolution=None, units=None, height=None, width=None, zoom=None, network=None, base_url='http://127.0.0.1:1234/v1', overwrite_file=True)
2024-05-06 12:08:45,087 [DEBUG] py4...: ǀǀCalling get_network_view_suid(None, base_url='http://127.0.0.1:1234/v1')
2024-05-06 12:08:45,087 [DEBUG] py4...: ǀǀǀCalling get_network_views(None, base_url='http://127.0.0.1:1234/v1')
2024-05-06 12:08:45,087 [DEBUG] py4...: ǀǀǀǀCalling get_network_suid(None, base_url='http://127.0.0.1:1234/v1')
2024-05-06 12:08:45,088 [DEBUG] py4...: ǀǀǀǀǀCalling commands_post('network get attribute network="current" namespace="default" columnList="SUID"', base_url='http://127.0.0.1:1234/v1')
2024-05-06 12:08:45,088 [DEBUG] py4...: ǀǀǀǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/get%20attribute), json: {'network': 'current', 'namespace': 'default', 'columnList': 'SUID'}
2024-05-06 12:08:45,112 [DEBUG] py4...: ǀǀǀǀǀOK[200], content: {
 "data": [ {
  "SUID": 1216740
}
],
 "errors":[]
}
2024-05-06 12:08:45,112 [DEBUG] py4...: ǀǀǀǀǀReturning 'commands_post': [{'SUID': 1216740}]
2024-05-06 12:08:45,113 [DEBUG] py4...: ǀǀǀǀReturning 'get_network_suid': 1216740
2024-05-06 12:08:45,113 [DEBUG] py4...: ǀǀǀǀCalling cyrest_get('networks/1216740/views', base_url='http://127.0.0.1:1234/v1')
2024-05-06 12:08:45,114 [DEBUG] py4...: ǀǀǀǀHTTP GET(http://127.0.0.1:1234/v1/networks/1216740/views)
2024-05-06 12:08:45,141 [DEBUG] py4...: ǀǀǀǀOK[200], content: [1216832]
2024-05-06 12:08:45,142 [DEBUG] py4...: ǀǀǀǀReturning 'cyrest_get': [1216832]
2024-05-06 12:08:45,142 [DEBUG] py4...: ǀǀǀReturning 'get_network_views': [1216832]
2024-05-06 12:08:45,143 [DEBUG] py4...: ǀǀReturning 'get_network_view_suid': 1216832
2024-05-06 12:08:45,143 [DEBUG] py4...: ǀǀCalling cytoscape_version_info(base_url='http://127.0.0.1:1234/v1')
2024-05-06 12:08:45,144 [DEBUG] py4...: ǀǀǀCalling cyrest_get('version', base_url='http://127.0.0.1:1234/v1')
2024-05-06 12:08:45,144 [DEBUG] py4...: ǀǀǀHTTP GET(http://127.0.0.1:1234/v1/version)
2024-05-06 12:08:45,162 [DEBUG] py4...: ǀǀǀOK[200], content: {"apiVersion":"v1","cytoscapeVersion":"3.10.2"}
2024-05-06 12:08:45,163 [DEBUG] py4...: ǀǀǀReturning 'cyrest_get': {'apiVersion': 'v1', 'cytoscapeVersion': '3.10.2'}
2024-05-06 12:08:45,163 [DEBUG] py4...: ǀǀReturning 'cytoscape_version_info': {'apiVersion': 'v1', 'cytoscapeVersion': '3.10.2', 'automationAPIVersion': '1.9.0', 'py4cytoscapeVersion': '1.9.0'}
2024-05-06 12:08:45,164 [DEBUG] py4...: ǀǀCalling sandbox_get_file_info('image.png', base_url='http://127.0.0.1:1234/v1')
2024-05-06 12:08:45,164 [DEBUG] py4...: ǀǀǀCalling commands_post('filetransfer getFileInfo fileName="c:\\Users\\joaop\\Desktop\\INSA\\Documentos\\Tese_ASD_Gene_Pred\\8_Network\\image.png"', base_url='http://127.0.0.1:1234/v1')
2024-05-06 12:08:45,165 [DEBUG] py4...: ǀǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/filetransfer/getFileInfo), json: {'fileName': 'c:\\Users\\joaop\\Desktop\\INSA\\Documentos\\Tese_ASD_Gene_Pred\\8_Network\\image.png'}
2024-05-06 12:08:45,183 [DEBUG] py4...: ǀǀǀOK[200], content: {
 "data": {"filePath":"C:\\Users\\joaop\\Desktop\\INSA\\Documentos\\Tese_ASD_Gene_Pred\\8_Network\\image.png","modifiedTime":"","isFile":false},
 "errors":[]
}
2024-05-06 12:08:45,183 [DEBUG] py4...: ǀǀǀReturning 'commands_post': {'filePath': 'C:\\Users\\joaop\\Desktop\\INSA\\Documentos\\Tese_ASD_Gene_Pred\\8_Network\\image.png', 'modifiedTime': '', 'isFile': False}
2024-05-06 12:08:45,184 [DEBUG] py4...: ǀǀReturning 'sandbox_get_file_info': {'filePath': 'C:\\Users\\joaop\\Desktop\\INSA\\Documentos\\Tese_ASD_Gene_Pred\\8_Network\\image.png', 'modifiedTime': '', 'isFile': False}
2024-05-06 12:08:45,184 [DEBUG] py4...: ǀǀCalling commands_post('view export png Zoom="100" outputFile="C:\\Users\\joaop\\Desktop\\INSA\\Documentos\\Tese_ASD_Gene_Pred\\8_Network\\image.png" view="SUID:1216832"', base_url='http://127.0.0.1:1234/v1')
2024-05-06 12:08:45,185 [DEBUG] py4...: ǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/view/export%20png), json: {'Zoom': '100', 'outputFile': 'C:\\Users\\joaop\\Desktop\\INSA\\Documentos\\Tese_ASD_Gene_Pred\\8_Network\\image.png', 'view': 'SUID:1216832'}
2024-05-06 12:08:45,275 [DEBUG] py4...: ǀǀOK[200], content: {
 "data": {"file":"C:\\Users\\joaop\\Desktop\\INSA\\Documentos\\Tese_ASD_Gene_Pred\\8_Network\\image.png"},
 "errors":[]
}
2024-05-06 12:08:45,275 [DEBUG] py4...: ǀǀReturning 'commands_post': {'file': 'C:\\Users\\joaop\\Desktop\\INSA\\Documentos\\Tese_ASD_Gene_Pred\\8_Network\\image.png'}
2024-05-06 12:08:45,290 [DEBUG] py4...: ǀReturning 'export_image': {'file': 'C:\\Users\\joaop\\Desktop\\INSA\\Documentos\\Tese_ASD_Gene_Pred\\8_Network\\image.png'}
2024-05-06 12:08:45,291 [DEBUG] py4...: ǀCalling sandbox_get_from('image.png', overwrite=True, sandbox_name=None, base_url='http://127.0.0.1:1234/v1')
2024-05-06 12:08:45,292 [DEBUG] py4...: ǀǀCalling commands_post('filetransfer fromSandbox fileName="c:\\Users\\joaop\\Desktop\\INSA\\Documentos\\Tese_ASD_Gene_Pred\\8_Network\\image.png"', base_url='http://127.0.0.1:1234/v1')
2024-05-06 12:08:45,292 [DEBUG] py4...: ǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/filetransfer/fromSandbox), json: {'fileName': 'c:\\Users\\joaop\\Desktop\\INSA\\Documentos\\Tese_ASD_Gene_Pred\\8_Network\\image.png'}
2024-05-06 12:08:45,309 [DEBUG] py4...: ǀǀOK[200], content: {
 "data": {"filePath":"C:\\Users\\joaop\\Desktop\\INSA\\Documentos\\Tese_ASD_Gene_Pred\\8_Network\\image.png","modifiedTime":"2024-05-06 12:08:45.0275","fileByteCount":8903,"fileBase64":"\u003d"},
 "errors":[]
}
2024-05-06 12:08:45,309 [DEBUG] py4...: ǀǀReturning 'commands_post': {'filePath': 'C:\\Users\\joaop\\Desktop\\INSA\\Documentos\\Tese_ASD_Gene_Pred\\8_Network\\image.png', 'modifiedTime': '2024-05-06 12:08:45.0275', 'fileByteCount': 8903, 'fileBase64': ''}
2024-05-06 12:08:45,309 [DEBUG] py4...: ǀReturning 'sandbox_get_from': {'filePath': 'C:\\Users\\joaop\\Desktop\\INSA\\Documentos\\Tese_ASD_Gene_Pred\\8_Network\\image.png', 'modifiedTime': '2024-05-06 12:08:45.0275', 'fileByteCount': 8903}
2024-05-06 12:08:45,309 [DEBUG] py4...: Returning 'notebook_export_show_image': <IPython.core.display.Image object>
2024-05-06 12:08:45,309 [DEBUG] py4...: --------------------
2024-05-06 12:08:54,480 [DEBUG] py4...: Calling set_visual_style('Marquee')
2024-05-06 12:08:54,480 [DEBUG] py4...: ǀCalling get_network_suid(None, base_url='http://127.0.0.1:1234/v1')
2024-05-06 12:08:54,480 [DEBUG] py4...: ǀǀCalling commands_post('network get attribute network="current" namespace="default" columnList="SUID"', base_url='http://127.0.0.1:1234/v1')
2024-05-06 12:08:54,480 [DEBUG] py4...: ǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/get%20attribute), json: {'network': 'current', 'namespace': 'default', 'columnList': 'SUID'}
2024-05-06 12:08:54,496 [DEBUG] py4...: ǀǀOK[200], content: {
 "data": [ {
  "SUID": 1216740
}
],
 "errors":[]
}
2024-05-06 12:08:54,496 [DEBUG] py4...: ǀǀReturning 'commands_post': [{'SUID': 1216740}]
2024-05-06 12:08:54,496 [DEBUG] py4...: ǀReturning 'get_network_suid': 1216740
2024-05-06 12:08:54,496 [DEBUG] py4...: ǀCalling get_visual_style_names(base_url='http://127.0.0.1:1234/v1')
2024-05-06 12:08:54,496 [DEBUG] py4...: ǀǀCalling cyrest_get('apply/styles', base_url='http://127.0.0.1:1234/v1')
2024-05-06 12:08:54,496 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/apply/styles)
2024-05-06 12:08:54,513 [DEBUG] py4...: ǀǀOK[200], content: ["Nested Network Style","BioPAX_SIF","Solid","default","default black","BioPAX","Curved","Sample2","Sample3","Gradient1","Big Labels","Directed","size_rank","Sample1","Universe","Minimal","Marquee","Ripple"]
2024-05-06 12:08:54,513 [DEBUG] py4...: ǀǀReturning 'cyrest_get': ['Nested Network Style', 'BioPAX_SIF', 'Solid', 'default', 'default black', 'BioPAX', 'Curved', 'Sample2', 'Sample3', 'Gradient1', 'Big Labels', 'Directed', 'size_rank', 'Sample1', 'Universe', 'Minimal', 'Marquee', 'Ripple']
2024-05-06 12:08:54,513 [DEBUG] py4...: ǀReturning 'get_visual_style_names': ['Nested Network Style', 'BioPAX_SIF', 'Solid', 'default', 'default black', 'BioPAX', 'Curved', 'Sample2', 'Sample3', 'Gradient1', 'Big Labels', 'Directed', 'size_rank', 'Sample1', 'Universe', 'Minimal', 'Marquee', 'Ripple']
2024-05-06 12:08:54,513 [DEBUG] py4...: ǀCalling cyrest_get('apply/styles/Marquee/1216740', base_url='http://127.0.0.1:1234/v1')
2024-05-06 12:08:54,513 [DEBUG] py4...: ǀHTTP GET(http://127.0.0.1:1234/v1/apply/styles/Marquee/1216740)
2024-05-06 12:08:54,527 [DEBUG] py4...: ǀOK[200], content: {"message":"Visual Style applied."}
2024-05-06 12:08:54,527 [DEBUG] py4...: ǀReturning 'cyrest_get': {'message': 'Visual Style applied.'}
2024-05-06 12:08:54,543 [DEBUG] py4...: Returning 'set_visual_style': {'message': 'Visual Style applied.'}
2024-05-06 12:08:54,543 [DEBUG] py4...: --------------------
2024-05-06 12:08:58,982 [DEBUG] py4...: Calling set_visual_style('Marquee')
2024-05-06 12:08:58,982 [DEBUG] py4...: ǀCalling get_network_suid(None, base_url='http://127.0.0.1:1234/v1')
2024-05-06 12:08:58,982 [DEBUG] py4...: ǀǀCalling commands_post('network get attribute network="current" namespace="default" columnList="SUID"', base_url='http://127.0.0.1:1234/v1')
2024-05-06 12:08:58,983 [DEBUG] py4...: ǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/get%20attribute), json: {'network': 'current', 'namespace': 'default', 'columnList': 'SUID'}
2024-05-06 12:08:58,987 [DEBUG] py4...: ǀǀOK[200], content: {
 "data": [ {
  "SUID": 1216740
}
],
 "errors":[]
}
2024-05-06 12:08:58,987 [DEBUG] py4...: ǀǀReturning 'commands_post': [{'SUID': 1216740}]
2024-05-06 12:08:58,987 [DEBUG] py4...: ǀReturning 'get_network_suid': 1216740
2024-05-06 12:08:58,987 [DEBUG] py4...: ǀCalling get_visual_style_names(base_url='http://127.0.0.1:1234/v1')
2024-05-06 12:08:58,987 [DEBUG] py4...: ǀǀCalling cyrest_get('apply/styles', base_url='http://127.0.0.1:1234/v1')
2024-05-06 12:08:58,987 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/apply/styles)
2024-05-06 12:08:59,001 [DEBUG] py4...: ǀǀOK[200], content: ["Nested Network Style","BioPAX_SIF","Solid","default","default black","BioPAX","Curved","Sample2","Sample3","Gradient1","Big Labels","Directed","size_rank","Sample1","Universe","Minimal","Marquee","Ripple"]
2024-05-06 12:08:59,001 [DEBUG] py4...: ǀǀReturning 'cyrest_get': ['Nested Network Style', 'BioPAX_SIF', 'Solid', 'default', 'default black', 'BioPAX', 'Curved', 'Sample2', 'Sample3', 'Gradient1', 'Big Labels', 'Directed', 'size_rank', 'Sample1', 'Universe', 'Minimal', 'Marquee', 'Ripple']
2024-05-06 12:08:59,001 [DEBUG] py4...: ǀReturning 'get_visual_style_names': ['Nested Network Style', 'BioPAX_SIF', 'Solid', 'default', 'default black', 'BioPAX', 'Curved', 'Sample2', 'Sample3', 'Gradient1', 'Big Labels', 'Directed', 'size_rank', 'Sample1', 'Universe', 'Minimal', 'Marquee', 'Ripple']
2024-05-06 12:08:59,001 [DEBUG] py4...: ǀCalling cyrest_get('apply/styles/Marquee/1216740', base_url='http://127.0.0.1:1234/v1')
2024-05-06 12:08:59,001 [DEBUG] py4...: ǀHTTP GET(http://127.0.0.1:1234/v1/apply/styles/Marquee/1216740)
2024-05-06 12:08:59,023 [DEBUG] py4...: ǀOK[200], content: {"message":"Visual Style applied."}
2024-05-06 12:08:59,023 [DEBUG] py4...: ǀReturning 'cyrest_get': {'message': 'Visual Style applied.'}
2024-05-06 12:08:59,023 [DEBUG] py4...: Returning 'set_visual_style': {'message': 'Visual Style applied.'}
2024-05-06 12:08:59,023 [DEBUG] py4...: --------------------
2024-05-06 12:08:59,023 [DEBUG] py4...: Calling notebook_export_show_image()
2024-05-06 12:08:59,023 [DEBUG] py4...: ǀCalling export_image(filename='image.png', type='PNG', resolution=None, units=None, height=None, width=None, zoom=None, network=None, base_url='http://127.0.0.1:1234/v1', overwrite_file=True)
2024-05-06 12:08:59,023 [DEBUG] py4...: ǀǀCalling get_network_view_suid(None, base_url='http://127.0.0.1:1234/v1')
2024-05-06 12:08:59,023 [DEBUG] py4...: ǀǀǀCalling get_network_views(None, base_url='http://127.0.0.1:1234/v1')
2024-05-06 12:08:59,023 [DEBUG] py4...: ǀǀǀǀCalling get_network_suid(None, base_url='http://127.0.0.1:1234/v1')
2024-05-06 12:08:59,023 [DEBUG] py4...: ǀǀǀǀǀCalling commands_post('network get attribute network="current" namespace="default" columnList="SUID"', base_url='http://127.0.0.1:1234/v1')
2024-05-06 12:08:59,023 [DEBUG] py4...: ǀǀǀǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/get%20attribute), json: {'network': 'current', 'namespace': 'default', 'columnList': 'SUID'}
2024-05-06 12:08:59,034 [DEBUG] py4...: ǀǀǀǀǀOK[200], content: {
 "data": [ {
  "SUID": 1216740
}
],
 "errors":[]
}
2024-05-06 12:08:59,034 [DEBUG] py4...: ǀǀǀǀǀReturning 'commands_post': [{'SUID': 1216740}]
2024-05-06 12:08:59,034 [DEBUG] py4...: ǀǀǀǀReturning 'get_network_suid': 1216740
2024-05-06 12:08:59,034 [DEBUG] py4...: ǀǀǀǀCalling cyrest_get('networks/1216740/views', base_url='http://127.0.0.1:1234/v1')
2024-05-06 12:08:59,034 [DEBUG] py4...: ǀǀǀǀHTTP GET(http://127.0.0.1:1234/v1/networks/1216740/views)
2024-05-06 12:08:59,049 [DEBUG] py4...: ǀǀǀǀOK[200], content: [1216832]
2024-05-06 12:08:59,049 [DEBUG] py4...: ǀǀǀǀReturning 'cyrest_get': [1216832]
2024-05-06 12:08:59,049 [DEBUG] py4...: ǀǀǀReturning 'get_network_views': [1216832]
2024-05-06 12:08:59,049 [DEBUG] py4...: ǀǀReturning 'get_network_view_suid': 1216832
2024-05-06 12:08:59,049 [DEBUG] py4...: ǀǀCalling cytoscape_version_info(base_url='http://127.0.0.1:1234/v1')
2024-05-06 12:08:59,049 [DEBUG] py4...: ǀǀǀCalling cyrest_get('version', base_url='http://127.0.0.1:1234/v1')
2024-05-06 12:08:59,049 [DEBUG] py4...: ǀǀǀHTTP GET(http://127.0.0.1:1234/v1/version)
2024-05-06 12:08:59,049 [DEBUG] py4...: ǀǀǀOK[200], content: {"apiVersion":"v1","cytoscapeVersion":"3.10.2"}
2024-05-06 12:08:59,049 [DEBUG] py4...: ǀǀǀReturning 'cyrest_get': {'apiVersion': 'v1', 'cytoscapeVersion': '3.10.2'}
2024-05-06 12:08:59,049 [DEBUG] py4...: ǀǀReturning 'cytoscape_version_info': {'apiVersion': 'v1', 'cytoscapeVersion': '3.10.2', 'automationAPIVersion': '1.9.0', 'py4cytoscapeVersion': '1.9.0'}
2024-05-06 12:08:59,065 [DEBUG] py4...: ǀǀCalling sandbox_get_file_info('image.png', base_url='http://127.0.0.1:1234/v1')
2024-05-06 12:08:59,065 [DEBUG] py4...: ǀǀǀCalling commands_post('filetransfer getFileInfo fileName="c:\\Users\\joaop\\Desktop\\INSA\\Documentos\\Tese_ASD_Gene_Pred\\8_Network\\image.png"', base_url='http://127.0.0.1:1234/v1')
2024-05-06 12:08:59,065 [DEBUG] py4...: ǀǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/filetransfer/getFileInfo), json: {'fileName': 'c:\\Users\\joaop\\Desktop\\INSA\\Documentos\\Tese_ASD_Gene_Pred\\8_Network\\image.png'}
2024-05-06 12:08:59,065 [DEBUG] py4...: ǀǀǀOK[200], content: {
 "data": {"filePath":"C:\\Users\\joaop\\Desktop\\INSA\\Documentos\\Tese_ASD_Gene_Pred\\8_Network\\image.png","modifiedTime":"2024-05-06 12:08:45.0309","isFile":true},
 "errors":[]
}
2024-05-06 12:08:59,065 [DEBUG] py4...: ǀǀǀReturning 'commands_post': {'filePath': 'C:\\Users\\joaop\\Desktop\\INSA\\Documentos\\Tese_ASD_Gene_Pred\\8_Network\\image.png', 'modifiedTime': '2024-05-06 12:08:45.0309', 'isFile': True}
2024-05-06 12:08:59,065 [DEBUG] py4...: ǀǀReturning 'sandbox_get_file_info': {'filePath': 'C:\\Users\\joaop\\Desktop\\INSA\\Documentos\\Tese_ASD_Gene_Pred\\8_Network\\image.png', 'modifiedTime': '2024-05-06 12:08:45.0309', 'isFile': True}
2024-05-06 12:08:59,065 [DEBUG] py4...: ǀǀCalling sandbox_remove_file('image.png', base_url='http://127.0.0.1:1234/v1')
2024-05-06 12:08:59,065 [DEBUG] py4...: ǀǀǀCalling commands_post('filetransfer removeFile fileName="c:\\Users\\joaop\\Desktop\\INSA\\Documentos\\Tese_ASD_Gene_Pred\\8_Network\\image.png"', base_url='http://127.0.0.1:1234/v1')
2024-05-06 12:08:59,065 [DEBUG] py4...: ǀǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/filetransfer/removeFile), json: {'fileName': 'c:\\Users\\joaop\\Desktop\\INSA\\Documentos\\Tese_ASD_Gene_Pred\\8_Network\\image.png'}
2024-05-06 12:08:59,099 [DEBUG] py4...: ǀǀǀOK[200], content: {
 "data": {"filePath":"C:\\Users\\joaop\\Desktop\\INSA\\Documentos\\Tese_ASD_Gene_Pred\\8_Network\\image.png","existed":true},
 "errors":[]
}
2024-05-06 12:08:59,099 [DEBUG] py4...: ǀǀǀReturning 'commands_post': {'filePath': 'C:\\Users\\joaop\\Desktop\\INSA\\Documentos\\Tese_ASD_Gene_Pred\\8_Network\\image.png', 'existed': True}
2024-05-06 12:08:59,100 [DEBUG] py4...: ǀǀReturning 'sandbox_remove_file': {'filePath': 'C:\\Users\\joaop\\Desktop\\INSA\\Documentos\\Tese_ASD_Gene_Pred\\8_Network\\image.png', 'existed': True}
2024-05-06 12:08:59,100 [DEBUG] py4...: ǀǀCalling commands_post('view export png Zoom="100" outputFile="C:\\Users\\joaop\\Desktop\\INSA\\Documentos\\Tese_ASD_Gene_Pred\\8_Network\\image.png" view="SUID:1216832"', base_url='http://127.0.0.1:1234/v1')
2024-05-06 12:08:59,101 [DEBUG] py4...: ǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/view/export%20png), json: {'Zoom': '100', 'outputFile': 'C:\\Users\\joaop\\Desktop\\INSA\\Documentos\\Tese_ASD_Gene_Pred\\8_Network\\image.png', 'view': 'SUID:1216832'}
2024-05-06 12:08:59,151 [DEBUG] py4...: ǀǀOK[200], content: {
 "data": {"file":"C:\\Users\\joaop\\Desktop\\INSA\\Documentos\\Tese_ASD_Gene_Pred\\8_Network\\image.png"},
 "errors":[]
}
2024-05-06 12:08:59,151 [DEBUG] py4...: ǀǀReturning 'commands_post': {'file': 'C:\\Users\\joaop\\Desktop\\INSA\\Documentos\\Tese_ASD_Gene_Pred\\8_Network\\image.png'}
2024-05-06 12:08:59,151 [DEBUG] py4...: ǀReturning 'export_image': {'file': 'C:\\Users\\joaop\\Desktop\\INSA\\Documentos\\Tese_ASD_Gene_Pred\\8_Network\\image.png'}
2024-05-06 12:08:59,151 [DEBUG] py4...: ǀCalling sandbox_get_from('image.png', overwrite=True, sandbox_name=None, base_url='http://127.0.0.1:1234/v1')
2024-05-06 12:08:59,151 [DEBUG] py4...: ǀǀCalling commands_post('filetransfer fromSandbox fileName="c:\\Users\\joaop\\Desktop\\INSA\\Documentos\\Tese_ASD_Gene_Pred\\8_Network\\image.png"', base_url='http://127.0.0.1:1234/v1')
2024-05-06 12:08:59,151 [DEBUG] py4...: ǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/filetransfer/fromSandbox), json: {'fileName': 'c:\\Users\\joaop\\Desktop\\INSA\\Documentos\\Tese_ASD_Gene_Pred\\8_Network\\image.png'}
2024-05-06 12:08:59,166 [DEBUG] py4...: ǀǀOK[200], content: {
 "data": {"filePath":"C:\\Users\\joaop\\Desktop\\INSA\\Documentos\\Tese_ASD_Gene_Pred\\8_Network\\image.png","modifiedTime":"2024-05-06 12:08:59.0151","fileByteCount":11057,"fileBase64":"\u003d"},
 "errors":[]
}
2024-05-06 12:08:59,166 [DEBUG] py4...: ǀǀReturning 'commands_post': {'filePath': 'C:\\Users\\joaop\\Desktop\\INSA\\Documentos\\Tese_ASD_Gene_Pred\\8_Network\\image.png', 'modifiedTime': '2024-05-06 12:08:59.0151', 'fileByteCount': 11057, 'fileBase64': ''}
2024-05-06 12:08:59,166 [DEBUG] py4...: ǀReturning 'sandbox_get_from': {'filePath': 'C:\\Users\\joaop\\Desktop\\INSA\\Documentos\\Tese_ASD_Gene_Pred\\8_Network\\image.png', 'modifiedTime': '2024-05-06 12:08:59.0151', 'fileByteCount': 11057}
2024-05-06 12:08:59,166 [DEBUG] py4...: Returning 'notebook_export_show_image': <IPython.core.display.Image object>
2024-05-06 12:08:59,166 [DEBUG] py4...: --------------------
2024-05-06 12:09:14,768 [DEBUG] py4...: Calling get_table_columns()
2024-05-06 12:09:14,768 [DEBUG] py4...: ǀCalling get_network_suid(None, 'http://127.0.0.1:1234/v1')
2024-05-06 12:09:14,768 [DEBUG] py4...: ǀǀCalling commands_post('network get attribute network="current" namespace="default" columnList="SUID"', base_url='http://127.0.0.1:1234/v1')
2024-05-06 12:09:14,768 [DEBUG] py4...: ǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/get%20attribute), json: {'network': 'current', 'namespace': 'default', 'columnList': 'SUID'}
2024-05-06 12:09:14,782 [DEBUG] py4...: ǀǀOK[200], content: {
 "data": [ {
  "SUID": 1216740
}
],
 "errors":[]
}
2024-05-06 12:09:14,782 [DEBUG] py4...: ǀǀReturning 'commands_post': [{'SUID': 1216740}]
2024-05-06 12:09:14,782 [DEBUG] py4...: ǀReturning 'get_network_suid': 1216740
2024-05-06 12:09:14,782 [DEBUG] py4...: ǀCalling get_table_column_types('node', namespace='default', network=None, base_url='http://127.0.0.1:1234/v1')
2024-05-06 12:09:14,782 [DEBUG] py4...: ǀǀCalling get_network_suid(None, base_url='http://127.0.0.1:1234/v1')
2024-05-06 12:09:14,782 [DEBUG] py4...: ǀǀǀCalling commands_post('network get attribute network="current" namespace="default" columnList="SUID"', base_url='http://127.0.0.1:1234/v1')
2024-05-06 12:09:14,782 [DEBUG] py4...: ǀǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/get%20attribute), json: {'network': 'current', 'namespace': 'default', 'columnList': 'SUID'}
2024-05-06 12:09:14,797 [DEBUG] py4...: ǀǀǀOK[200], content: {
 "data": [ {
  "SUID": 1216740
}
],
 "errors":[]
}
2024-05-06 12:09:14,797 [DEBUG] py4...: ǀǀǀReturning 'commands_post': [{'SUID': 1216740}]
2024-05-06 12:09:14,797 [DEBUG] py4...: ǀǀReturning 'get_network_suid': 1216740
2024-05-06 12:09:14,797 [DEBUG] py4...: ǀǀCalling cyrest_get('networks/1216740/tables/defaultnode/columns', base_url='http://127.0.0.1:1234/v1')
2024-05-06 12:09:14,797 [DEBUG] py4...: ǀǀHTTP GET(http://127.0.0.1:1234/v1/networks/1216740/tables/defaultnode/columns)
2024-05-06 12:09:14,813 [DEBUG] py4...: ǀǀOK[200], content: [{"name":"SUID","type":"Long","immutable":true,"primaryKey":true},{"name":"shared name","type":"String","immutable":true,"primaryKey":false},{"name":"name","type":"String","immutable":true,"primaryKey":false},{"name":"selected","type":"Boolean","immutable":true,"primaryKey":false},{"name":"id","type":"String","immutable":false,"primaryKey":false},{"name":"score","type":"Integer","immutable":false,"primaryKey":false},{"name":"group","type":"String","immutable":false,"primaryKey":false}]
2024-05-06 12:09:14,813 [DEBUG] py4...: ǀǀReturning 'cyrest_get': [{'name': 'SUID', 'type': 'Long', 'immutable': True, 'primaryKey': True}, {'name': 'shared name', 'type': 'String', 'immutable': True, 'primaryKey': False}, {'name': 'name', 'type': 'String', 'immutable': True, 'primaryKey': False}, {'name': 'selected', 'type': 'Boolean', 'immutable': True, 'primaryKey': False}, {'name': 'id', 'type': 'String', 'immutable': False, 'primaryKey': False}, {'name': 'score', 'type': 'Integer', 'immutable': False, 'primaryKey': False}, {'name': 'group', 'type': 'String', 'immutable': False, 'primaryKey': False}]
2024-05-06 12:09:14,813 [DEBUG] py4...: ǀReturning 'get_table_column_types': {'SUID': 'Long', 'shared name': 'String', 'name': 'String', 'selected': 'Boolean', 'id': 'String', 'score': 'Integer', 'group': 'String'}
2024-05-06 12:09:14,813 [DEBUG] py4...: ǀCalling cyrest_get('networks/1216740/tables/defaultnode/columns/SUID', base_url='http://127.0.0.1:1234/v1')
2024-05-06 12:09:14,813 [DEBUG] py4...: ǀHTTP GET(http://127.0.0.1:1234/v1/networks/1216740/tables/defaultnode/columns/SUID)
2024-05-06 12:09:14,813 [DEBUG] py4...: ǀOK[200], content: {"name":"SUID","values":[1216774,1216777,1216780,1216767]}
2024-05-06 12:09:14,813 [DEBUG] py4...: ǀReturning 'cyrest_get': {'name': 'SUID', 'values': [1216774, 1216777, 1216780, 1216767]}
2024-05-06 12:09:14,813 [DEBUG] py4...: ǀCalling cyrest_get('networks/1216740/tables/defaultnode/columns/SUID', base_url='http://127.0.0.1:1234/v1')
2024-05-06 12:09:14,813 [DEBUG] py4...: ǀHTTP GET(http://127.0.0.1:1234/v1/networks/1216740/tables/defaultnode/columns/SUID)
2024-05-06 12:09:14,829 [DEBUG] py4...: ǀOK[200], content: {"name":"SUID","values":[1216774,1216777,1216780,1216767]}
2024-05-06 12:09:14,829 [DEBUG] py4...: ǀReturning 'cyrest_get': {'name': 'SUID', 'values': [1216774, 1216777, 1216780, 1216767]}
2024-05-06 12:09:14,829 [DEBUG] py4...: ǀCalling cyrest_get('networks/1216740/tables/defaultnode/columns/shared name', base_url='http://127.0.0.1:1234/v1')
2024-05-06 12:09:14,829 [DEBUG] py4...: ǀHTTP GET(http://127.0.0.1:1234/v1/networks/1216740/tables/defaultnode/columns/shared%20name)
2024-05-06 12:09:14,844 [DEBUG] py4...: ǀOK[200], content: {"name":"shared name","values":["node 1","node 2","node 3","node 0"]}
2024-05-06 12:09:14,844 [DEBUG] py4...: ǀReturning 'cyrest_get': {'name': 'shared name', 'values': ['node 1', 'node 2', 'node 3', 'node 0']}
2024-05-06 12:09:14,844 [DEBUG] py4...: ǀCalling cyrest_get('networks/1216740/tables/defaultnode/columns/name', base_url='http://127.0.0.1:1234/v1')
2024-05-06 12:09:14,844 [DEBUG] py4...: ǀHTTP GET(http://127.0.0.1:1234/v1/networks/1216740/tables/defaultnode/columns/name)
2024-05-06 12:09:14,860 [DEBUG] py4...: ǀOK[200], content: {"name":"name","values":["node 1","node 2","node 3","node 0"]}
2024-05-06 12:09:14,860 [DEBUG] py4...: ǀReturning 'cyrest_get': {'name': 'name', 'values': ['node 1', 'node 2', 'node 3', 'node 0']}
2024-05-06 12:09:14,860 [DEBUG] py4...: ǀCalling cyrest_get('networks/1216740/tables/defaultnode/columns/selected', base_url='http://127.0.0.1:1234/v1')
2024-05-06 12:09:14,860 [DEBUG] py4...: ǀHTTP GET(http://127.0.0.1:1234/v1/networks/1216740/tables/defaultnode/columns/selected)
2024-05-06 12:09:14,868 [DEBUG] py4...: ǀOK[200], content: {"name":"selected","values":[false,false,false,false]}
2024-05-06 12:09:14,868 [DEBUG] py4...: ǀReturning 'cyrest_get': {'name': 'selected', 'values': [False, False, False, False]}
2024-05-06 12:09:14,876 [DEBUG] py4...: ǀCalling cyrest_get('networks/1216740/tables/defaultnode/columns/id', base_url='http://127.0.0.1:1234/v1')
2024-05-06 12:09:14,876 [DEBUG] py4...: ǀHTTP GET(http://127.0.0.1:1234/v1/networks/1216740/tables/defaultnode/columns/id)
2024-05-06 12:09:14,876 [DEBUG] py4...: ǀOK[200], content: {"name":"id","values":["node 1","node 2","node 3","node 0"]}
2024-05-06 12:09:14,876 [DEBUG] py4...: ǀReturning 'cyrest_get': {'name': 'id', 'values': ['node 1', 'node 2', 'node 3', 'node 0']}
2024-05-06 12:09:14,876 [DEBUG] py4...: ǀCalling cyrest_get('networks/1216740/tables/defaultnode/columns/score', base_url='http://127.0.0.1:1234/v1')
2024-05-06 12:09:14,876 [DEBUG] py4...: ǀHTTP GET(http://127.0.0.1:1234/v1/networks/1216740/tables/defaultnode/columns/score)
2024-05-06 12:09:14,891 [DEBUG] py4...: ǀOK[200], content: {"name":"score","values":[10,15,5,20]}
2024-05-06 12:09:14,891 [DEBUG] py4...: ǀReturning 'cyrest_get': {'name': 'score', 'values': [10, 15, 5, 20]}
2024-05-06 12:09:14,891 [DEBUG] py4...: ǀCalling cyrest_get('networks/1216740/tables/defaultnode/columns/group', base_url='http://127.0.0.1:1234/v1')
2024-05-06 12:09:14,891 [DEBUG] py4...: ǀHTTP GET(http://127.0.0.1:1234/v1/networks/1216740/tables/defaultnode/columns/group)
2024-05-06 12:09:14,907 [DEBUG] py4...: ǀOK[200], content: {"name":"group","values":["A","B","B","A"]}
2024-05-06 12:09:14,907 [DEBUG] py4...: ǀReturning 'cyrest_get': {'name': 'group', 'values': ['A', 'B', 'B', 'A']}
2024-05-06 12:09:14,907 [DEBUG] py4...: Returning 'get_table_columns':             SUID shared name    name  selected      id  score group
1216774  1216774      node 1  node 1     False  node 1     10     A
1216777  1216777      node 2  node 2     False  node 2     15     B
1216780  1216780      node 3  node 3     False  node 3      5     B
1216767  1216767      node 0  node 0     False  node 0     20     A
2024-05-06 12:09:14,907 [DEBUG] py4...: --------------------
2024-05-06 12:10:59,938 [DEBUG] py4...: Calling commands_run('string disease query disease="breast cancer" species="Homo sapiens" limit=150 cutoff=0.9')
2024-05-06 12:10:59,938 [DEBUG] py4...: ǀCalling commands_get('string disease query disease="breast cancer" species="Homo sapiens" limit=150 cutoff=0.9', base_url='http://127.0.0.1:1234/v1')
2024-05-06 12:10:59,939 [DEBUG] py4...: ǀHTTP GET(http://127.0.0.1:1234/v1/commands/string/disease%20query), params: {'disease': 'breast cancer', 'species': 'Homo sapiens', 'limit': '150', 'cutoff': '0.9'}
2024-05-06 12:11:05,928 [DEBUG] py4...: ǀOK[200], content: Loaded network 'STRING network - breast cancer' with 150 nodes and 731 edges
Finished

2024-05-06 12:11:05,928 [DEBUG] py4...: ǀReturning 'commands_get': ["Loaded network 'STRING network - breast cancer' with 150 nodes and 731 edges"]
2024-05-06 12:11:05,928 [DEBUG] py4...: Returning 'commands_run': ["Loaded network 'STRING network - breast cancer' with 150 nodes and 731 edges"]
2024-05-06 12:11:05,928 [DEBUG] py4...: --------------------
2024-05-06 12:11:43,704 [DEBUG] py4...: Calling get_network_list()
2024-05-06 12:11:43,704 [DEBUG] py4...: ǀCalling cyrest_get('networks.names', base_url='http://127.0.0.1:1234/v1')
2024-05-06 12:11:43,705 [DEBUG] py4...: ǀHTTP GET(http://127.0.0.1:1234/v1/networks.names)
2024-05-06 12:11:43,714 [DEBUG] py4...: ǀOK[200], content: [{"name":"my first network","SUID":1216740},{"name":"STRING network - breast cancer","SUID":1216901}]
2024-05-06 12:11:43,715 [DEBUG] py4...: ǀReturning 'cyrest_get': [{'name': 'my first network', 'SUID': 1216740}, {'name': 'STRING network - breast cancer', 'SUID': 1216901}]
2024-05-06 12:11:43,716 [DEBUG] py4...: Returning 'get_network_list': ['my first network', 'STRING network - breast cancer']
2024-05-06 12:11:43,716 [DEBUG] py4...: --------------------
2024-05-06 12:12:02,381 [DEBUG] py4...: Calling layout_network('circular', 'STRING network - breast  cancer')
2024-05-06 12:12:02,381 [DEBUG] py4...: ǀCalling get_network_suid('STRING network - breast  cancer', base_url='http://127.0.0.1:1234/v1')
2024-05-06 12:12:02,381 [DEBUG] py4...: ǀǀCalling get_network_list(base_url='http://127.0.0.1:1234/v1')
2024-05-06 12:12:02,383 [DEBUG] py4...: ǀǀǀCalling cyrest_get('networks.names', base_url='http://127.0.0.1:1234/v1')
2024-05-06 12:12:02,383 [DEBUG] py4...: ǀǀǀHTTP GET(http://127.0.0.1:1234/v1/networks.names)
2024-05-06 12:12:02,392 [DEBUG] py4...: ǀǀǀOK[200], content: [{"name":"my first network","SUID":1216740},{"name":"STRING network - breast cancer","SUID":1216901}]
2024-05-06 12:12:02,392 [DEBUG] py4...: ǀǀǀReturning 'cyrest_get': [{'name': 'my first network', 'SUID': 1216740}, {'name': 'STRING network - breast cancer', 'SUID': 1216901}]
2024-05-06 12:12:02,393 [DEBUG] py4...: ǀǀReturning 'get_network_list': ['my first network', 'STRING network - breast cancer']
2024-05-06 12:12:02,394 [DEBUG] py4...: ǀ'get_network_suid' exception CyError('In get_network_suid(): Network does not exist for name "STRING network - breast  cancer"')
2024-05-06 12:12:02,394 [DEBUG] py4...: 'layout_network' exception CyError('In get_network_suid(): Network does not exist for name "STRING network - breast  cancer"')
2024-05-06 12:12:02,395 [DEBUG] py4...: --------------------
2024-05-06 12:12:13,785 [DEBUG] py4...: Calling layout_network('circular', 'STRING network - breast cancer')
2024-05-06 12:12:13,786 [DEBUG] py4...: ǀCalling get_network_suid('STRING network - breast cancer', base_url='http://127.0.0.1:1234/v1')
2024-05-06 12:12:13,786 [DEBUG] py4...: ǀǀCalling get_network_list(base_url='http://127.0.0.1:1234/v1')
2024-05-06 12:12:13,787 [DEBUG] py4...: ǀǀǀCalling cyrest_get('networks.names', base_url='http://127.0.0.1:1234/v1')
2024-05-06 12:12:13,787 [DEBUG] py4...: ǀǀǀHTTP GET(http://127.0.0.1:1234/v1/networks.names)
2024-05-06 12:12:13,793 [DEBUG] py4...: ǀǀǀOK[200], content: [{"name":"my first network","SUID":1216740},{"name":"STRING network - breast cancer","SUID":1216901}]
2024-05-06 12:12:13,794 [DEBUG] py4...: ǀǀǀReturning 'cyrest_get': [{'name': 'my first network', 'SUID': 1216740}, {'name': 'STRING network - breast cancer', 'SUID': 1216901}]
2024-05-06 12:12:13,795 [DEBUG] py4...: ǀǀReturning 'get_network_list': ['my first network', 'STRING network - breast cancer']
2024-05-06 12:12:13,795 [DEBUG] py4...: ǀǀCalling commands_post('network get attribute network="STRING network - breast cancer" namespace="default" columnList="SUID"', base_url='http://127.0.0.1:1234/v1')
2024-05-06 12:12:13,795 [DEBUG] py4...: ǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/get%20attribute), json: {'network': 'STRING network - breast cancer', 'namespace': 'default', 'columnList': 'SUID'}
2024-05-06 12:12:13,808 [DEBUG] py4...: ǀǀOK[200], content: {
 "data": [ {
  "SUID": 1216901
}
],
 "errors":[]
}
2024-05-06 12:12:13,809 [DEBUG] py4...: ǀǀReturning 'commands_post': [{'SUID': 1216901}]
2024-05-06 12:12:13,809 [DEBUG] py4...: ǀReturning 'get_network_suid': 1216901
2024-05-06 12:12:13,810 [DEBUG] py4...: ǀCalling commands_post('layout circular network="SUID:1216901"', base_url='http://127.0.0.1:1234/v1')
2024-05-06 12:12:13,810 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/layout/circular), json: {'network': 'SUID:1216901'}
2024-05-06 12:12:13,840 [DEBUG] py4...: ǀOK[200], content: {
 "data": {},
 "errors":[]
}
2024-05-06 12:12:13,840 [DEBUG] py4...: ǀReturning 'commands_post': {}
2024-05-06 12:12:13,840 [DEBUG] py4...: Returning 'layout_network': {}
2024-05-06 12:12:13,840 [DEBUG] py4...: --------------------
2024-05-06 12:12:18,876 [DEBUG] py4...: Calling notebook_export_show_image()
2024-05-06 12:12:18,876 [DEBUG] py4...: ǀCalling export_image(filename='image.png', type='PNG', resolution=None, units=None, height=None, width=None, zoom=None, network=None, base_url='http://127.0.0.1:1234/v1', overwrite_file=True)
2024-05-06 12:12:18,877 [DEBUG] py4...: ǀǀCalling get_network_view_suid(None, base_url='http://127.0.0.1:1234/v1')
2024-05-06 12:12:18,877 [DEBUG] py4...: ǀǀǀCalling get_network_views(None, base_url='http://127.0.0.1:1234/v1')
2024-05-06 12:12:18,877 [DEBUG] py4...: ǀǀǀǀCalling get_network_suid(None, base_url='http://127.0.0.1:1234/v1')
2024-05-06 12:12:18,878 [DEBUG] py4...: ǀǀǀǀǀCalling commands_post('network get attribute network="current" namespace="default" columnList="SUID"', base_url='http://127.0.0.1:1234/v1')
2024-05-06 12:12:18,878 [DEBUG] py4...: ǀǀǀǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/get%20attribute), json: {'network': 'current', 'namespace': 'default', 'columnList': 'SUID'}
2024-05-06 12:12:18,892 [DEBUG] py4...: ǀǀǀǀǀOK[200], content: {
 "data": [ {
  "SUID": 1216901
}
],
 "errors":[]
}
2024-05-06 12:12:18,892 [DEBUG] py4...: ǀǀǀǀǀReturning 'commands_post': [{'SUID': 1216901}]
2024-05-06 12:12:18,893 [DEBUG] py4...: ǀǀǀǀReturning 'get_network_suid': 1216901
2024-05-06 12:12:18,893 [DEBUG] py4...: ǀǀǀǀCalling cyrest_get('networks/1216901/views', base_url='http://127.0.0.1:1234/v1')
2024-05-06 12:12:18,894 [DEBUG] py4...: ǀǀǀǀHTTP GET(http://127.0.0.1:1234/v1/networks/1216901/views)
2024-05-06 12:12:18,902 [DEBUG] py4...: ǀǀǀǀOK[200], content: [1220733]
2024-05-06 12:12:18,903 [DEBUG] py4...: ǀǀǀǀReturning 'cyrest_get': [1220733]
2024-05-06 12:12:18,903 [DEBUG] py4...: ǀǀǀReturning 'get_network_views': [1220733]
2024-05-06 12:12:18,904 [DEBUG] py4...: ǀǀReturning 'get_network_view_suid': 1220733
2024-05-06 12:12:18,904 [DEBUG] py4...: ǀǀCalling cytoscape_version_info(base_url='http://127.0.0.1:1234/v1')
2024-05-06 12:12:18,905 [DEBUG] py4...: ǀǀǀCalling cyrest_get('version', base_url='http://127.0.0.1:1234/v1')
2024-05-06 12:12:18,905 [DEBUG] py4...: ǀǀǀHTTP GET(http://127.0.0.1:1234/v1/version)
2024-05-06 12:12:18,912 [DEBUG] py4...: ǀǀǀOK[200], content: {"apiVersion":"v1","cytoscapeVersion":"3.10.2"}
2024-05-06 12:12:18,913 [DEBUG] py4...: ǀǀǀReturning 'cyrest_get': {'apiVersion': 'v1', 'cytoscapeVersion': '3.10.2'}
2024-05-06 12:12:18,913 [DEBUG] py4...: ǀǀReturning 'cytoscape_version_info': {'apiVersion': 'v1', 'cytoscapeVersion': '3.10.2', 'automationAPIVersion': '1.9.0', 'py4cytoscapeVersion': '1.9.0'}
2024-05-06 12:12:18,914 [DEBUG] py4...: ǀǀCalling sandbox_get_file_info('image.png', base_url='http://127.0.0.1:1234/v1')
2024-05-06 12:12:18,914 [DEBUG] py4...: ǀǀǀCalling commands_post('filetransfer getFileInfo fileName="c:\\Users\\joaop\\Desktop\\INSA\\Documentos\\Tese_ASD_Gene_Pred\\8_Network\\image.png"', base_url='http://127.0.0.1:1234/v1')
2024-05-06 12:12:18,915 [DEBUG] py4...: ǀǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/filetransfer/getFileInfo), json: {'fileName': 'c:\\Users\\joaop\\Desktop\\INSA\\Documentos\\Tese_ASD_Gene_Pred\\8_Network\\image.png'}
2024-05-06 12:12:18,925 [DEBUG] py4...: ǀǀǀOK[200], content: {
 "data": {"filePath":"C:\\Users\\joaop\\Desktop\\INSA\\Documentos\\Tese_ASD_Gene_Pred\\8_Network\\image.png","modifiedTime":"2024-05-06 12:08:59.0166","isFile":true},
 "errors":[]
}
2024-05-06 12:12:18,926 [DEBUG] py4...: ǀǀǀReturning 'commands_post': {'filePath': 'C:\\Users\\joaop\\Desktop\\INSA\\Documentos\\Tese_ASD_Gene_Pred\\8_Network\\image.png', 'modifiedTime': '2024-05-06 12:08:59.0166', 'isFile': True}
2024-05-06 12:12:18,926 [DEBUG] py4...: ǀǀReturning 'sandbox_get_file_info': {'filePath': 'C:\\Users\\joaop\\Desktop\\INSA\\Documentos\\Tese_ASD_Gene_Pred\\8_Network\\image.png', 'modifiedTime': '2024-05-06 12:08:59.0166', 'isFile': True}
2024-05-06 12:12:18,927 [DEBUG] py4...: ǀǀCalling sandbox_remove_file('image.png', base_url='http://127.0.0.1:1234/v1')
2024-05-06 12:12:18,927 [DEBUG] py4...: ǀǀǀCalling commands_post('filetransfer removeFile fileName="c:\\Users\\joaop\\Desktop\\INSA\\Documentos\\Tese_ASD_Gene_Pred\\8_Network\\image.png"', base_url='http://127.0.0.1:1234/v1')
2024-05-06 12:12:18,927 [DEBUG] py4...: ǀǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/filetransfer/removeFile), json: {'fileName': 'c:\\Users\\joaop\\Desktop\\INSA\\Documentos\\Tese_ASD_Gene_Pred\\8_Network\\image.png'}
2024-05-06 12:12:18,927 [DEBUG] py4...: ǀǀǀOK[200], content: {
 "data": {"filePath":"C:\\Users\\joaop\\Desktop\\INSA\\Documentos\\Tese_ASD_Gene_Pred\\8_Network\\image.png","existed":true},
 "errors":[]
}
2024-05-06 12:12:18,939 [DEBUG] py4...: ǀǀǀReturning 'commands_post': {'filePath': 'C:\\Users\\joaop\\Desktop\\INSA\\Documentos\\Tese_ASD_Gene_Pred\\8_Network\\image.png', 'existed': True}
2024-05-06 12:12:18,939 [DEBUG] py4...: ǀǀReturning 'sandbox_remove_file': {'filePath': 'C:\\Users\\joaop\\Desktop\\INSA\\Documentos\\Tese_ASD_Gene_Pred\\8_Network\\image.png', 'existed': True}
2024-05-06 12:12:18,940 [DEBUG] py4...: ǀǀCalling commands_post('view export png Zoom="100" outputFile="C:\\Users\\joaop\\Desktop\\INSA\\Documentos\\Tese_ASD_Gene_Pred\\8_Network\\image.png" view="SUID:1220733"', base_url='http://127.0.0.1:1234/v1')
2024-05-06 12:12:18,941 [DEBUG] py4...: ǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/view/export%20png), json: {'Zoom': '100', 'outputFile': 'C:\\Users\\joaop\\Desktop\\INSA\\Documentos\\Tese_ASD_Gene_Pred\\8_Network\\image.png', 'view': 'SUID:1220733'}
2024-05-06 12:12:19,105 [DEBUG] py4...: ǀǀOK[200], content: {
 "data": {"file":"C:\\Users\\joaop\\Desktop\\INSA\\Documentos\\Tese_ASD_Gene_Pred\\8_Network\\image.png"},
 "errors":[]
}
2024-05-06 12:12:19,106 [DEBUG] py4...: ǀǀReturning 'commands_post': {'file': 'C:\\Users\\joaop\\Desktop\\INSA\\Documentos\\Tese_ASD_Gene_Pred\\8_Network\\image.png'}
2024-05-06 12:12:19,106 [DEBUG] py4...: ǀReturning 'export_image': {'file': 'C:\\Users\\joaop\\Desktop\\INSA\\Documentos\\Tese_ASD_Gene_Pred\\8_Network\\image.png'}
2024-05-06 12:12:19,107 [DEBUG] py4...: ǀCalling sandbox_get_from('image.png', overwrite=True, sandbox_name=None, base_url='http://127.0.0.1:1234/v1')
2024-05-06 12:12:19,107 [DEBUG] py4...: ǀǀCalling commands_post('filetransfer fromSandbox fileName="c:\\Users\\joaop\\Desktop\\INSA\\Documentos\\Tese_ASD_Gene_Pred\\8_Network\\image.png"', base_url='http://127.0.0.1:1234/v1')
2024-05-06 12:12:19,107 [DEBUG] py4...: ǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/filetransfer/fromSandbox), json: {'fileName': 'c:\\Users\\joaop\\Desktop\\INSA\\Documentos\\Tese_ASD_Gene_Pred\\8_Network\\image.png'}
2024-05-06 12:12:19,123 [DEBUG] py4...: ǀǀOK[200], content: {
 "data": {"filePath":"C:\\Users\\joaop\\Desktop\\INSA\\Documentos\\Tese_ASD_Gene_Pred\\8_Network\\image.png","modifiedTime":"2024-05-06 12:12:19.0090","fileByteCount":40449,"fileBase64":"iVBORw0KGgoAAAANSUhEUgAAA1QAAADpCAYAAAAj3XZrAACAAElEQVR4Xuy92W9kaXbtd/8X+4/wg3EvDPga8ADDL/fB9oUeZMOGr68By7KrZ6mlnqpb6m51q7o7s6uyBmZVZmVVzvNIZpLBIBlkcIp5ZkRwiuAcKcm2Xra/tfb5gpHMbkFOKatYVethIYYzfeeQD/HD2nvtf1EvZUySJEmSJEmSJEn6/69/cfILSZIkSZIkSZIk6R8nAZUkSZL0ldG5G/P2gw8ydv5O1p4+uW2P7t+wB3evWbOStVLqiS189JEtXvrYljJPuW388W3LL6ettjJnS5du2PyHV606m7JrVy5Y6tlDW5yf4nnfWxmzH8z/3MbCa7W4yGMb5XluK08vhOPS4bwztjKXsvt3r9rDe9fDfhmrrc7a4s8e2MKP7lnl0bRNPLljz8bvheP82NzdtM2PPbXVm9OWnnpojx/ctOLKjJ/30Uw47okt/nTCltKTlpl5atNhTdm5p1Yrz9rtxYt2bX7M5guPeD2sKTMzwXXP38/a4/MZS9/M2kLYH89gcuIuz1tZuWPzT35g2Ykfh+fwiGu6fuWipScfWCWfseufzNslHPssG467alNPH3BdhdUZe/DRor3/g7DPmQVbmJ2wm9cv8dpLC5M293TB3n1z3t7/ccay6RmbnX5i8zNPeM1qYc4u38ra+U8zlpoOa3t4y6anHllx1e+18Oy2zV8ds5UHl20u/cTu3Po0rPce72Vm4oE9u/yxPbnwnuXD3w3r4TXD3+bpk7t25cGCnb+ZsafpRZsL93/39hVbzfrfTZIk6Z9DAipJkiTpK6FbE1l749dp+/5vqvbB5CD8wF4mSEHYPvvOuzZIpamlTz/h963qIsFo8ePrlj7zUdi2EoTjFqhG0P38TXsj/T17d+eyjQ2u2cPC7eE5oZl3psIx+9Typ3N+zXBeQNPiz+5b+o3rNhir2/Og0fVUUjM2feahXfqjb9hgassqU/N+zQTU5r7zIBzXoRb/YoLfx+13Fz+2j9JnbGWQokbXm5tbsttnpm0tNbD29HNbGl/ierCdz+HBn9igM0ZV599Kjs3y2FtXsvbumbRlwrFQg+v17dnJrP36a9M2OTagxi/jvH4/jfKC/ea7c/YofA/d/WCD54v3cv3Ogp35IG2p7ICql/y82F5dDKD40RkbrKSo/DN/vjge+8xf/tCeL6XtaHHa9gO4xWcI3R7P2plL4byFAVUtznNN8bqSJEn/HBJQSZIkSV8JnQ8/2scCSH3j/yjx9dFs/YXt6bNvE6Zmv/+f2/7Uiw7G/PmrCUy5RrddXL1IkPrf3nvTPji8avfW4TAdb585ewxUB1P9F7YtvHmPMFX4n39mg/ONF7YVHgLutuxwssvXrdnyi+f95n3C1N65n9vB+dYL224sfDSEqZWjlFUKc8Nt2fEFq03sEaig+kznxfPe/9YQqA7aH7yw7fLFzBCmMlNHVs4dn3fy9oJd+nHFfvhvHxGo0ldePO9b30oPgerR+YMXtl26Pj+EqVT2uRVWj7dV5h5ZegSo+kvPXjh29qN37GB+0gbZlB0tvPh3+/Te/BCmpovPbXXFoVGSJOmfUwIqSZIk6SuhUj5j33tvjjB1fnLPqsVjGIBWrl1JHKppay95qdnw2NRTh6npFevPvPijvFKcse9nfkaoOn9wlZ9Ht+duZMJxAKo96yzmX9hWfhSuN1YLMFW3ncsvbquF9aHcDzB1MLVu1fyL682dm7TncKg+6FhnfPWFbUuFCYIUgar3IoBAj87PWStAUSt1aNXci9tyM2ftOYHqvK1X77ywLZtZsMz0EYFqYXrrpfOef3MucagOrLz84npvfZAN13Wgmn9UfWHbUjYTQOqIQDU9v/3SebM3PiJMHS1PWS2XfmFb/slNwhS0ufwiUK2uBKDKHThQ5XovnVeSJOmfQwIqSZIkSZIkSZKkV5SASpIkSZIkSZIk6RUloJIkSZIkSZIkSXpFCagkSZIkSZIkSZJeUQIqSZIkSZIkSZKkV5SASpIkSZIkSZIk6RUloJIkSZIkSZIkSXpFCagkSZIkSZIkSZJeUQIqSZIkSZIkSZKkV5SASpIkSZIkSZIk6RUloJIkSZIkSZIkSXpFCagkSZIkSZIkSZJeUQIqSZIkSZIkSZKkV5SASpIkSZIkSZIk6RUloJIkSZIkSZIkSXpFCagkSZIkSZIkSZJeUQIqSZIkSZIkSZKkV5SASpIkSZIkSZIk6RUloJIkSZIkSZIkSXpFCagkSZIkSZIkSZJeUQIqSZIkSZIkSZKkV5SASpIkSZIkSZIk6RUloJIkSZIkSZIkSXpFCagkSZIkSZIkSZJeUQIqSZIkSZIkSZKkV5SASpIkSZIkSZIk6RUloJIkSZIkSZIkSXpFCagkSZIkSZIkSZJeUQIqSZIkSZIkSZKkV5SASpIkSZIkSZIk6RUloJIkSZIkSZIkSXpFCagkSZIkSZIkSZJeUQIqSZIkSZIkSZKkV5SASpIkSZIkSZIk6RUloJIkSZIkSZIkSXpFCagkSZIkSZIkSZJeUQIqSZIkSZIkSZKkV5SASpIkSZIkSZIk6RUloJIkSZIkSZIkSXpFCagkSZIkSZIkSZJeUQIqSZIkSZIkSZKkV5SASpIkSZIkSZIk6RUloJIkSZIkSZIkSXpFCagkSZIkSZIkSZJeUQIqSZKkz0nNatbKuaWgOSutzlh+edpWss8st5gKmrJi+K5WnLdqIWON8kLQ/EvnkCRJkiTp85WASpIk6Z9Zq4sZu/9wwUq5jKXv37bH587bk/fO2+KzZ3bxuzP24dfTdu3HGbswdst+88vL9uHbMzZx75nNpM5ZevKMZdLv21z2lo3PnLPx2XM2OXXD3rv41/bXH/7A5go3bWlhyh7fv27Tzx7Y0yd3CGaNysJL65AkSZIk6fVLQCVJkvRPVHVuwbJ/tWBLby3Yowdp+8YP0/bG99L2Jz+ZscfvX7DVWw9t9fZDe/iLOTv/RtqWxgbUxV9k7Pt/8NAu/7RoizMPCVMXfvojK2QuEqS2Bilq/fCZ/Tr9NZscjLkepe36uVm7/u6sTT2YtLs3Ltudix9bM0BVOZ8JIDdL16tekqMlSZIkSa9bAipJkqRX0G+WHtt35+7wNf3dWev8adcOAiT98i8XbOzawP6HP7jN10/eumODVNY6tyZs9u3FIUwtjR3ZpbPz9r3/8bZlUwNbnM3YYH8qKEWNz71LmFpY+sQ6B+PHMBV07dyMlcMxP/rD81aa3LOZb5619Bu/tsx3z9mDO1ft1swdezB5y3JLKVvOTlp+OW2VAFrl/MxL9yFJkiRJ0j9NAipJkqR/hFaL8/bhQsY+yGTsytKM/fGv/sJ+9MkH9pupe5b61ow9+6OM3fjXKXtytmsfBJACTI1dH9jM1XsEqqOgfjFvj9/O2eKHB1Z6vGmNSsnmnnZtMb1hrUbJSrm7tt+btP5W1iq1ads8Stnm4ZTV2im72XnLgerogwBUs/aTP7xhZ/+nSSs+2bHz/+l37M4f/MQGY5P2wexVO5O+ZA+3MnZt8oaNP7ttD57eJFStZFNWK758b5IkSZIkvboEVJIkSb9HpfSCZS7MW/bago09eWwXJyft4rNnNnV0ZB8NGva1p9f4mj63YvtjR3ZwfmD9AEqPn9bt2oMdyxfattWt2tZG3TrNnB0d9mx7o2XN2ort7Wzabq9t662ira8FdUq2t7turepi2DdvR/s921yv2WanYt2wvdsp2HLjsXXWVi2fyVsldWilqX0rXHsWQOqZ1X94OVz/GWEqNShQT3eX7KcfvxW+e9cuL1615QBUCLfAvSHgAiWC0Mn7liRJkiTpHy8BlSRJ0ohWyyn7NPeprZYmberttO2nBlTq6qLNPX9OpQYD+0n2oY0N6nbhoOJQVC5bq7xs3Vbe9nc2AjjVAwyV+brb71i3WbCDva0AUuvWaRX4/QH2W6/bWn3ZNroV2+mtBbAqW7u5ahsBpDa6ZW5bqy1bp5Hj+vB+q1sLEFYgeLVqS1a98cj2Pp2yrbmsvTd31a7XCzb9vGg32+NhrZmhLnw/Y+e+kbZLb87b0vyU3bz2sd27fUWBFpIkSZL0T5CASpIkKdFicdK+OfOX9kb6x/Yn039lz85MW+p/bxGotqd2bTqAVOroyHJ723a43wvQUw2As0RY2u116Pq06yu2318nTAGG9sL3va2mFfOztrVeDZ/Dtm7V1tuArRqBanuzYTvbazzXRrsUthWtVV3iOQBN7cYqnSvAFNbZCdAGcMNnuFv97Zb1wjlwvUZr1e7lHttyd9GuLV8lSP3JhTdtan/O3nkjbb/6L3I2OzawiXez9vgv5236vawtZ6eYFjiXHrf8cuql5yJJkiRJ0u+XgEqSpK+0ioWMvTk3b99Nz9lPly/Znyz+wv7gN39mf3zxFzZ1edb2Eodqq9AOELVFgAH8oCRvt7dGp2lna41As9WtEJLWAxRtd2ss99sMr50AROtrAKWS9TYadLS2AozVyksBsmosCTza6xGUOq2c9TebPC8+49xb4ZztRs6aAapQArjRBmjlrBWACmvZDJ974RjA185mK5y75ucKnx8U7lvmIGtPrmYIUlD6vQO78Y0Zq4f30OyFRaYCVgL04Zkghh0AF8sDJUmSJEn6/RJQSZL0lVRtJWWVuUn7zeKC/flU2n7+cdve36zab/tXbGxwx84Hra5nAwC1rBsACA7U3z0/tN1+l0ADANrZbtFp2ut76V4s4wNcbbDcr0FHaiccC2ja3e6E49u2E84BaAIEwbVqtwJoAZwCfPUDEHWaqzyfw1PF9lEmGOAIMAdQa9dXvbcqQBP2gyu2HcCs24RzVQhrbtIF664VrNuu2WFYK0Du9m+WbO7DQ5v/qGPX30hb5i9XCFSrZ7fsk6+n7fK30pa6PWU3rl60Ty+NWWbmyUvPTZIkSZKkFyWgkiTpK6fik4c2c/Y9u/e/jln64yv224VF+85fj9v7hZI9bc3a3YOnltuEG1Qi4ACg4CgdHva9PyrAy16AIkDKbi8AVoAXgA++J+A0cgyS6AdI2tlqEcZQ1gcAgiPVC3BFZypod6ttPZT7NQIwtat0rwBLsfcKkNVuluhEEaQASoSmunXWKg5k4XusEY4Veqo2AkjhenDLcBzKE7EWlBNCWMfDH80TphpBt7+zZN//jy5bIbzPn9+zyVzGZgrzTARcyU5ZOY+ZVi8/R0mSJEmSBFSSJH2F9Oxp1u7dX7DMR5/azZ++Z8s37lh/atZ+OJux8/sDu9Hz3ihAC1wfwAegCeV1AJSD3U1bC9/jO0DPZhcuUSHAVYf9T+h56gWAgjOEcj/vhVq0XoAylu4xTAJuV5d9TxtwnMI2QBquh54o9EtVCnNWzqUJS1hLNXwGHO3twB0DEBWGpX84x3r47GWACKlwqMJ3a7UVAhVcMxyz0cH91Bh4AXCrZZetWVm0y9+eIUxBmY96diY9aVODfbs6l7L05AMrrEy/9CwlSZIkSXIJqCRJ+kro1p2snXk3banMwM5fnLONpwESHo5bL7wiTAL7AH4AGHB/ACoElgAwAB1AEEr08BmJewAkwBHK6wBMW+sNfkbvEqAG3+Mzzov9CVNt/4wkv36vHaCoGq5TISj1A4ihTJBBEwF+0C8F7Wx3CGrs3eqt8T1LA8P1AW5I+wOMAbzYVxWOAVDhPNgHsIdgDDhtB/vbVi1nwz1mbXVxkveCfXPP8pY/v2vFS7v23uS0/Z9vXrRfXkhbeqdvuXMZy53PWCU/ZyuLKcstTVMnn68kSZIkfVUloJIk6UutS9lFOzu3YGMXM4SpiVSPr/m792x3esbqKzPDfZGsF98jxpylenSo8rbf79KdAmQxYKJVZK8UQAiu0vZm3QMiAthgv24b5YIIisgxlIKOV6fCzzxPOAeAB7OmEDoBR6sbvsP2GIneaSDJz1MEAVteJugx6+jJWmushH1Wkt6polVLcLjc6cI1cQwcs35Y104AOLhi6+E6KEtEiSIDLNbdNdtc9xCMC4tzlhrsU5kfzln2j1dtMHZg87+YtqWFZ5Z+dt+W5p+99JwlSZIk6asqAZUkSV9ancss2BuP0za2PbCzd1cJUtTc3tCVGhWcmzjoFu9jaZ+HTXi5H/qPkNaH/QA2/e02HSrsh3h0AA9gBiV2jD4P+6KPCq/YH+4XzgEXC8C1i4j1AG/YxrI8OmJLfA/QQeLeetgfYITeLDhbOK64Okf4Aqihh4owWF7gtTcDLDlYrXB9/a02IY3BFeFcuD+6WOGaSAj0AItSEqTRtPHyqq3urNvMN6ft/f/kvF3/V4/saGzPVm49ssLDCcstpWwm9chmpx8rCVCSJEn6yktAJUnSl04ThZS9t/rQfpjK2B/+aML+9OkqoSo9s2CLizUCy+8CKii6VCidg/MDqMEw3t0AJp0WygAdPAAygBIGTQRI2l6v2hb6mgKYIM0PqX04D6Al9mPhPZyn3mYSStFBgt8mj8c5ec01uFIrfB/LBHENAhb6oupLdM4Yv46SPUAbyv0afgzuC69M/uvWWaaItWNd2A8lg6P3C/BqNz1EY4M9X8s8Bmtd/vk83Smo/duipc9ctkGqbAs3HtjqYsoWM08FVJIkSdJXXgIqSZK+VLqbf2ZfS1+ysUHBvp9NEaSgDzf2Aixkh/sBqk4eC0WggvuDHqYYMLG97lHogCiUzKHsr13PsUwO8IHSwP5Wk9vhEiFenb1PSRgEztsO+zFEAiV2cLTCMSjFw7UYcsEodHem2N+EfqgAUOjHQspgJ9mG/Qlh3Yo7VEl5H+ZgAQLhZGFtMXoda8X+dKmQDtjI896On8Vy+HzsisFx67ZyPG/t4aq10gWbTmDq3n/231pvMmfj01lbXVmwwuqM5ZbSlg/6fZAqSZIkSV9mCagkSfrSqLI8YW8t3rWPDgr2372zahd3cnYjn7b7K9mkNG75hT4pwM/Jc6CUD+A1HKQbwIbzn5JyOcIQUgADbABg1jseQw6XB98DfOgoheM216vucrWKHjbBEAkHKpxvdxflflV+9uQ+AJs7Y3CyAH0edY4eJ0Sqh+8aRUIZ+q4IT+G+2HeFdWJ94Tzop/LXAr9HSeHOFgI1CnSUcCxesaaYLNhACSM/L/EzIQ7ztMKxKDtc+OgOgWp3qmTnrs3amctpG7u7bE+fPbX5mXErrMwIqCRJkqSvpARUkiR94VUrztncg/csffuMpe++bZ+WJ+3nU1P2zsoTWw9QgH4olsIlAEXnJ4AVgOl3QQDT8uA0JQAF9wfghB4quknoOUKZXAJBKMvz0jz/jHI+D68ocD8ADc8X3uN6OCd6reBiob8KJXZIF0SJn/dXLfJ4LxdcpcOEYIq1ADo4DxwzpA7i1cv4EIVeZT8U15n0YOFYwBFACaCHAA2WCCapgfF5YE3s+QLAhW14XlgzZ2Il4RwArOrktE3PLBOm/vUv/9hS5YHNFjaGz40piQG+oJPPVJIkSZK+rBJQSZL0hVcp+4gwNVhLUeuVCbvXmbdSeY5wM7rvqCsF8EBS3uh2wESn6SCCV5bMddA3VeF2OEKxpwnwwVS/ACw+HypHqEE4BZwdlP7BaUI8OnqVIlS1cV44TgG40NuE2PTedmvY4wSHCVCCviamBCbhExtr3rsFAGLpXvgeIIUZWZhZhbCKWnkhwF2Z68b648BfQhmdsCKvj3WxDyzGrKO/C6WA4f4BW3DzEGiB8+AZIbId12nW8/b21RnC1HTQtWsFu3A2bfcuL9itG5/Y+OPb9vDe9fCsXgZVSZIkSfoySkAlSdIXVrPLC/bBkzkbezxnD+9fsYXJ2zY7fs0mH13nMFzsA9AZdaFicEP8DHABeAy3JyVvTOVLSu68D6kwPH6jW/ZyQLpTACDvkwKUwKlC7xKAJ/ZLxdI7Du8N+8S0P8yniqESO/0OoQ3nhJPE0sK291WxDC8ci/lV2N/hB0mCebpUiEXf3kT/ljtEgCWsG5AFkIqR65yhBZhqIZrd52nhfuK9s5eqApDz0kSsg/1a4Tw4dpuDiQtWqVVttrBud+8W7d1vz9r9s1VbST234pIgSpIkSfrqSUAlSdIXVu8/mrVUd+DqHNh+fdI2K5NJWR36heYJHid7pfB5FKoALBEu8D0dp46X3MFpcijyuPEYb45jAD9ekudlgfF7vAJC8IpeKYASXB5Al8+MQs8V9nVny+db+VwrJPJ5r1UAHkAVgyrgcpW5Ru+v8sAI31Zkmh9nY3HIr8Ohz70qJWmAyQyrTpU9Yp7oh96sMvfB+aKjhDXhFf1hcKl4DTphZT4LfHbQytvjm8sBpAau8Z5lL6Zs+Wraluae2oO7V+3Jw1u/s6RSkiRJkr5MElBJkvSFU3U6ZfkPn9h7D0eB6pA/9E+6UXCM8D6CQhTAaPQzgijQM8To8hagBU5Onj1EiDeP/VY+TBfDeT0CPZbj+RBf/8xyuwA8nhJYpFuFPqn1doHfY19AlF93iedneWG4FgYEA8IAQhCDIhioscJIdTpP3Srhi+DYdjgCUEUwjPvTMWNZos/S6ofz8Tzo/2qiV8tLEGO/GI9niSHuG1HsPk/LYTHP62GtgDnAW6u2YvevLdvq9IHNnpu0/QBVg9SOrVyZpVM2GgAiSZIkSV9WCagkSfpCqZpKWfrrn1jnl9M2NTYdQOrIptoHtlguelrdCFAxyQ59QkmP0ChUYb9R5wrvuV/NQYluT8PjyH12k8934ownOkW+HcdiuwMWyuNq7mwlgRQMsmgBhDD4t5WUz2FeVZHrw/G4HmPRw/lwPHquUAKIV4JN0rOFfdfXygyIoCsWQKpSDHAY1gO3aTjvKoAOUvu4/iTcAn1dKDv0oIsVQh9KE/Ec4GrhGoQglDkGOMO1EIIB5wyR8N4LVkkctWVC2uhznDn7lDAFHUxtHT/X5JmhlHD07yhJkiRJXxYJqCRJ+kIp9/4j231nyVL/yxUbjBWsdWVmuA0lagCJ+DkGLsTPAA1AS/wcYQBgE5PpABPu/JTYwwRHJrpcOB9LCJOkPARN4HvElQ/LAJEA2CoSprAvwAewwmjzsE+/12a/Uxtlf4lLBTGMgm5TmS4Vos0BPFvrADF3tBjbjnLCpAwQ9woXDPcFh4puGoAMqYJ0h5Del1w7AB7PU4vPaJElhdUCgMrdLJT05ZamCGIeHw+3zuPXcQ94vhDcsfVumfcYn8nq9Tmb/2WKQFW9dsmmz79hSzf/0i5/ct7u3PrUno3fGd6rJEmSJH2ZJKCSJOkLoWxxyt6c/8B+kHnPUtef2PRv79rK+We28OwptwMSTjohgI2T/VPsqwogEPfDMbH8L74HYNDdCZCyu73GUkDf7iVxgBuAEuCE0NH0/irOnGIpnAdbxBlOKOGL0AKYgkvlbo8n7hHswnk2uzXOswJIoXzR4SzP0j+ug0ETNcMQXq4DcBRgEO4R+7K4ZvRd+fnZz5Uk9hGSal7CB0fKwycQ9+7Din1QMfqyylxTdPNwnei0ERKTksDofmEfztXaqFurlLOVu7+wwdKYZb79c3u+PGaV5Ucv/S0lSZIk6cskAZUkSV8IvbnwQQCqyzY2mLSxo2e2fWfZOkseIY7tDkgOJvEYptaNfI7CPgARlvkBohKnCQDicFEM50NfUc52ttveZ5TAWeyTijAR+5Dw3h2pAsEL33v/EVyjOt0swE677scy6CGJNyfksNwP5X3uQAGuEAzhJYAVrgPvAVWjUIP7jhCI+43nAyyxhwvuEtbF4+A05ZJ+qWUO4wW8IS49umo8F89fCCDp5X2AVcbAE+K8fJJwF75jWEWyJqQDFifeJVBFrU5ctnJ23HJLKZtPP3npbyFJkiRJX3QJqCRJ+kIIztRHg5R9/DxtF55P87vR0IMITqNA1Wl4L9HJc3G/xLkahke0jlP8vETPh/r2NluGOU5wmuhKYTtgiH1VGcJHdIrgOMUywrgvwGazU2KPFErzAB90uuAo0f1xmEGJH9wiltPBOUp6pHZ6bTpVLEGEY4UBwk0PvkBM+jBcouFQh8AKpgGyDNHLDWPpHnulGu4+Ae5a6KVC7PpWi/cHZyo6bw5n5QQePQiDryhNBGyF970AeABAPCvc925Y6+7WmuUe/MYOF89b6f4Z2158aIPytOVmHllh9bg8U5IkSZK+LBJQSZJ0qrVyZtrSX39iM996YtfGH9s7C9fs2tI9bhuFp/h+FLJihPjvUwQBwhCDJVbYOxSH3sJZAnD4AFwv40MPkw/I9WM9sMKvH0v/eG3AEp2nAFEAoabPpwLQAPIALB5zvsJzAnyQBAhxbhRCIwJkbSYOFdwfgA9dpJrPx8JxDJhIeqboiiVhGh6OAVesxO9ZAhgAb7QEEuv1GPQ1zphilDri2pvo98IcLJ9VhecY52V1GgXv1ep42h+G/cK9Yiz7RpPrRWhGfXnK0pfP2I2v/dKaEzdtpzD50vOXJEmSpC+DBFSSJJ1qzXzjiWXffNMGY9t2+OEGk+dQ5gadDKDw1wgM88MUvt8nAIa7MX4Mh+82V81T/PLDcjbAk8+XcjcILhFAA1HnMX2P6YAj12NZHMELoQ55AhPO7yWBx2tlxDoAhgOBa4Q4AAkgZa/f9XI6XB9uV9hve6tJVygmEEa3CQ4X7wEAFc6PczFmHbOvWh6DjmeGe2OPF8v6fJ6Vz5eqsoQvrjkmAiKREOf1Pq0E/JLEQPR17e9uEsji8F/sj3vohuvMXj9ng3KKDtV89hObXP7EFuef2YO71+zWjU/s5rWPbXVx6qW/iyRJkiR9kSSgkiTp1CpTeGyz3xknTEE7H65ZpZAJP+y9zG503/g5AhV7i0bcmJNCiRscJnekvFzOS/UKdGng/uA9HB8m9SUAgnlVKHlzxwrDc2MwAwYJHwNenAkFN4dAlbhbEHq22JuU9H/B5cE14PLAhcI5+9udADiJa4RzoP+qAado0YGrDcfJwzEAdlgzwQ9zsgh67oihVA+zqHDemBR4MjIe5/W+qySpEIOAwzGccYWSwM2mw1SAqh2EYzBRsGr7+5t01LY26uwHYwohtgU4O9jd4nGV+Yf2OP2urQ1SVGr1Cu8h9qSNxtxLkiRJ0hdRAipJkk6lPpr/wH6bPmOfXv/Y9j7s2Mb7dZt9Nm6z048JKqNAAB0n9fn3LIEbKf87qXg8AIJglfzIJySx9A19TD7UFt+xLC/plyLYJPDVrBwfE88dU/vo8qC0D85U4nQ5zKD0zt2xOCtrr99xqNpo2N7Oul8/WQfnVCGQAsAD16jjke5r9VUHJvRbwU0LMIMerI01rBmuF3qeagydQDgGB/XiHpKgiQg1dLTCdQFFcf4WSxubnoaI8+KavQBo3ufVdGDaag+dNZYlEjrzYf0bLFfk/uHY29Nn7OOz7xCoGvvPXvpbSJIkSdIXWQIqSZJOnYqlFGEqHX6AP6vet9mDlNWKc8PtCJuIABUVPw+dKoDC73GoAE8RomLZYCz/A+gAnOC64HiAAXqIUA537FL5AGCADI4FSKBUMF7P3THfDgcMMMJSwZaX++G7YVpey2dP8ZoY6Lvd9tK/8B4QhEG+uH5vvUF4ik4Sy+zQ09RESAXmUyFBEGAHKHI3ayOcA6Ea+A5leIAluEYAuJNhHSz/q3tKIY7F88H68J79ZCxNzIfjW3Sp+hBCKAIIItYdZYh0y1oIzCizBBFO2W6/a6nVq4Sp1mDK3r2Ysjf/cs7m0imbeHzHbl7/xGaV/idJkiR9gSWgkiTpVKlWmLXi7Qt2bvYdAhU0t/5ioAEcqpPlfL/LoToJXVERfEaBKybhAYR8nlSJoATnyWcuYcCvhzYAmAAwrZrHrQM0Rq/PfieU+SUhFeg7AgShzJCvAKq6R7o7JPnxLNEDSAWI2u23WfKH74Zlg2E9KN9D/xPW4dHq9WQAMXqgaryn3V6HvWZMD0xi0VkmyIQ+9IMdDxSGcD84Lq4JAObQ5w4angvOvdvr8v1eb91nZYVzAv52emu2EwDPY+Dhjrlzhn0P9jbYC4YyyW/92Yz90X+ds7GPB/buh61hIIjK/iRJkqQvsgRUkiSdKmV+9ueW/t4bVrvyW0u1H1qq8cQW5yZe2Acu0skEv1GQiq+/C6g8EOLFHiI/J1wnT89DvxL2A4DE4AZcE5AFgMC5GX8evgOMwIkZ7Z9CaV1MBwRE+dwnL63DtVEmtw7IgqvT9t4pAIsHVBRsowvwcShBAATOtbVZd6gi3GHAb93j2LtIA2zwXIAZliQSCD0MA/eC82x2UdLnzhWg7uVnNz8sZ0QJY72yZOXcDF0yumI4ZwCmg70tn5OVOGH7/XW6ZejRgpvWJYjmfTBxJ8DWVts216tc09f/NG2/Ortp/+4PU/bRpb2X/jaSJEmS9EWUgEqSpFOj2uo0YWpwbcwOPn3fDm58+EKpXxTgB7ASIQavPth3FKgWfw9Qec/USaACSOAcgA3OXwqfGfoAwEIIRdjfwQB9RR6zDmDBcXEwcBQgCVBCYEp6oRiXXl22SnGezpVHr/vgX/Y7JX1QhJHNFs8NxwclepjvxNlPcMV4Xx4uAQetF8Cl01j23qk2ygNXGHce1wsIQh+WAw7CJqrD8sbR5xlfPaADaywk0Oaljix7hHuGa2BAMOLTkewXtsOd2ukhRKNC2MP94z52t7u8dzhmu9ttu/hpke7U2JOUvTv7vl3IfmTzc+N25+Zlux2UmXkaIG72pb+ZJEmSJJ1mCagkSTo1WphcsGe/PGP71z+yjesXrHLvUyvnXxwGO3SYEKjA916yFuEK3+E90vhOQlP8fDIhEAKc4LxwXpjIB5cKUMI+JgcqwEQsCYTjwnQ9wBL6quBAAUjoTgVISqAlul5xn3Y9b5XC3LAfCcDUrHhPVjwHAiE4D4pQt2o7/S57kpCeF9MEfX3LhBzsD/iJMNOsodRwnp9RqljKpW2tiQHDHo+Oe/ReLsTPLwz7qQBjdNUqSBJMzgfA7HoZH9ZMJw89VYx3bxBAewGo4KTtBGhjXHtYz3Y4fhsztdC/1a3abn/d9nbXrdlasbPpty01SNut9jW7svxpUvrnOvl3kSRJkqTTLgGVJEmnQvcuzdulM2nLPNi2Bx8+tsW7Vyz19L7ll1Iv7DcKUcMAipE0P0ICE/5enFMVk/ccto4HAvN4QoKfCz/+AQwEIoRGACpanvCHuU4eCw4nxmPFYzkcUwUTAIvDdAEbgJA4CyqGPbCcMJwXDk+ritQ+DBWOoRpLPviXPVAFlukBnpCshzUgYp3XbHl/Fp0qlvtVCV1YaxwE7ADlPVe4NkoH8RmC2wUgHH12WAOuR1ACMCbnOL7HRbpxdN3WsLYKnxfWj+tvdGpWLS2zhBGphYAq3CNeMa8K+9bCvZ1N/5ZABU3vag6VJEmS9MWWgEqSpFOhy2+nrZAaUPmpg5egJ2r0+1j2N+pEeeDDEsMV4NIMj/sH3Cn2NyVQRWeo6Wl+cHL62y1ug/OCdEF3gQBZ3vsEYHJnxwEMABKvBdeL/VYBqFiWGCAP+7EEEMESHJqL8jp3ukbXB6jD+wg0WBfABPvBPWJ0/EgAhqcQumvWqhcYVBHB6jgkAvHr6KfyqHVPAiwna1skaHHmFIMzFn2fOvqqVnh8DN9A+R9e2b9FKPRBwgitQAngRiesr1limSFAcH+ny7U7aK3bveI9wtTk7lNLX3jTVj/5lS1lU/bk0S27d+eK5ZamX/obSZIkSdJplYBKkqTPXbX8nN08PzcEqtzUtlUL3hM1qhh1Hj/Hsr9RSMI+DJEY2Q+OjztXxzHp0SnCdwAHOC90l0aCKOBGARIYG77hoRBIyPOQiiVP1Ru5DoEqSdrDZ/ZJJXAWr+lx6gGONuv+ue4x7QAkTwV0CPTzogSxRLhCsIXPmPJgDDhJTONDT1i4J6Tu4T7gJGEQMN4jrIKzssI+gJk4g6qPmVOJe7VWc9gCHAG24j4AKc7mQpkiwAvhFuEaeI54HgzW4HyqiqcYBmFdh/t9Q1w7XLFOqxw+bwdIa9gOwjXCeo8Oe7az3bH61HVL//wNy/3H/4ENHo1Z5ekV3of/fVT6J0mSJH1xJKCSJOlzVWlq2mZ+e8dSZ+7Y4wBVmaclS089tNn0+Ev7wuEZ7bNxoPL+o9H9GDCRgA4cK6bsAVzYk7RCeGIwQ937lqKrBOcm9jIBLNjLhBCGJGAiwhDnToXvAEHee+XX9UG+HlARB+16ul+i8B5rYXw6E/scpLBeHsP9/V7iveIYuFLREfKSPaTseZ8WyvO8TwsJewUv10vKCx28AIgIuEA/FMr8cF+AsgZdo942wioqnCsVe76Q1Id1+joWfahwOA8+o+TQyxjLw+eKcj+A1v4OEv+aYV8ve8S+GP67vbkWtm16QEW/y+uV718kSNX/5X/I163pGy/8DSVJkiTpiyIBlSRJn6uWPn5sg9Qa9Xy6bY3Vef44/10lfye/i44P3ZTEgcI+DJJg35M7JzEVDz/+Yxrg6Dlist16BzOnAFtwoZLyvnAenB+wEuGGs5wIaEi/Wxk6ZXCNvLcLkLfifUhNxI2j5A/3tUDQwfk9ECI7LKWL98zSw5onEcb78fPByUJpn/ckwa0i4AGkkMjXrXGNW0lSoA8jrtIlY5hFy+PgcR2WDaIUr79OoEJCH1L9sDacA65WBDuAm8esz3M+Fpw6gGecUwXwA+jthPMhxh37oCQREIZ0wn4PgRVrAaQ26EzhfBwKvNG0hXM/tIPHY5Z/8oEtPrtgpdxUgOlH9vj+DSutKu1PkiRJ+mJIQCVJ0ueq3J1nDlMzbXs+2yGgwFk5BpWlIQQBNggsLElb8QG3SYocQYhuEEr43NGJx7Dk73cAGgQoctjJevpdAi/uWFWG14oukEMV3Bl3lqKL1GFQRCGBNg++gCPmZYJJr1MALl4zcX/ohIX3OAeuhV6mYQ8VAIr7uSOHc2CNO5stghXK+eASAdYiZOEZeGCGlxrG4AwGSCCcIumZ2gHQBACCmwVHCY7UZnjm0aHDdRjjTtjz54M0wR6GBCcwyecavmfUezh+KwCe92rVOJcKkOZDiau2v7tFiFoP50AZ4N7Ouh3sbRL0liYvWGHivA26KTtsT1lhZZoqraZf+ltJkiRJ0mmUgEqSpM9Ny2+dt5lv/MLmvvMry35y3ybu3rHU0wfu2MCZAYQEqGByHaBhHX1MnrgXAQnAFUvmIEAJYSyBq+hinbx2FM6NV7g6OHfsG2J6Hlyp8BnvfZgveo58m8eax94ozKXyBD18Zukc+ozCZ7pSDK3wkAmk98Hxwn5xphXdruSeIzBiO2BlFCZ5TH01KesrsKQOAMXI9KScDwEY9SoAD+4aUgkBV3CdSgQpfIfjEXHeaXhpIJwjDgeGs9Vc5f64d4ARoA5zpxCgQWcueZaxb4q9VYAqfG5j3tWaHQSAqpRQ1oi/W8X29zZsl+WALd4v4GpzvcnAj8yT9wlTUSf/PpIkSZJ02iWgkiTpc1FtOW3Tb/yVDcYeUQcfB+1s8Ic6y+zo/hzHnkegiMIPcwAIy9QSZ4gQBXcp6VeKjtbJMr9RAQTw6jHiDjUs3yMkuOvE0j30ZbFkL8fvCCqJg8QyQABNAlgs90vugSV7icOFbdiHa03Wju+iG+culAMWXa8mkvwcCn32lp/DI9RX+ZwARyjDg0OF8AkADNYCgIL7hHNhH2zf2W7ze1wXbhPWj8HA7L9q5Rhxzv6sbpm9TxvtAp03wOzxWhaslJ/nmgur6XCtMq8JwIRThrVx/lQHs66WGJe+B7cqfLcezr2DIcX4ezXK1tvetFZpkiB11J2yZm7SFucWbGF23B7dv2aVvMr+JEmSpNMvAZUkSZ+LavkZS3/jGKj2r4x76lx0l04A1O9zmQAbEUjw+TjyvMQf9ACP0SCLUQG04PgAYroBqNjblDhj7uw4PBGoWg5bDlc5LwFMwhtQUuelews8BkAVXS6W/o0EV8T3nqbnse8eBuGldjGFEM4P15aAFmdTRSgLawDExCQ/uEcsfeRQXXfWOFg3CAN1Y8mfB0XUrdVw2ANErhEiMQsL5X5hPdVV9kJ121XbZvpflc8X1/dACx8sjGcWgymwllZ4Joxcx2dGuzdtr98N16zQSdvdXrOj/W2uFz1WeD3c27KdfseatZq9fy5lT8d3LZ06stnpNKPTa8WX/2aSJEmSdNokoJIk6XPRR4s/s1sf/8x2zt+2zQ/u2r2bV2x+ZoJuCFPtat67NCztOwFYURFIonsTYcznNMFRcYfKSwC9PyrCyxBukhAGzF5q1bzEDzOnAB3Yh2WGOB8gKQmnoEuFsjtGiTts8Lo8FqV8fn4CX+JExTXgvUeke9lfvDdfW3zvfVcsb4TLhhlWDYRZ+P1ubSBwAm6eu1HsfwrPC6BSLSzYwc46e9EQhY4SO6yB7lVYM0oEPfLcXSTvCSvQ6aoUs0zpq5UXCUW9de+NwrMkgIY1lAuZJPgD6YFluncc7hvOX4RrFdZ0AGdqd90Qq77drdF9RAQ9HCwCK3q/ttpcy8R4zi5dLASYGlCZ2c5Lf2dJkiRJOq0SUEmS9Jnr1uo5+3n6DXvrF//KHg3GLNdIMSkOP7QRaR5DICJMRJhhSVwCWFExuCI6VBFqCFEn9h0VHZY1d7Ewt8nj0eEuLdNhIUwx0tzT/mKfE14bgKIAHHRnMHMJZYdMwvOeLpb/AZToLnl5H7YNwygSFyyuNx6H97GHy5P+FoalhvEchL0m4tbD+lCmxyQ/7ysDPMGlYgz61lqAq1q4TgKESPirrtjOdtPK+Uy453rY5uWV0UUDfO5sdwk5nGcFVyvAFQcJh8+j4IeUvp1tlAsW+T1cMKwFfVIIn0DJINwxOHFYD96j5BCumZcqOtRth/PUKmU79/ZsAlR7Vlj20sd6+R/+G0qSJEnSaZCASpKkz1yfLv2KIPXo8H2+ZhuP2ecDqGFPUIACL71zhwogEnuJjkvkHDrwY340YhxgglI49PecvO5JAU68pA4R6A4MgBOAARwUQAXW0sY2lA+yf8phjeV/AWi2EAoR9icMIVAivHKobRKpHsGO8eyJUxX7tkZL/CACVAtBEX7c6L4xXIOgk8SwA0wYSMEhvyVCDxyqtVqOoRNwhAhBFQ/3QI8UtuOYYm6WgFPMzVi1NB8ga5ZOFqCsWsoSeBgb302SD+uIgff7wn4Ao7gWwlHHXbJdQNNmi+EYa41S+Nyhc8W+rS30V2Fd6KNyYEN0O6C01azb1Pwv7HEA7fGZb9ri0nUbf3SbruXJv5skSZIknSYJqCRJ+syVu/bAzqa/S5h6vHPesnNPrV5NghwQtsDZSj5LCT/Y4RgBkhgJzphulOg5wGA/ulL4sY8SvipcHh+u+w+JMJaUAPI8cGoSp8XP5eC0vubR5JAHPrijg8+AMJTVIRUvuk7u9HiwBErfcC1s8wHADoSx1DA6PieFtDyU4MXPwyG7KLmD44O0wQRwAKDoPQMo4RjcE6LLe9tN741CdHp4dv2NFssTW/UiIW4Xs6fQRwVnro6IdTzjAs+F73qAInzX8uHGBLpwTSTzAdRY8hfOi1ALhF/4YGH0dNVtrenpflthTetrFaYEYv245l5/I3yPgcP4u5Y56Nf7wIr2ePprth3+J6DN/bGXnoskSZIknUYJqCRJ+ky1+s4dS79x3gZjS5b5s0u2mJm01cWU5ZfTjBMHJMDNQO+Np+ohuOE4VAJAAhABWACCULYXnRIOnQ0/0hGCgB/7sfTvd4VSeOADQinggnlvEM7rfUWLDIXAfgADgFOEOLpg4bVSwAwmB7zNLkrrVoZli17qt5LAlafzxZ6p6Dh5at/vLmfD2mKvF+8VoIbSv6q7VoS+Ro6x7P0APihVRL8T4A7Xx379zTWrFrN0k7ptQF+eselYJ0occTwhDKWCBB8HqmopAB/6q1j2iIHGSC/Mh/N5mITDUNnL+Ha6PJb9WeiVSnqzCHRMFmwwPp1u31qes6ngiuEcsZcK7h6gqh3WNz777SFQrfcvvPRcJEmSJOk0SkAlSdJnqoUfXSFMQUdB7doq4YeOFHqRWp4iRwemhXlIRX5/8jxRcTYSXaqW9wQBspgWCCcJcIDQhvCD30HFSwV9aC+ugTS9FQIGHaYkgAEQgPP3tlsONIkTxp4rQoa7LjguhjI0K15uiH1HAy0w+BbHsewvuk1JGeDJ+4FYYjcSUIFze7qewxnP3QLkYfiuJ/thO5wibAdE4p53+5vWqPmwXbh8gBeHqmWW38GJgiOFskY4Ugi44PDiBABR/ofn1tvyMkE8MzhS2Ib75BBfzMJC+EW34f1cTcBXM1w/CbpArxbOFfaL14+x6j58uMQSwP2dDWu1U7a8cdnGFq7bh/O3bSYzYZcuvm93b1+xRlICKUmSJEmnTQIqSZI+UxUuPgggtWiD8wGoLjtAcXYUIALpbyj7A+A0PaocLgz7gwguHgoR942vOC8gCABAZyWBqZPXZn9Twwfueumgz5IavicoYU1eugYYA0AgzY4hEEHRPYvlegALrBkABNcM14jDguMa4CKxnJBre3EG1Uk5NPlxuLc4FBjH4d5imSP7qbiuHKPQ4fjAnYO4xqTUbwOzoTZ8aG9vo0YognMEVwu9S16m16C7BFcL0IN72Eii1n0bwKnJ/ihCUKfE75CESDcsPCP0Qq2jl6uD4ccryZwrxLfXOIcKLh77qDaa1qx50AcADK4eznW4v0336r25G5YalKnpgwLLE0fnkUmSJEnSaZOASpKkz0zTuXl7e2rGzk6m7c7sot2/c8Ue3L02DGAAQHkMt/cbAX44FDf54Y59mHgHp6jmSXAMcEgABaVs7py4sxLL76AYWhET8+gA0aHyawISADyAu80EPNgHBHcHoRPhGJyTbtCaJ9tFp8edKMDeCksDASsRjOh6teBueaAE7iEGTBwn+iXlfcn+8XmxPK9dGa7dQzECrFUwl2qR4EbQRDgGerkYd551FwklgYm757OfmgROwAtgplr0uHSU7QEePdyiEp6hO1Z4hgSyDoJCmoQi3KuXQK4Onz/cKZQVNgFhYd+dfpdrxP1gXwzybTVKhCUGhoRr4DkTAAHA4RgEV6Cc8Ohgy96ZuWZX51MOVYdedilJkiRJp1kCKkmSPjOdn81Yan8wFF2dhseCYztcGIAT4QPg0j4u94P7c9KpYJlf8zhSPfY9MaiCEBXnT7njE2EKpW04DiVvreqKlwkirY/AUeePf86ZSkoFYyBGLLPDsREYAGIRMOh+he0AQA4ABmjB6aEThp4uxMAv8D5PPhsI94e1FVbSPJ7hFOgpw3kSGMNzYZ9Z0wMpoouF7Zj3BDcMyYND+MMzDPvAYXJAxP2UCFD7u5ucM+UBEX4M9oO7FJ/r5gb22wjQgzj16hDUcP+4dxzDqPgWHLAGnw/hLrwivALPE4C63W0kARelpO8rPLM6jkGoxRrXfLi/Y6n6vMPUUcmy9SnLLaVs4tEte/rk9u8tkZQkSZKkz1MCKkmSPjN9Mj8/hKmpvcPEKUJ5njtOx+V+6GdytwfQw1KyNhykZL4T3BG6Te40IRnQSwST4bphn9F5VXSLElcLsEbXq45XBzjAGIAk9ll5j1QuQADmOYUf/AhtaPsgXLg6OL5RAai5w4XjACtM/mt62iDgCs4PB/fSXVrl9WJ8+jDmfbiuJasUwzobONZLB7F2PB/AThwkjGuj34khGEjtS5yuGBTBEjoADOLPywi0cJcLa0KPFWBnO0DUTg/lfRXbxXDdsD8+47rs+QL4hG17/XUvE2y7Uweg6m02eE4fKFwcOmoMBYH7lfRGwQnbCedGjxbBKykb3OoEKAvHNpBA2EWMe50OVz9c/+igbwd7m7aQPm/piTM22JmyxdmrNpd+EsBqWkAlSZIknUoJqCRJ+sy0PHvZ0k/P23xt0e48vme3rn/CWUP5pRS3E6zoLHlgQ4xEj+VlazUvicP3TPsL+3lgBGDFQyAQxuAOiUeIE7wSePG+I4cFQIL3PMFpqRAQ6PQksenxOnB9WFKIOHeWByKxzkvaGN1edUBjsAbOAeeFAIWhuwAtn/0E0ABIwbHh+VnOCMBy1433QrfO3TbcK+ER7g9gJZkLRWCB29XwZL3ogiGS3LflvTdpHYl83lsFwOEMqXA/SNQbltr12rYOVwp9UuEYD5vwhD8cD9CBQ4VzEnwCXHabpQB9DrDo10JpZlwLroHyTUIooC/cB8AK4IYyRKwFzwUzsvi8EvcP6X9wwY4Odmw3vM48PWu73afWqd6xw97US/9HkiRJknSaJKCSJOkzUW7umqUfnbHBVsqeb09bI3znTtJxrHkEKr4PP8YxnJeAUvOEPLxiGyAkJgLGgIYIYXjv2z0GPcJYXAcdrTqgB7On8nRMAAt0lsI5CWMtDMx1EMArzgGHBsCFzwAh9hfBNVuDU1Niol2MRvd7gWtU4vU6AXiiY+bQ5AN94S65s1QmFNbKS1YtLRJ2AEX4znuzkNRXGZY0cqgwSwo9QMPDMxCb3rDdAEF7AZoALw5ZOK7EWHL0M+1srjncNQt0urAPnhXKC2P6nveNueMGAIQr5WEWTe9P6/r6CJ10EYuEUzznLawdZYBw/VBK2PHgCT5PPudwP00k+yGoAveI+PYayw/x3cHOhmVnLljq7Qv2fHfa+p1J/l2jTv5fSZIkSdLnLQGVJEmfiRanLxKmIlC1yhmm0zFoIYEZOB4xeQ8/6lHuBliIjgxhhE7TkpfkMUkOPUV5xnR7yZoHQAyDIwA0PL+nBHJflu05rLSbRZ/hhFS/cB0m5SWOlQ/zDeDQwABcd4m4DpYlelQ5e4eSuVeYf4X1+3lQJpek2IXvozsWj40lfHDY4EZlZ58ECBsFQ49gx9Dg2KcF4OHw3a6nGcIFcviq0QHy9x4wEcsQUfqHHiX0hW20Ub4HmCrbHvubcBxizH0eFYT1Iu0PkERnabvJ0jx8Jrw2AUllulB45fMP62QpIx09D/BAvxnWjL891gKw6wdgYtT6VpshFHDucI+AP7pUe1vcB07VvZu37ZOxSfvJDzM28eS+Pbx33W7fvGxwxE7+b0mSJEnS5ykBlSRJn4mquUk7AlBtpuygO2XVAqAh/OCuxBK/haGLM9pbBNeD4QwNH3YbHSsowg/ec/ZTEs6AH/8oa2vGEkI6VO5eoTwPIIDodDhFHiLhsAa4iel2DnOAO4cmKM6QiueMQ4HhAAEoWFqINYfvsF4mB4ZzYPgtruvDhJO+L/R7JYOFPcI8QEfSI4Z+Iw7DZYmhpx4Cvtwd8pS+Ptym3hphDt/3tuE8VWwnABLOdbC7afs77vqgD43znwI4HvTXWfaHcr7DsA/ACLAF6OptoqxvjdtRgod9WCKI8wO66NzV7Whv2/ulAtwBarEeACn2i8ETePZeaggH0fvJegHUjg53uUbA1FbHEwKhvf6mHQaQOtzvWWF13b79Rto+HhtQ7/xasemSJEnS6ZWASpKk165qcc7en5q1MxNpe/vpjE1MPrbHD27YXHrCiivpobsBVyb2RnmPUjJjigDlc6dQFsjvUPaWAA72i9+P9kt5OARgycv/PHgCA2djAl/RamXv/4Gr5JCQlPF1MIMJAQ41q5U8dXA484rOl0NdnBOF98dr9XWypDFAG+4NfVuINMdaYumax7rDifKwiRiuMTxPApgQXSvAIEvvEmcO8JI4en2U43WqXD/ADAAFOSitEb4ATvu7W3SDHOAQGIFXL+/D9zHCHO8PAlT1ECYBsArH7u6se2kh+qlQUhhgC7BH6IK72PTERqyb86OCAJZML8T5w1rqVcS4B2AMa+1vtgmdeMb4DIfq+eG+FfIt+87X0vZv/91VAtXtq52X/qckSZIk6bRIQCVJ0mtXamWBMPW9Sz+x1M7AZte3EsDx3iKGPsRyvrrPM0J/EFylCCqc5cSQiaz/aIcr1cC8KocNzmcqHYMIISs5FtsBMuhPaodrllanh8d7PxIi1D0CnU4Uk/bgMGEmE5yXGgGEYRIR1HDMGpyzPB0uhmDgnE30dSVR5yjrW/M+L8ALQQO9YIQ+d9UAJwy1gKuT9HrFNMDYNzYKVzgn50wlUIj1xLlbeF5YRyx73Oz4bKpyfsFDKAIQoc8Ka0H/FMopAYO4PwAT4Csq9lLB4UJPFrbv9TeY/IdnstvH544dHvTZt8X0P8Kru1IAUtw73UL0UaFXbdOfJe6Vw4D3NglvnuBYtqP9LRsc7IZzb9mlD/P2+JcLNvmT+1bNpC23lLbFzLNwL3Mv/X9JkiRJ0ucpAZUkSa9d+cK8nX06Y++lZmwqANVSs8rvY4kfhNlLcDQAFRFoACVM1aPT5P1RnOuUfBdT8HAevCfgwOlKACU6U9iOyG+8orcJ2wAiAAucM0IPrlnKzfP8pbBmT6XLW7mYHYKfx5/DlVq2Ym526Ea96FAhVtzB7LhU0deLa6L0D2sFaDBVb61slXANuGTdVtkaLJeDa7XsARaJa4dzATQRcw4gYehF3Ke6wuvguTB5r4mY9Ha4LlIJcS0ATuIGtWoOmUkZYkwhxHNh3xh7pBByUbOdAF59uFMBrPAZzhQgCZC1tQmw6tpOgCvMmkJpJl23GoYee8kkgy2YIlgjPO3vbLAU8Wi/xwTBw71tO9rrsaerH4DtcHfLnh/tW/XShKXfeMcGY7NW+6tbNj/zxFYWJq2mHipJkiTplElAJUnSa1d1ad6mL2Rs6sKizc7m7PHDW3bn1mW7ef2SlQOUYJ9GOTvcfzTtzx0dhxZ3rrzULbpU2AfvY/w4trOEsOEOF6DBSwLR9+Qzp1Bah/csUwuAhZlS9fKql8Ch5I9OlYdMACLYxwQ3qJ7MyGoks6BGnKwIEijBQ+mgR5B7MAYgEGuEsG+t7LHqDkM+zDf2gGHNPl8rKStM3LZOuCbOjSAKQA17ltreP0YoAvwRKhF2UQzQsm5rLaT/rQUQhAtVDetwAEOZHxwtrJ3lg1gre8Ww9irDNzgEmCWQPtQYzhb6trAN/Vnondrvb4brlfmM0F/F+Pkk0TCWVHo543FaIZwsd8kqVinM0fkCbCGB8OhgOwDWlv3NYN+Wf3aZMDX9b35iz8fmrLY089L/lSRJkiSdBgmoJEl67Zr+cM6qt9p29f+6Yv3UYAgXDhC+T3SrhuEOI+5V7KXiAN7wwx0gBIiAg4XvY/9U3BfQACfHAx88aY4OT7J/fmWaYINrMdSCDtNy0puEMj04OQ1CGqACxwDQIrzEsj+WKoZr4FyAIHfMPI4doQwoy8M5mCZIgMoFmFpIAKVuleJC0tdVsWop69CX3Lv3aMFF83TBHiCk4yEcvY0G91mnm+XDheFoYc0onfMBvE0CDaPU+20+D87RoiOGHisv8UNvFfYDsDEifQP7I40Ps7r8ejgHoAnPZ2e7Y3s7mywzRMgFAifwbDzG3XvFGC2frB+pf4yhR6kfniuGCG81vYerWw73hXlXLUbLs4RwfzsA1Z51Hi8QqKCDMe+zc3CWQyVJkiSdLgmoJEl67Zp6f85++W9+avnfrthOAKr4fYSo0R/K+I79Q0mogW9H35T3TqFMDj/U3XVy5wluT3SrHL7m6d54CWFSrsdrLFkpN0unqV5ZsnJuxkvhkv4rAAvcJLg5gA2AFiAinjf2PwE8vKzNv8PxdGQSlwnwMgQulvmVhrBULS0R8uKa8R3XTGBwl449VjUPtYgQyZlPLR9WvAV3iYmEADGEc8BdKnCt5UKWsIOBw/gMmOoBWMK5cBzLCuE6AYgC+ACecD+AsCGwbbYIPnCsEErBVEGU/fUBU93wum6Dw52wb4kABqDDuXFMnC3F2PjwnYdnFHlPhKoWXDbEpCOlsBMArWvbSBoM3x3ubXIeFdIH0au1kr1sMzNvW2bufSvmpmzi8W1bWtCgX0mSJOl0SUAlSdJrV+5pliAFbS5ssdSrWgAoHcekx30jGJ38PoZMxEG++JGOgApsw/k8aGKZDgyAxp2hAoEHfUX4zJ4muEjxXAGe8sspbmdJIRyZAAQ4fyWACddS8blRAJtqALVaMROgDGuaZ0kf4ASwUytlrZyfIUC1aujZ8vAFlM7Fvq5a6diFwzXxXeyPGq6v4WV/hCrAIpw29pO504ZtKK0DULGsEGWKSdQ7yuhYyof+pRZ6oQA1NT4z9DF52eIyoYalj3W4Ul5uB6CCSxThDWV4cJBwDAf7wvnq1j1NEGEVyfBglPoxdAOwxn0Q7e5JhITVNmZoIfQDfxdPI0T/V38L86Z6AdA2mCYIQDva22I54f/7f/+trXdWLZ0+Y4NBimo27r3wPyVJkiRJp0UCKkmSXrt+8aM5+94bafvBN2bsyZ0FG390y548vGnlgrtSLwDVSPneC0AF5ydJ9fM+KpTVRYdrMYDO3BC6Yjqeh0947xX6nujwsBTNe5NiMl4pN8Nen8JqOuyXt2qAJpTQteqrAYIWCFIANqb5tVAyV2IEeik/O1wjroXzMmI9caXo1rQAE95LhDViH5Qc4hiAYLteSNw2Pw/gyePUE3cLfVjJM8F94bxeYpjlPeG50FkLz4S9T4CoADwAOrxyqHASPEEYS8AGJYnRkWLqHlL/sI1ul8+OAjDBrfLgDrhaiJGvE5zwGccg4c8TEL0kMrpfLMskHOLv5YOVOQssfLeJ5MSwvudHe3Z01LeDvR7XebS7xZK/v/vbgR0dbgagOjsEqv725PB/QZIkSZJOkwRUkiS9VuWyGcLUj/6buv37f/nEbn+8P+yHyS15+VaEidg/FY+N5X/ch6VvxzOamhV3heJ+gBBEro/22HjwA4ADM5Ba7gbBmWnAwZonMAGecPxW+EEPMAMs4LVa8TlXEcBQkocUu3aAkXIuTYDB96X8HGEC5Xct9kgtEsrqmL0U4ALXAlDF9cMdG8If0vzWEJfu9xHvn31ZCbQAQrCNfWEEneM+LkbNYzgxgGjLe6GwP0rtvGyxESALw3Y99GJrvUGnCy4SkxQTYONzLeP7Os+NNWDeFAf2wmlL4CkmFnLeFYAxgBFACImAjD5fKzP5j/1bADM6eB4j313D9b0cEHOt4E4NAlChHwtDhA/3t+xv/ubI/vZvDm2ntx6+61ml8sAODp/Zdv8J/1+Wsylbmp/k3/Hk/5kkSZIkfV4SUEmS9Nr15rdm7NrYgBq/vUnIwY92gAW2RweG4HLi2BiLjhI3vI8wBvcDQQ+MWSdoeRrgavbZ8FhAA0vykJAXIAMwAOdkNMoc8MLUwBrWtGSVItytVasUMPPJo9RxPPqkADMAE6ybkECnDCEWAJYcISauFz/61xoecAGXCuvFfQ+TAtnrFUExcc54fwt0k5DMVwrgxvJGwFt0sLheL3v0uU+rwxI7nquJQcWYS4W+pzVeF2WEPpeqbP1e4ighoIIQVLT8SpopgXCs8B0G8MKNwz0DrHB+lBMCiBitvoawCwRUtPkZfVSAqH5YQ4xz5zFhDXDK+DdAOSb2xX7huIPdLdvvb9CNwuwpOFVwpw4CWO3vb9rhXs8eLnxo19NnrD5I2cTSJcukn1hxVWl/kiRJ0umSgEqSpNeu208X7f17Wbv8qGgz0xN29fLF8MPY49IhgIq/OmSMCpAQAYyfE/iKKX+b7eIwvALbqoXj8wJU4kBggBCFtL5qEjUeoMAjzx2qUOaH+HYEKkTnB6V67G9q+Vwp7MeQiREAYnDEmgdTxGQ+fAawIYLdy9+8JC46TsN7SOCOEevVZQ7NxbVj3Ds06tIRohC3TqDK8xlQiHLf8vI8n9G1SjDi/K41nweFXiicn84TEw3zdKA4zLfXJgTt9jC7ytMRsT0CHsr98B3KCuHG0anCPKztls+i4nBfpPeVhyCF54vrbyOKPUAcwigwvwolk4ApOFR/8/yQARQ7/Q4h6+hwxwMrwvluzbxjN++ft4nsJ1Y7VBiFJEmSdDoloJIk6bUqu7xgZ26nLbU2sOn2c5tdBZAg9tzhKQ6uxfvf5VChRA3lbvFz3Ac/ygEycIXitghmABAO303gA+BDaELvEBytBlL2kvlRAJOwD9wcgEYjrIfDaxOQYvAESv0AGEkJ39BdCpAHcMKaeGyS+BfXtbWJXiYPuRiuv+oJfvEVfVuARfRmdTs1AplHjnsAhz+jBT4DnB+wE4fwxl4yXJMpfSwTxNBjB6XepjtGpTx6wjx4A6CDtZVyc15GiH3hTq2V2Q8VgQsuEiPQk9hz3DuugeuxfJDf53l+pAju7m5Ybz0p9WvlrJeETwCUMBQYkehYM9aOc/d7CKXo297uuu3vbHGw70ESSrG5jtCKNZtY+sTePfuW1Z+nrNrzUj9Fp0uSJEmnTQIqSZJeqyYXsvao1CNQQfPNTYeQE2V+sZzv5PGxPC9+xj4xkhxQglK0WA6Hc8GtigAWU+34ffgxHqFnrbnCPiA4O3SwWA6HcAYk5ZVsB7Hh64AbL8dDuaAn7iVzr2ro4cIMKYcpnBvH0x2CU4VyuTb6mVD2d1yi5/uO3GMZkJS1zMyE1coeeFEp+Dq9zA9ul4c7RGjDZ4ZeAJySAAk8O3yPVzhEuGefE9UwhEu06khFRNJgeC4VDAFG1LnHl7PXKgARXCdPRVygk4W+K/STIZSC6wnHw8Hy1D6/P+yDdfAcAaAQqY5+Ks64ghsVoGm/vx6Aq01HDJAEQF3vIqq+SOg62kcv1a4d7GwGoNoIa2vT6doPgJWtzdi52Qt2bu4jm8o/tru3r9it65/YvTtXLSY8SpIkSdLnLQGVJEmvXecfZWxq7chSrSPL5eYtvzRD1wTbIiz9znK/qodNDOELTlPi3gyVwAS3J9ASj2fwAnqXWDa3wMG22M4BtAm0ABQY3AAwQLlaeIXjE8sFu20kAfocrFiCR1cLkFPFbKklpunFMsB4LK4HuCuuztHdQbIfk/sAWLg+e6uKLJtbWZolWAGUABwIxcD1vAwRs618rlWMfy/n5wk23uPl94eer9ibxbK6jsMQHDXADeAR50N/Fa6BQcHstYIL1XEXjXHpAcIwTwrPFODVQVlhuEYsgWQUOlw7nKuN431QL0oGd3c6BCQ4Uvu76z4oGNsCsPWQQNh1Fw3PAZ8BTijxOwza7W3Y/s62bXTrtsuhww37IPOxpQZZ15EASpIkSTqdElBJkvRahWjw9+bG7Uz6kb0zM26T00/s0YObtryY5vaTTlVUdKLiPqO9RLHHiCVwzVXCCSDEwymOzxGdHZ/vBKfLYQbfoRdorZ5jeh3cFR7fRL8PBtr6LCYCUjg3nCbAC2AAZXAoEXS4AJwkoRQNjyYH1HksedZ7u3gf+WFvV7wXrAOODY4p5mbC84glbT442OHJSxcj/HXWYh9XnvHmZbhZCNuI64HL1ISjVvcExIoPH8baGJ5BCCqzpwkDdAE1SObbDJ8BbdjuARvJXCnCnd+Hz5TyREBcY71dCMf7YGCU6QHCMPAXM6X2dzaTWVMtrh/uF3qiGEoR7hfPEeWBu9tdXpODfJH0d9DnIOLdrTbTD8fmPzkGqsOX3UtJkiRJOg0SUEmS9Fo1EWDhreV79qPyrfDDeMsm0L/U9B/v2A7AQPlcjA6PAszAjYpQEcv6oAhSeB9dGSbsjUAZSwITx4oQQDdnlSERAAyUpqHsDKABMCAsYYYTgIpuUJ7hFHSewrngQqFMDtAGoAIkxKAJvGI/RKifdNrclfKYdkCg93Qtsl+JfVRJLxUcKiTY4fxeQlhKnC8frouSwkbVB/kCbjA8GOeFM1UpZlhS58chxTDHlL5KcZGwySHDAfxQyscAim2U3iEsAyWEJT5fHIPgCIAVvsN7lBzi7+Tpf15qiGh6gBbgDc4TBgDj2jsBgnZ7XdvrA6jWCWuch9VteP9V+Pvs9DrDQcIOV3XeL4473O/Zwd4mAy4gQGW1W7CJvXl7uj9vc6VJe3D3is1OP7LVRQVUSJIkSadHAipJkl6rlgqzdj38aAZMpZ5vWaWP5LlV/iiPIQMvu1MeHAGXJ257AZaS8jv2MfE88wQEwAncFLzSkWmjJynDXp3tIAAWHCGGNwCgAAYcbouenmRuUitJ6wMIJQNxAQ8se0sACLDlIRFZD2egK1Th7KmTQIVjACu1kh/LOVABKvBKJVHqleICr4fzwvnCPuwVS9w4Ak0AOt/fkwRj6R1htOx9YTHCfaNdJDxhO9ZIKArCPC4ALcrtYpki+r7w/Ha3k+CIBJ7WO35N9mUlJY4AUsAoe6vWvBcK+yNUApCJ5wBo2t/bIDTu78G9qod9wzUQ7x7WgjQ/PFM++/DKXqsAYe1WmdtQ8gcY+4u7WXvjUtrGCgM78wBzqCYtt5S2asHj9iVJkiTpNEhAJUnSa9ej/H17vJOzR51xy8xM2Ydj71hm9pkVVmIZ3LH7xM/sUXKgAiBxDlXDIccBBeV7S/zhjh4mpvYlA2u5f9J/BGAApLBnqY1kQZT8eZ8SxGAKuEZMElxJSu0QLIFABoBEhSDBQAlCGlICswQaiKV3mIVF+Fr25EGClqcW4pyx72it7iAFJ40uUstL+ujAhfMDEgCISwvPErcOkIjBuF5mx36wBL4ALixNRIniBqLKq+yJAty4M+fuHpMG1+FyYdBvheeCG8ceqgBUsZcMfU6IWOc517zckdDJayOC3fuvcC+4doQx7LMJ96uNxEEvReyFZ8j1BBAFJDl81QlVvc0AWDvdsB2fWzwPUgXx3LfD+g92t5N+qja/+/blGcIUlT946f9KkiRJkk6DBFSSJL1W1Yqz9tHMN21pMEY9yZ/jj3f0MDEkIgEkQIC7QisEAUAOHSeEOxA8jssCYzAEgACfHSBQllfxmUxJiSBeAVko3fPZUz5UF31QERIYr87v8wQogMBWUHSpACZxJlMEPwAEzgdXCyAXgyEAEngPtyeGRuA8uD+mACbuUXSxYp8W4AnfA/7KubTllqZ4XQAWwIIR7zhfWCMH7SJEIhwL4AQEwXnykkTvD8P1cTz6lgBdKM2LgIT9UPrnzhzgqMHQCj4nhkZ47xR7rwifcMIcngBLKB10eK35fC32aCEt0fuv2KeF/iuk+G3CGayzpA9BFTgHe6nCfnCv0DfFqPZwP7hPxKZvtOu2H1574X/k5w8Wh0B1Obf50v+WJEmSJJ0GCagkSXqtKpYnbSz9hv3g7f+eQLVydIlBELFPaXQOFYQf2whmOHkeaBQ+8Orpd4gkR3KfQxl6cqJ7FJ0oBjoAbBJI8nI5pPl5mATDGBATDnDo+KykmC4I0GDoQwuDelcIESh7i65MLEtshVdcK0IX7gnvmaIHiGEAhPeNxUQ9vPcZVP4c2EPV9Bh3bEeZIJ5FtZh15wjOHVy2lveE8R7DuhpVh0PCIgHI3TUm8CF9r7+eOExFlvEBjBhjTrCC2+Wukr/60F6fu1VISiQBWf68cBwACpDL7Rjem0BpBMtYjohnAphC7xR6rFCC6NdDbxWcrTLDLJgQ2MNsKgz07dpgHy5Vxx4XbtlbE7dtLDth2fln9vD+DZtLj7/0fyFJkiRJn6cEVJIkvXbdWvxJgKkPbHlw3hob81YqZG1xYTKAQICGYpLcB6eq6YEPJ4+PAixFxye6R9HtccjKeCnaGnp/3FFCSRp+7HsZoAMPyuQ6gC1CEdwfD1mAQwNXBfsDHAAfAIPYt0Sw4sBfT+5joEaABrpiXJP3eQ2HBxPi8hyIi22xLA7QyBJBwBuGBsMhayBk4zjJDs4ZkgEBVDg3kvk8pMOdOqYL0hUqMd4c52lUUAoJNwwzqOoc2Ittva3GMGUPkAXAxHwogCPBK+yP2VE4JxP/krXDQQRQxrJFwCQHJK8l/WZw2/hsHKSiM+b3iWdapfuE8/c3WnSeMOgXz/xwf5vgyBlWGADMYb9tW2uVbXCwaxu9ln0wfcayg5R9cPeM3V3+5KX/B0mSJEk6DRJQSZL02vX4cdbOvj1jZ347bbdvL9r01LilU+O2MDcVgMTL99D7hJlHLwy+LXmiX3SeIhgNgypYEjjPV8AAIMXnLq3xRz6S8ODKIDwC19gCeOAHPMrMEkCBowNYQckarhH7oHyArc+xirOjcE3CBBylAFLe1+RpgwAml5caxp4rlNQBZLAvy+VaDio4P1IBY7T7CzAV1lpanbZaaYH3Qweviv28Pwuqlla4XpROokwRDhjhK8AM4ATO0c52i9ekG9XreK/UZosQhd4l9kNt+Wecw5P/HJxiGR/ugX1fAFM4UHgeKPNr+fPAWhjSkdyDO2eFZOAvYtzzLLFEiAWTAcMrSj5ZWtlFMiMctwpBC9CH7ei92hv0bSwBKqo/+dL/lSRJkiSdBgmoJEl67Xp/bM7+y7Pn7L+6mLfp9IA9PZUAC54mN9oH5aAUIQqCczWanEdnKnGx8B5ggx/x7bq7P9vhB/lWt07wARh4Cl+OYAXQib1EcGfYm4R4cABbAIhtHEc4AOT59T2NrjIscfPyQXenhuvEOgLoESAAFOF6AB32TSWumpc2znOQb4xOx70REKseJOHPwNMLveTQ7xNOVK04531NPD9mb6F8r2rVssfCI3wCwEWHDVDZW6MzBXDCPaOkDsN24QbR1Vpv2G4AF5TdITQCZX3Yj71YzULiHiEu3SPUmSZY9XJGPhv2pLlTyO8As+FzHN4LB4t9ZnTFPP2PYBWuD9esi6HAiTuGssK9/rodHfbYv3Zw0LeDvb7dyt+2zNGULexP2sT4LVtdTAXQnHnp/0uSJEmSPk8JqCRJeu36+NK8pQJIQdMzR9bt1Oh44Id3DJpgQMUIROE7uB+AoOjecJZT0vMUy8qG5WUIQmh7mAJnJ635HCe4XjiW+8EtQT9QUuIHMICDgzXAMem23Z2KgRgRnhip3vL4cWznupgMiAG9DnIAE4Id1tdGuiDK4Bx2fJivl8Jx7lPiNJ18Th5+UUxK7kbWjZCImkNYtYhZU7iHMtfcaaKPqUFHDhDHqPdNT/xj+SN6uMKzBkhhf0SSI0Yes556+B4Aip6mINwP7nF7w9MBkawI0PTySncS6cIl4BfBNq7TSwO9BwvPC+KxeCbhHtwhdEDlPKzNNQ7ybdaKvAeU+u0FyFtrluxG+Lu9kX5sY4Nt+/PMU8all/IZRtOffG6SJEmS9HlKQCVJ0mtXOZex8fcv2Nyv/8Lyn75vC5kZu33zmj24d8MqxSx/jKNUDftyyG/iQnkKn/+Qj24Oo8hR3scQCrg5DmQs4aujL8lnJ3kPkMMJtgNQWKaGAAe4JzUv9/NocE+oAxzRlWonQ3urWTorcF3gohzPqMoO19hIerNQbofzxfI3lMcBmny9DkR0mHDe2otztyDea/i+lJsJ0OAx7HCGYmw7oBIwsxMgJK7J14yBvU2W8zEYoonZWe44Yc0AIg4sDjCDMAgEVGDe1OYGZlNVWGaH/ii4VIConXAe9pltAtL8uce/SwTM0bLM+PeBAMhrLOFLADRx9giW4bkB4vD3AUzhOTIpMKgfIK9Vy9vB/rYdHvTDPlX72fIsYeqPbk3ydbX88v+VJEmSJJ0GCagkSXrtqsw/svRPvm6DO2NUY/yGDQ53bb1TsyZDFMpe9pZAE0Hkd0AHQISx5HSS3LnCd9ElGnV2WOLX9JlSDHFoeZx3t+3zqAAAnRYcLXeu2DuEcjUk/aFELXGZOEOqFtP13HEBZMQSQACCO0uAMgcJwAJBAm4ZoGctSehrYM0vDylmTHzSS4X7rhW9JyuWHXYQQNEpERrZN4XSOYROBBhpBICpB5jbWvfBxXCpcAzS/eBiAeAAfJgHhaQ93M9eAJvuGsojEZdeY0gH4Muj3gveYxa+H/0bwPmKzlv8LjqIMdUP0IXPXmaJtMUlXs9TB9Gz5sDbbmGgsMfHwzXb2WzzmoP9fgCqnv393/+93e/WbexomzB1/mgrcfRe7K+TJEmSpNMgAZUkSa9dpcdXLP3jN4ZAdTBxLflRXyBQVQpzw329J+lFmPJ+HZ/ZRBACKKGPKfkcI8pxPi/XyyZwkJTsod8oCZPYYHjFKt0T/MgnQKGnCL09jDZ3APM1zDPcIZYieijEPF0fBwYvZaNLA+Bac0cs9kSx/I/uVBKiwVeAlifjeZR5aXifMeAB8elYK/alG8RACjhrBZYlwkFD2AXK4wAo1ZK7Y606ep+WWN4Xzw2IbDU87hwlfCjxQ3kdHCgfkOxOIFMBET4RzsfUwLUyHT4mFTYwZPm4VwrXiOEgdAXb7vjhmeF6CP7g3yxxx3DOCJM4Dg4VSwBZiti0/Z1Npv5hLhV64P6fv3tuxffO2PXf/rXdGL9jmZlxu33zMsv+Tv5vSZIkSdLnLQGVJEmfieZ//QM7vP2+9e781rYaiOduWrW4SAhA4AL2cTg6diEcpNy5YVADfvw34WxEwPEf9jgGr9EJAgTQHWJiXYluTgyXgCPirpIPAEa4A8AK7g/6uGKABKAIQRdwtugSNXz2Fa7lfUAomYOzFkvcMEtqga8oexs9j5cJeg+Vlwr6IGHcB46J8OXHeCz66uKzoRsXXTYAFwAPZX57/Q6BZz9ACJMGq3mWCjbDOgFccKU8wQ/R6FU+G/ZKdWu8Z7hbeP3/2ju357bOK8v/MTNT84dM1TxNTU3N23R3VVdXV79M1WSm0omceyfOxXYcO0nH8ciyfBEo2ZIsWbLuF1IXEgR4J0ESIHElAF7AC0iKUNJJph/2fGvt81EKIXcc60ZG6+FXAA8OzvnOAR/OqrX32i58IPCS4cOJA4a1oNcK98jj0D0sg6JvATO5pvkZSymTdeIe43j8raqeyEgxBQexDncP93Ha2hSvVXfCKPRyLAfsdDZZkrg8lbXMd1+yM//jr61zMmW5d9/q+n8SQggh9gsSVEKIZ8L8+EXLfPJNy5w6ZOOXfmIjQ2kbyQ5auv+mVZN+pLhvfPCGIxRL37yP6EG5HMrMovhiqRmizeHKICCi7il+EAZLCwinKLkw4PBeJPXBpcrZOkveSl6mV52lCIBwYt9S0u+Ev32uVJxzNZ/0/5RYqkehUEYPkbtOcSiwu1Du/nivlwvC6KrBAYIooUhJRJWfM+nBCt9HgmGcUxUj4eGszefhnJWTJME5ulaIJW/UcN1YV5HuFdZItwoljSxddAGK2HIIJ5Q5xnuI4+OYHrARQzVydJvoyC14eiGjz1s1XjvWEnvQeLxkX4jGGAoCAYg1+IBglPq5+MLasH44lRstJDOW7TdBUP3+d7+19WLeBr9zyM781d9a9n/+wNYvnur6fxJCCCH2CxJUQohnwsSV162TT9krr/47a2TftmZ4kIdzFMv3YuiCz3ZyMQJ352HHCrijMm3leY8rp5MUe6hQRgexBMeEpXg5KxW8RynORIKYgRsFYYRtDK8I+/qwYIgaH1yLc8UgCzpK6EWiGJulaIoBFOhviiEMEAwsRUzK43y9npDnrpj3buE8MVAD4oPhGRBN6KPiNbnomgvCyUsbXUxClLhomeXAXKxhYw1JeUt0nxabmEkVxM5KnXOdMEiX1wDHLoB7RpduNYgslDo2MNjY3Tysf215gX1lcK4oDtEbRRHkc8BwDhddeVtl1PocfwteIwRg8UGYCPZFWAZLBcN5i3m/FytLRf5eeI++sPbakpf7hfVuo3/qD7+znZ1t++zUbes/02fLZ45btv+65SbSZO//lRBCCPG8kaASQjwTZu68Z2//6CW7/tV/T2F1Lzzs18pBuBTdjeLQW0R0lzHfKUZjeymfuzqxXwcP8f7wHo/tJXMQBi584LbgoR6foTeIIgTuCkrhai4MUEbn5XmYt+RzlvAZtsdzw+3i/kjbg9Ci++WR7HC+fL4SAhgKQTCgHBChDEmsOgXS9ENOlvcZYR3o84JAgUO0CAcq7FcsjCW9Xg8cHy8Z9KCNNc6TgmDzdLyNtSavox1eV8JnO1uY4VSh29OoQgi6G4fzAB/8O8n+LDpoieiMIs/j1lHiN+1uXw2vnoj4wCXzKHi8omTQ+9C8/BFpfU0mL7oopktYdxeRArgwzG1tBl54QiHWBNG1ubFo223MnmrRzUqdHbXDqSFL5zp27uoI509Njw/Y5Njdrv8rIYQQ4nkjQSWEeGYM3zphPz2atZcPD1n/2IJ9cvqkDfTfDvQl4sEdDjzgszyNDtWDuUP4m/1IFF0utrCdg3vDAzq2MZwCPT7hob9YGGF5G1P7lnz+FHuHgjCBY0ShE75L0RXEDUoAIT5wfByPAQ1LVQoACBoEOqyFv+ECYYZTTPnDAF6sywWXuzvoSYouW+yf4rFLnmSIdccZTzi3Ozxxu3+XAjJxwrBOOFMUhuyJKtnm2iKdKs6UQpBEs2zVcK75mWHDcGO6RRBNcOYqSPub3e3hwjXG8j7OxqpMejkjnCj2NU3zfqKHzIM1/DfB9ihqeQ8478pncEU3DPcfa8R77Iu5VrjvdKUaHpQBcesJg3ApZ+xee9V+c3+LDtiRj7Lh/2Obgio9ud31fySEEELsJySohBDPjJ99OGqvHpu31I1fWE9vhyVpiPdeXYa74Q6Tl8R5NDnL+VBSlpScwT2hw5NsY+9TIgDwMM+epPCdOMwWD+voLeJg3vAQXyvnPHqcD/4PEvgWk0hypg4mogaDhyEC1leRioeBud6jBYEAZwYCAmuIPVGxP+rhOVPY5qIF4Q8PhFQskYsDhj0O3MUgQzBK7r758OEpm8+P7ZYhbm0s09WBiIKYQhQ6rqcV1ohrXwnXgVdcPwI/cE4cg+mENZ/JxcTEIALhZlFUUjTNUfjFdVEY1XwOmLtsHnQRhSF+C4rXGuZSeR8YtqMssd1e9h6pRQ/u8B6sOBy54vexjr4vzMbyuHYEVPzrv/6r/e63HTt9adLF1HTHxnINnmdv6acQQgixX5CgEkI8M145OmKpmx3S03s/iISiIaQglrft3T/y8AM1RUzJHSo83OMVD+jucCUOSnj4R5Q4hRTK3ZbclaIbBaFRcjGGfSGo3Cmp7rpLKJWjEAvfwcBcHDvGsGM7xBfW8fCaPVjCHaUoDOPamT6467wlTg+cNoi/pBSQIgszpeZciKHMjiWJ4VhzsyNWmp+yZr3E9UOAtpYRqOEulAvN5FrDdWDNuBaINB+YjOG6D9wy9oDBVUrKFyGwIKiiYKWDFM4BcYZ9YogEv5+IyPjeyx49yQ+CyuPkfeYWjrO9uUJnD4IPopSDl7lvnmIaQgrXBNcPv0Fx4KplTr1j18+ctXTvNeu7fsGyg72Wzw12/V8IIYQQ+wEJKiHEM2MgMxbE1L3Ajh2907ClVsP671y3ocFbNpK9bRMjd7q+E2dMxb8hWuIMqhjjjZI5PMB7mIILDPZThf2QSIdZSNjfH+pnbG5mOOkxKnDmEkQB3CyILOyH/dHrw1CGpvdKebqdJ+Y9vD6IKu+LcoHkJXXuCLFkjmKksnsNsRcrxqRD4ETBAyACXfy46GuvNin46uhDmp+0eg3ODuY4YZgu4sxdRC4ueOkiShMZcpGkE0ZRxsG8EHZlTy/Euin+yhN0qVxYQrAhOdDLH5EeGPvaXIT5AF8P9/AyRh675hHx3rvm52OZYiLwWuG7cNLubaFHqk6RhvPwXOxvQz+ZO3/ZM+/axPmUdfJpuzfb3/X/IIQQQuw3JKiEEM+UVK7f/ib9VUt1mvbj0T6bnMjYzOSQFWZGbH72wYBfEAMpHvyNeHRP48PfnAlFwVLeFToQLhAP+BvlZLH/CL1EiFGPg3whwhBdjrI2iBEICJTBQQRsrC54D1V42EfoQ3RbUDLn5XPJTCyIh6q7SpEY8c4wCDgxiWODddHBSZyxB+7WGB01D3yAqzW6e24fgOuihql5yy4OEWXOskMIOYopOGpVHm+VJXVeZggXCufB5y6qkjh4rAFuEaPbMXzXHSvO7YKDRCfOz4VXOkrhPmE9OE7sa4u/DY7l9weDkwsM7MDx6HiF46N0EiWUm6sNWwtClSK3UaSgwj3C9Xa2N+z+zqaNnPuQYgpszyiEQgghxP5HgkoI8Ux5ZazP/t0nVyioUjtNa2FGURA+D7tQYG9JnYc0eHCDx467cFlplv9IZGEbxAb+xgM7RVQD4RIVOjM+UNdnUEEoQJCtBzGC8AoOwl10EUHRhf6fZB8GPCRCxJPxvOzwj9cXy+rgVI1zP6YCJt+Hu8bSwCDc2CMWjhGdHPaDsdyu5HOgwlohYCBQOCsrKb1D+WIM06hXEYIxl5TaeZ8SzsU1J/1hXmLnpXhwv2anBsO5p608N+69TThuIjZ9OC8S+DAMGWWDHkHva/AgiSiiYtkfXCmcn7OmIJzgpiWikyEgiQuF++FR6vitPb59e6sVBOsirxPR6VONWUuNXLZTY1etOHrLbl49b599+rHd7rtslYfCSYQQQoj9hASVEOKZcmJ6gGLqP/T8gx3fqYeH7iqHu+KhPvZGQTTBjcL++Dv2I3l5m5egeU8SHswReuBhC/g7zknC8RiusIDYcw+94CwpihYILI/6XluqsawO/UIeM56nIKPTkggMiA4vb/Pgibi2B+t4MJQY0JlJHCoGWiDmnQLKEwhjTxjdmSR+naV+iShDlHp7vbk7iJgldBA+TCZEOWLDioVxjzSncEIZ34P1eSR5zQVWHemHYzwGhFmce+Ulepg1hbQ9zOVCOZ+nFsKpcifN3Tc4gAslT2Gkk1VHuASGJaPXa96FFEI/SjP8DdyJc4cQUe1RlDKEYrFGtwppifgOjo97jMj0o9kLlu5UyCeTN7luCFCw9/9ICCGE2C9IUAkhnjl3JwYt+/6nljl8ysZOXLT0wG3LDt62ocE+m51K77ogMUghujmI9o4ihp9TEHhpGx7isT8e3PEZHuIphILQgOOE43hJm8+Fai374Fm4IxtBoLgAm/O/EZ+OUkCW1CFi3Pu2vFTvQTDDHyfPje5GkkOcRZcGIg6lc1gLBAwFYsVnX3HOFQQWrqnsPVMQGdifZYx1HzjMkrqwZgiS9sYiBQyi0GMMO2AiIIRXUq6H9aKUMAoslgFCgNEtg8DzQInSnAdF1Mse1Y574GLPnTwO9oW7BOcqCDGGdyTHwP2kcwURVvcyxV0xi7Una2Q0e9gnDgaOjh1cQPxOm+vLdm9r3d7JfGZ3111QpbdcbAkhhBD7HQkqIcQzJ3fuipXP3rJOOk/q4x7NTZeKDpBHfcckudizA1EQgye8BM/7bwBEAIQHHuJZSpc4RChfQzw4BA3O0QwCCQ4UhAEe7jFUFmVncF3w4L+xVt91mKKwYGR4Dc7Sw0OHnVh+iLXSnYEAqvoMJ4g59GphG4SSD8z1Mr1YPoj98H2EY2DOFMsQE4HCgcdhPyT8bW4sUbwguhwOD9YEt44k143z0nVbxkwqzLbycjwXgyjdQz+W3xd8h6EWYR8GVOB4ycDheF2IjEcKH0sS4dCVsS/cMPRJ5SmgsO7d/jS6UAsUvhS0EFdw3nDuxO2DAEa5JRyprfUlrvU3nU1rbTXsk8nLlt6p2MBOySYr40Fg37Tx4e6gEiGEEGI/IUElhHjm5G+6mPraqV+G14IVxkaDSEA6Xd6dnKrHmdP1gbhKnJeY7hePA0EAdyr2X3GILURL2BcOD9Ln6NSwhA8x4QXOrALrqw2m/iHWG85JjPTG8VhCx3I8Fw2xlC6e18sQ3VWK2yAiYtJfXCcj3Bn2kAznxTUkApBzpyjAfLun8GGY8BxLFb20Dn1cJatVXOxxQDH6m+ig4RzoYUI54FzYJxn6y/XC0fL7QjeI5/F7ge+wz4pizB0uisCaB3nAmfM1F6xcjAOKcxRY/I3g4q3UGdYBkegBHUmZH0RpuGdIG9wIQgz3Fel9cLYgzNqtBq8HoRSITN8IQhb7zVeG7WzmiJ0dPGLznbRNTt+hmJoYvWuzU5mu/x8hhBBiPyFBJYR4LkxfuGGtvmm7+O6YvfbamM0V5m1kaNBmpob4YB5FDARDFEzuBCXJchAALCcruKhIStpinDeH0NK9mU5KzopBBCBhDq5Lg6IAgoBzkJarXnLHJDsk/EEEuEMFRww9UyCKKJT2xeuITlR017jmmg/3hXCBOPGSOk/X47ynXVcpcYogJBcwFLey6yah9BB/47vo94IowX1APxjmOtHF4vEgQsNa0RNFEVjwIIqklDDeqyj06uE9kw6T3jM4TLx/NS/Vi5HnEIONINJwLpQY4nM4fHCXOOiXwR/j/A7uGVMTUdbHvrQqxSq2YT/cXwR/0IVLHL+tjRUKRJQLDs9esZGlK5bf7qegmmsNdP2/CCGEEPsVCSohxHOhODtq3/hG1lKpDvn1WzmW20GcIBEulvU9/B0XLD5HiaV+SVkf3J6YWBdFGJ0mlNyx92jBU+jCQ347CBWIAogiPPS320te0pc4K+xbqqHszR0klt4t+NylvdcQS+1iIETsm4IooXAIYsJ7iVzoUNDwmO4CYX+6cUm4AyPgw3eQOOjfg3M0E4RH2WplCBHv//IyRx80HEscsRYer4IUQr8/LCcM18nBxMm9wTVycG84ZhMlkwteQskhwCwZROlekUIq9oLxnHT93F3CK4fyhvuIe4p1U7gueKjFGlxAOIS4D+GYXhJYZq8a+7sowrzkcqu9bOXyHbs2+iub30nbSP2mzcykrZT/4wh9IYQQYr8iQSWEeC4UpkfspZcy9vWvpSmoTp/eDA/d814GBwHzkKCCOwRnio4PHaPx3bI69lpRUHhpGkUBBAOckSSmGw/6eEWaINycOI8K/VPLQTRAdEAooDwNgghCBceMrld0xYALphihDrHgw3JjL5Q7VEgSfNCThD4huFJ0ziCqKi586BJBMKEsLqxnFSIDke0Me0AvVCUIoBpFJK6Lwix8B2uFKEH6XYyWx3HjK+PawzHpqlXgtLngYtlhOAb7ohJR5q4ejj/Lc6NUkDHt4fpQGolzbwbRs7mxQscJx10N4pSiqtXgejh/qoG5U4mYo3PmziGTEsNnSFKkmFrw2VxrdODKNpv/wAYyLwUO2cj4mzYyiiHPtyyfU6mfEEKIg4EElRDiufHBe+N27Ng9e+3tgr16eNQGRkr26ZmTdu7sx5YZuOHCJQgWL7fzsj58j+l54X1M/2OpWyIOPHzC5yFxSG3ijsBNcbeqloRUIJWuSJfKe32KdJqioIOIgpsEAYdzMnQiCXkADK5IeqYY1sAyQARjBEHRxLDhEoXEauIo4XgURQSiKkdBBIcHrhECIDwJr2JrSxjOi74pH7KLkrtiYYznazUxgyrPe/BA6Lm7xJ6tuif5sR8rXF+54AOS52dHuN37sTxSHutmgAV6tSCi4BxB0OG+1bzcD6IOQR5w+XymlMes473fw9Kug4drx5oYTR+2b20s8/hrQQA+HG0PwddacqcrO/ID2+6kyL3A3v8RIYQQYr8jQSWEeK4c+WjMDr2WsdTlTmAnCIFS0gPk4omDY5OyPggG3+YldYxJD/typhJKyxKnZDM8yLOnBwEKcJ5Y4ubldxArKGVDSAXEAgRWdFHweeyXolgq+wDaWLoWY8rhRsU+rxidzrK9RNRBwEHYYI1ww9grVXswo4n9WtgP4Q1we5ZRfuehDhAqEC8+BwqR63B+3KGCWPFhuzPJOj0NEft6oASCJlxY4Zi4RpQQ4lwY5lune+cCD2ukkAzrq8y7OMQxYtqiC7o5uki4T/UKIs6DICs9KCtEnxeEGe9X4sDhPqK8kpH0cOZwXLhSEKJVRNjjswXbbK9Y5966TUy+sSuoNrd7dh03IYQQ4qAgQSWEeK68cXQkEVNOqfhg/hAERiylq3EorpfiuchIxBXF1ggFD0RCe92T4xCAgId7CpHwHR/S6wKCLhAe+Fcbu+Vqu/1McJsQI45+piUMBHahggAGnAfCCSVteE9hhTI6iCEcB31NDcxqQp8SwicQnIGkQO/RQmR4PB5doaTHCuuCk8X0vUTUxHANOFK4NoZhBOESUwK9H8udMThdTAqsotzOZ2lBSKLkEftQJNHt8jI+nI+hFhSYZVtgCeKUi59wzzcRI9+EyISgcgcL14tSQcyvYhw8vh8HJy+XeG5ct8/2WqBDhfsK581LMF3gMhyjEe5HpWCjL/+zZQ69ZqMXfmJLS8ftyoWPbDjT1/U/IoQQQuxnJKiEEM+VwcyY9Vxyd+qjc6tWuDRgc7kMB/1euXjGcpNZFzGJ4wNRgSCFOHcK4gfODUQUkuPuba3yYT6m6OEBHg/7eKBfW67ZBtyfIBrW13yYrwsdHzCLfiGkAWL7MuLLkciXCLbY08UACjhMFEZ/TOzdgujBMT0mPRx/EYOH0WvlZX+MRU8Ehl/bHN2j3WAMzrya8H4qiMfwWXlu3Ir5YQoYOmkI7iijDwshEkgCRKqez9zyIAiPfEe5HYUhSxXzXCedPYi/JNkP18K5XAEv5ytTNCIKHmuMggjJiTgPQ0HgANY94W9zrRmErM+UQvBEFKi4XvxOvKZwPIg/9JVttVesePIcxdRP/tevrZO6bLPHT3X9bwghhBAHAQkqIcS+YPTYFcscPm+ddMXGT1230tyk5aeGLT89xM9jkAOT7apwp7wEEOJlrVWlK7ONUj/0Li0WPVSihhK9cW6D4PJZSx4Y4S6Sx39DKLSQaAcRlggWCA6U1kEIMEmPoRgQYN5D5SLK48jpZi0jWtx7o1hSyLAGT9GDGPEgCxeEcTu/20T8+ETiRiEKvbAbRoFjePDGpE1P9vPYHgaxwHNViuGzipfxeZCEu1t0hxLBBjculgJSPNY93h3Xz2G/DZ9rBecqunlI+YPowz4Ezl4D/V0lW1+G4/RgnVgLRBTuL1xA3JuHf1ecD4IOvxMEIH5DJPs17qatc+yy3f/oGlnq1wBfIYQQBxMJKiHEviB79ALFFBlEutzDQ3PhDuXocPjA2xg+4eJhY3WBD/t4cF9fRiT6uIsWlrW5U8RobzpVSahCEAPtteimTFIgMHocAQzLKBcsegx43bczOhyuU817mzykAr1EPkTYwyY8sY/iKOwfhRgdp+R6GPsePqfLgyh1OFhND3eg0wSXCKVziHlHGMWcl9jBifO5WB54wZ4ruGLoDeO6EvHGXrE528DgXaw5WT97q/iac0GJ/qmlJIYdpX24J5wxhX4zj0XHPYhlky7upvg9fNZahNgK9ykISZYthn3dlfJkxuq8z6jyAA98r8IgDbiEIxdn7do7Gbt+NGvj75+z0bPnbWYy3fU/IYQQQhwEJKiEEPuC3Pk+iqmddBARg2kbmP7MMv3X7U7fZRscuGkLFZSgQQzgAX+GgggpdBRLQSAw7IDbkCiX874p9v6M0plBb5GLqXIyzBfJenUeE+fHcVmutohhtHB3PCIcIg1iLc5xwr5MAsRw3iA0dp0t9EU1fJAt1vQgzh2ujIuMBfSBcT8frEtBCFHD9SNtEHOeMFjYQyOwbqy/FIAbheNC7EGgVRCFXsMsLvSZjdsC7kkQLRsbi7tpfJ5A6HOuvFfLh+zCqcO1Yfv2VouR8h4Ekk+CN6Z8Hej/arrbFZ027ONBGhUXoZiVlQg2XJfPvpry48MlRIhG+BxCEP1trUbdrr6TtcV0h9QH17v+F4QQQoiDhASVEGLfUJzI2mf9H1q+kyb9M5esXJy2Qi7Lnh0IADzU88F8CYNjZzi8F38zPIElZ3mKHQgXOCJ0dRpFzkGiCAj7QAggvW49CAmIMnwX86li4h+S8SCOcBx8FoMxYkofnCcIBawJQoqR7uFvJvNVPA4d34UYisEVEF2ci4Vzhf0Q1oC/cX6cyxMF532Qb93DIOiuJS4X7g/6rCAEIY7c/ZmxUmGc87VwLFyTD+ad23XKVlBux/4uuHXz/BwCDqEVcJoY4V52UQkBhlI/lO9hDXHelUeie7Ii7hkCP1aD+GP/Gu5JEFW41/hNVhdRYojSRu9tY88YHbPFsM4l62xt2LUjDwmqTGs3KVEIIYQ4iEhQCSH2DcVC1k5lDtuR069SUM1u9rPnyEMgZmx7c5VletH9gbMCh6cVxAdK/SAyYow4hQ76loLQQZkZxU/iKEF4bLdX2MvjjpI7M3Rx4EYFweXizcUJRAH7kNAzBWFF18m3QUxgP6wR10BRhbI6CjcXWRAzFDpJv1YMr0Cs+BLPm/c0vxqE4IOQDAZgoHcsHC/OeSrP5XgPVharfv0oNwxriOETDOSAA5WUOnoUO5L8XIRh/bXydADH9L40P6+X5uE+sU8LCYi7pZI5rhPOF4Um9kcpH0oRk/lcvCaWD3qJIQQWXuECtldd8F2bKtg7vRk7c2HUanc3rdDbtKuXz9ns5GDX/4IQQghxUJCgEkLsKy6OHqeYuraasZ9OZO3I1Kjlp4ctPXDHJsaQcpe34uwQxQV6jPDgT2HRKLobggQ9zn6CKzTl86hQUsfZSFX2Fq2v1H1oLVyuaiIoEvHQDsfzYAYMBfaQB+yDtcFJiWl/3jeEfiY4ZQh38KG8EEdM2aOzNJEET0BQJbHoC3CAGnTBIHw8rMIFnTtUEDbey9UMxypMw53z4AgMyr23tWbNcK3VIqLgPU2QUfDoi2IsPISZz8zy40NsLdAx4kBfnKMCgVSgk+YlehNcN0sY2ROF8kiUOaI00R07F5U+mNj7wryskY4fEgUT4cWeMDho4Ty4vxuthm0GAXi/07YjNzPWV92wr/z4bUsvbXb99kIIIcRBRIJKCLHvmCrcsW9lBy3V2Xby03Q6IIJYGoeSNjzsJ6VtCFNYX6nszl2C09JqlimG8HDP8j7ORvL5SxBWC0FUQCjEaPH4GR0riIOKh2B4sIRHr3N4LfqYEBhBdyi6SpiPhflU7pChVwr7UyzVUEq4QGEXY9HdSYvznLxHKQZfRJcp9jx5GEQ4B52jchBVi0kIxixFJK6vNDdG8QPBhHNgDRCeKB9kmWP4rDSPgcRjvL/eJzXB9zhv7M9ieiBKGhNB6H1eHjqRzw1yG74Dhw7HZL9aOA9L/eBeYc1BgG1tLO0KQCQw3u9sWmt12j68dccyrR1LN9Yt21ihWFS5nxBCiIOOBJUQYt8xHR6yD2UG7BdXNyioPt5s2fbmii0i4W4JwsmFDIQSyt/wGQRTnLcUxQkEUQx4YOz3ss9DWltF1Hedx+Jni55QR5cqGcLrKX7uREEs4D0E2uYq0u8gjpCyN8NzRfGENbGkrjgemPCI9IUZ75PioFxP8WMpYRPvcX6EUngABhLz8J4iBu5TuF6UK0K8wRVaXaraZnvZSoUxOklYN88V1opjeyIfygRRcujvvd8qb6W831usKa4ZgstnSs1xkC9j1SHieM0eltEKwgiu2ULFkw0Z/V721D/GyNeTsBCmA3qAB34HzARDYiDmU6Vzb9iVzKHAN+zWzDU735+xKxfPWu/1z+iS7f39hRBCiIOEBJUQYl/ys7FhS92/Z5ebfTacfdnGR16xwmzaLl/6zHpvXrW+m9dseGjA7rVXGfDgs5xm6cJAQEBIxEAIiC2AQIj2GtwTH2CL83jJXMnWINSCeKC7U3VhRKdrEWEPVbpScGQY8JAIOsaEh31wnlg6h2N6aaAP3YX75QEUFYZALNYgQgpJQEYQQRSIEFbulmFdMYzCAx0KLKWDuPF5T40geB4k8hWDUEJ/E8sEIeroPiFdr0BRxllZDI5AD1iSRLjoUfMUknDJUKrYhNtX5D3i99gjlaPYgvjEvcVacL8o4BLhxyHAKJXcWPRSRkS+h/uEfrff/uaerbaWgpB6yd5656/t1GdfsYXtVNdvLYQQQhxkJKiEEPuWmcKYZQe/belz/2Sd8CDeXjvORDs+2ENgBIGy0UL0OcInZiksFoPYQOACgx4goDaaLGXbWmtyf5SjsVwtSduDIwOnaG2l7k4RQhwS58hFUDOIorptrS95SSACHoJAiZHoHh7hA4aZ9FdDCqALl/jE3S4AAB28SURBVDa+i3LEFoIZmhQxcKtwDRB4TMtLzlWeh2hyMYU0P1wfXSyIrSWkA9Z4rcuL4RjJjCieJxFX3sMFhwvrRhKfDwaGsMP9gesEl8yHA7sLhzXjGCx3bMAlQ6CEz/xi9HvS49Veb3pZIudhje1eI/ZnBP0KotxnGQyC8ka4VBCgxZWCnci/Z9eHv2OvvPrfrdkJYqr1UdfvLIQQQhxkJKiEEPua7MC3KKZWlw7bvc0TdHggfCBUNoJI2d5c87K1mJQXhAJnKEEgLGD2EYQMUvGKPmMqbEeZHIMWKi6EXOQs032BaIgDg71Hy0vvsA9S+9Arhf4nCA0cJ64zRptDcOC7EBqMMw/CDYmCWC9FCEIbUErHcyBFsMh+KE8DdEHVrCGl0EsNMVsLYg4iCe4PQi3gwuHccI14boi7eA/CcZkIiPCI8oSLP5Q+Qmyir6oK58x7xRh8kVwvBFXsZ8J3sC9nSYV94MyhxJDfDfcL23Au3JPYY4XySVwPSv3Yr9au2fez37ZU+6id3XjXCqsfWHHxlM3n3TXc+zsLIYQQBxUJKiHEviafe986Wykr3bhq176ZtSsvZSz7/rhlB+9YpThn1XKergjK+NgHBcelAcGC5LskZAIuUniIR+laFClRRFAIJOV+TLVDSRyCIhroEfLAC/YhQYwgwOGhtUGAQED5DCmU63l5IIQGRBz6u+DeYE4Wy/wgtJLSQ5QYYn+GWJTGXZRAZGFQMLdNeAoh+pPCvouMQncxg3PXwndinLuXOyLgwq/VSw5ng3gZspnJfg+YQIofBCTLA92xQglgtYT3GIDs18TZUUnoBM63WIcInA0CsUGRuNz0a0D/Go4HobW92WLpH+7v/Z1N+/3v/8X66332ncwh+0bv1+1kJ2WfrT3sTPlcr72/tRBCCHEQkaASQhwIel8esdwbVWumOgTx4X8ID+4QAHCR4Dyh7wfiAeIH36FThAG24UF/o9W0zY0VQwodHCI4WR7AgCG6QVAl/Use2OAODFP8kv4kiBbvb/LSvgYCLCDYFtF3VGMJIY7FCHOk3rVQ/ob0wSp7qOD4wGGCiFpkGp/HusNdY2Q6QyDm3f1KHCJ+hiHFLNfzQcO78eXo4Up6prA+CsNEBGIfrp1hGTmeF/OrIKKKBQjAGUavs0wRpX8LCJaYcgG5CCcqCavAsONW3edpNRA0sew9XBSqno6IWPTfbG9xppen+i1Z3+lxu/LhsKUunbH3Bo7Yr67+0i72nTYIqfh7wmXDOff+zkIIIcRBQ4JKCHEguP366K6Yahy7Z+OXZmxpbslmc+M2NjIYXsdYohadJQgfCJ3OvTZFFWDc+IL3/+z2HWF+UxJVDncJYismA9JJCkBgOV5W56V73n/EZED2F/kMLPY6rbmbg94t9E8xTKKFeVkYMOxOFEQZhApSACHs0GNVzA9bpThB5wjnZZIhAiNYJhjOsYB+Jwwe9tK96CbBjWMvVQ09ThO8RjhZ7MVqQKTFCHiEbfgQXrwyfKM0npT3ubjiNSF4YxECaon9WohqpygNa+RgZLprXrKIa8N9u7e9YQvVgqUv5uz84Yylf7JilXTHLkyetqn5O7uR7Q8Twzv2bhdCCCEOEhJUQogDQXFyzPp/MWa1nrb1/98Ja4WHdTA/ORce+lvhQX/BtjZXrL22SDEA4YFQiI31JdtAD9BiJTz81yi2WgiDCKIAIoUDfpPBwHwfRFAUMjgOxILHj88xkIIlgUzKQ1mhD8GFkINDBBGF83s/UYkhEvh8bRnH9Khx9iWxpM+dKDpilSkKMogebMc+6JGC44Xv4frhaiGJL8bBc9uCJ+9BrEBgQVihlI49ThSViGrHMGEk9s3QOcP+OAfEHcRRDNqgC9bAQF84dlV+3l53sYRjxeAN9Hu1ljCDqxzOg7JBJALOh/u8aNNLQ9b36RiFlHPfChPdQmovuA97twkhhBAHBQkqIcSBYvzKGIXU0u1tvi5PrXFw7M72Ont5NoOgWa6XrLGAAbMt29lao1MEcbPVXnG3KAgtiCK4LltBCMCx8XK6IDpW0GNVSwRVkaV4KIODKInCyUMuXJxAhNC9WfFodvQaUWghACPp02rDnVr2qHa4QOh/8vS9nDs3RZ/vxMRAJujNsiRxsZZnjxaj3BPXql6ZpgCjU7bgM6eiGGKp4XLF30MMhmuhE5aU9sHZQjgF1gGxCRGH7RCU5eJkIhKLtrYUxFS4DvR5xfI/iC44Z5z3hbLABQ/TaC5A9M3Z+5Nv2muZQ/bLuz+08WsNCqpSptX1+30eMTxj73YhhBBivyNBJYQ4UBQnR23w+BTFVOnDS5b99rfJ+CcnLTvYb/13+uzm9UvsibrXbgVRUPJEwPVmEF1rntgXBBCS6zbbSxRAjDtHSEMQKigNRG8QxAUCJVrNMtMBvaRvLrwv8RWfNxAUkbg30eHi/CnslwgciDWInNibxWG/Yf/q/HiS1jdBF8iFFMrtfFAuts3N+pwsuEg+jBiBFgjJyD+YXcVkwCTwghHtcJYWbRPJgOzhqvH8cZ5UuTjN+8GhveE7CJWoleDIlVn+CPHJ0sdwzbhXEFEQVThvHNi71qoyQXF9bTmsq8Hrfj3zDfvgg6/Y5U7KLn/JWVMsAZRbJYQQ4oAhQSWEOHAUc2M22z9mQ9/7nnVSKaenhyVum+1lCiaIEwiozfXWriPjoRAl9jjhb7gteICHM0IRs1S1zbUlDqlljxCS+1Aa2Jj3KPBEhPigXA+VwOwlCA30SnFeFITOSpIiGNbDOPRFjzKvBjEFYYVyvjjLCkERcH9i7xJdsCCUqiWUAHr8ebU8TQcMwgiiiMEWNQ+TYL9YAC7T5sYSP/OBwtUHUe4lOGB5Lw2sTHuQB87LNESc2yPS0cvlTtkse6wgGOvh3BgejHtAlw1lj0HgIdhipZG3iZuv2cjl79vVOz+wk8Pv2dlcym5sfNz1m31RXFQprEIIIcTBQYJKCHFgGX75+xRTpVe+btsfpGzw1TGb+GDaRkfS1td7wwr5aVsLAgSCZnNzif1NED6cqwQHCmV9TQRTuLvD/qek9wliA+KCPURJhDgEFBP4EO4QRAn2dZERj+XfgVhBOR4dIIisZczFcleLZXf1IG6Kk+w/YlgGSvWCCEMUOVwxCD46WxBmYW3st6q5MGNIRi2JP6+iZNDLBXFcD9BAAmCSIAh3iT1a6MMa9f4slApWZ3kfaiWEVUxZLQiYUmGcLt1sLu3HRinhAtIS4aQF8VeB2PPSQszVwj759NuWOX/IVt74unUqKft05td2Z+Vs1+/05xLDKuJcLCGEEGI/I0ElhDiQwO2pDvbZ9vEe20r1WOa7fbaa6pDC+YL99rc79v/+8AerBMGAEj7MR4JggTuE+VCdbfRW1SicIFzg/DDAAS5REBYMqkB6XtgGJ4mlehQqud3IcJS/IYq9HcQJSgF99hWCHhAGMU8nh07V4rw7PxRBPk8KIg3HRfkdzwEXCbOywtp8uK/HosOVgriKc67Q08UY9zL6qCBwcGx3qjCPCwONWYKIwb0Uf0gETIIt0L9VyVNkluYmKKB4XvRYBfK5Qe/Xqs4krx6/vhSOhRJFnA8Cs1YdtompT2wye8Ry/e/aB//097ZT7bHy7N2u3+lxwPqnx5/sMYUQQognjQSVEOJA8nCvTf7qmPUeyljvf/pnCqrSJ1U7VThq5eUpK5fnbWGhEkRBmaEUna11295YZo8RRAjCHyB6IDqi84OeKvQFQdisLyOEwfuwGNQABwlR4ZwvVU9SAHMUHjHIgtHi4fPSnG9fCYIKggxrhUjBubB+iKM1BEfQCfPhwhAzvD4Kt/ndEjisIcaeQ2jRiSIuvCDecAzsi+/AjcI5sbbFhQLTC9FbhXPAEWtUPPod7/G5R7/PeAkhYtpxbyDsED7B2V4FXm9jIWcD2Xdsq5O27ftpmx17z9qlj229dLrrN3oSQACDvduFEEKI/YIElRDiwBF7gx5m4JURW+25byvHtu3NWy/buU7Kzm59aMVywRYXG/Yvv73P4bSbQVTEOVEQE9tBWOGVs5ySfiQ4RxAQ6IFabmAIsDtLTNeDsFjzdED0T8EVQn8Teq2igwUhxkG8mOfULPoAYcy8QkgFhREG7k5x4C9KDbFPqTDmJYNBNLE8EAIHZXc1pPKVKZwYg54EUcD14kwtOl4InGjwHLg3gDHn6N8Kx/SgiiZdNRwH+yHtL4pGXGd5zvu1UDboA5Hr3L4WRBpEZDvsWz51xuYHP7P+zGEKKtBa7d/9DZ5W75MnHXb/5kIIIcR+QIJKCHFgwIM1xM7e7Q/z3uTPKaa+deP/8LW3+LGNVz+1WhAS/bdv2uDdPisUcgxu2FpfZokcHBnvScIg3DkGULQxUyqIEDhQLIlL+orgKDGwogFHqJr0OtUYeLHKBL4yo9uRipfPZXhMiKNYRodgCPQ7bULgBKESHTGIJIgg9ktVEKnu/Vp4j6S92A/FuVHhnHBtMG8qOl4QT4v1WQZQsFQQ4RgoFwxiDAN5ca5YIogeLwjKODyYAhJuFcWa93mx5DBsx2BfxMyP/vBVyxz6jnWOn7JM9r1dQbVQzu7ee6z9afY9PS3BJoQQQjwOElRCiAMBy9j+hJgC/fkLQUgdo5g6t3PMTqYP2cXM1+zi2E9ssVGxYrFgGxurdm8LEep573MKwqMyP+39TvU5ChIcKzpNHLobxBzEDwIrIEpQXoc0PzhGED0xpQ9CDe9ZqlZ+EFwRhQ/dMLpZvg+H/ULoJEN/8Vml6HOmfGiwB0FA5CCFEMfHOuAiQWBBZOBznzflDhnWxmjzehLd3vCBvywBrExTMMZ14jp9KDDCMyreU9XwuVXrrYaV+05Zqf+cZV76rnVSJ8l2z8c2l78d7tlQ128SSw73/i5PAg+reHrHF0IIIb4MElRCiAPBo8r8Po+pwm27NPuRfTb2I8sHYXV38XXL309ZabDX5vuu2vb6imUHB6wwO2XNhvdHQfjMF8YpCOjyPDRMl2KJLhKE10QijDwkAvsxPQ/OFnqgIJT4fe+B8hjzeR8kHMQYeqvw9+YqYtt9gDBmQEGkoYfJS9s8AAP9UhA4jGtvJjHuOGfFz4lrhfNVLSIwAmWCJZYfYv/GAsQdxNrcbkx7FE4sYUQ5YRBy7m7NsmQQ2+lQNfJ03yY/+qll3j5knf6UDf/gxy6ojn1sKxcu7N5riLS9PU5PW/TIqRJCCLGfkKASQuxrvkiZ3+cxMP1eEFTHKKome49Z5v3D1hlJ2/jp45afnrDlxWoQTA26PehzWg1ipFp2lwkCiCl8QfRAeGAwMEVOEDKrSPhrr1BUwRHyOVQLtpSESCCiPPZTwbWCaIIgWyijlM+3QRTA3WKPEkXbrJf/IR69CUcpKQ9kKV5pd0YV70cJ6X2JG5XMsEJfWGupyu1cI2ZVUTAhNn2KvVlwsmI4BhwopB3iuhmkEfavlHAtJZvKX7DZuavW/+7Llj3+A5s8/64VL4V7eeqENftvdt3nR/0+WNvebU+SONdr73YhhBDiWSNBJYTYt3zRMr9/i7HZs1ZY+dRGPzpmv/6Hr9mtl3psK5u2E29P2buvT9jMaNVu9163q1fO2eDd6xQh6CVaaiKQYi4Ik5Jtb64aotC9ZC5HlwkiDKIHYgR/I6wiltVBkMXUQByDPVSJiMKa4ERB4KA0D0IL18lYdQRSBKHj86IKSWogBhE3KSCwj6f3ueOE40Yg/JjeFwQUwiZieh+O6SWDLsBiPDvj2JleWKWztrO1xvMMjqbsduawbXTSNpT9wNb7P7Z72U9sbfBM1719mL2/0+MI4S8K+8ie8jmEEEKIP4UElRBi3/LnlPn9KWaun7fO6CAdquNvjtprhzJ2OdWxyz0dBlBsb6/ZehAUsS8JbhDK5TDEdmtzhUIHwgdOFAInGlUM8J2zFsQVHaVJCikIG7z3ZEAIJ49lryXXAhEAAcM+qCSVj/OhKA6mXLRBBLF/yvu3PL1vgmESEGnYBmcKMeh0rxY8CdBFF9IJvdRvBfOw2EMVBF0QbhSDu0OEfTYXZmlNhP2OjVy3E+O9drH3fbvVf9pu3PrY8qVrlr+esqWxy133cy8s/QtrfHgbHLZnIXiexTmEEEKIz0OCSgix74hlbXu3Py7F0Vu2ON5vh18ZcTEVONOzZd9PDds338/a2xdzdvP6FevrvWLp/j67t7lq7fZiEFFVDgXm/Cn0OyW9RxAzKLVDHxPCJCCMSvNwjkoUQ+ij8uAJDMb1eVKYPcX+LPQzLcUerAnvl6Iom6ejxD6kpD/J+6kmKazwHueCqIO7BNECkYX3PE9xmkOK15MEQQ4B5vDePNfPCPXVpovE8oQ1K3l7Nxuut1Mnt1am6U5t7Aza4kq66x7+W9RK3TOjHrXtSeNhFbmn2rclhBBCfB4SVEKIfQUEwtMQUw9z6/JoIqh27PUTOTva37bUUMdS2Y5N3s3b9LmcNcYrVq0W7dbNazYxnrHOvbbt7GwxWAJiBo4QBBccq3oNblCRYgjOFNL/4Exx9lQQV3CB8DmH/DaKdJ8geFCeB4HkAmo6iB4EQswl/VceiuFx6h6ZvrG6wOPBBUPvE0UderCCwNrZWudsrCbL/ApeBsjhw42wfSkIwoZtt1ftXrsVxFTLRq58aJnzhy372RE78pCgSm+VbT7fb3OFga779kWA8NsrbJ5ViISnM47a4NSYXR0f4zqyA9dtbOiWTU98uesRQggh/hQSVEKIfcXs1GDXtqfJkcvjLqYC52+tWuadIJ7SHesMdqw2XrDSWMbKU1n73b/8NgiimtWreVtqVoI4WecsJ4RVICWQgiqJNy/PISwBMet5lqNhFhR6syB84C6h7wo9UhBO2J+DfIP4iiVzcJQYuoDeqmRGFlhfqfN7+Bw9Xjh+7NG6F8RSGcOBl0ocXtwMYhBOVWsJM7UaLA/MnXvTRnq+Z9NXDlNMzZ38L9appK1vus/SO0FM7dRstvr4btKjeqdiFP3TJjU0YYeuZOzNiZq9cWc0iKnbNj582yZH73btK4QQQjwJJKiEEPuCWOZXyg91ffY0KRWG7ZefjlpPdssyF2cppo791Sd8HT/xkWWOBPHx7js2O3DHRocG7e6ta5abGrf1tRXbXFtiOSBjymvTVg3rLxfHKYIQDIEgCLhUGBAMVwouE9wmCCuk+8HlQqoeRJJHoXtcO4SUB1XkWRaIwAv0RMHVwjwrj0IfS3qj4IAt22Z7me7ZRhBOmLcFF211tWkXZjJ2Jpe22VsnLHP0kHWGUvaNv/l7y154l2KqUx6wlbn+rvvyuDxSVD0Dp+qHN4ct1ezssvdzIYQQ4kkjQSWEeO64mPrjQIPnQTk3ZkPvDVFM7fRv2mAQU+UTF62TSdv6QL8dvZC1d85n7Gp60m7fummj2Tt0mdprTc5t8hS9SYoj9A61mnCm8iy7Q/keUvs215fpHCEqnTOf6hiimyTwBRECZ2q5UaCLtdwo0l3yPqhJWwsiDcIMYowu2da61aqzTCH8/e/u287muq1UazZ9btCKN8fszMhte/vSKesLIm7w5gf2ndf/o3144+/sH//3IatkztnG/N0gpp5OKRx+z72lf9g2PfHkxdvD/HpgbFdM9dS3uj4XQgghnjQSVEKI585+EFORcmHY5jNjVs4P29AHRymmQKGv39KVDrlb2rKXR96xQ5mf2w9HDtvduzcsO9lv2dHbQSCVrDA7avnccBBC0xRXFE31Wdtc82G+EEztdQRcVDxooppj6R+E0iqGA1enPdgiiCe4T3CdMPfqN/e3rL2xEli21nI9sBDeL9rx+ev2+vhpu1jotQuHT1v/yetBFC7anU/77O5q2XqbBetvV2389Gu2M5SyzaETXdf9NHiUS7U3CfBpcHJozC5UmlbId38mhBBCPGkkqIQQz42nleb3pChODNhGtt9aw/128uborqA6OttHMfXffvZV+7ue79uvJt639zOH7f3Bw3Ynf90u527ayfHPbKSUtdHhtA0M9NnYyKBVS3mbyY3aXH7cqsUplsDBwUJZH5L3ECKBWVD3d9q2ud5iqeDO9jr7n5qL05av9gcBVbfecq/9tP8N++Hoq/Ze7lxYy1FLdYaspzNst05etfvZZQqqjYGqpTtNkt0od13fs+BRvVMxPGLvdiGEEOIgIkElhHgucDjtM3ArnhT5mVE73Tti6VLbLsz2Ws/9m0HE3LRjgfdmU/aVH/+tjXTSdrl+1Q5nTgQRkwtM2+3cW3Y+c8jOZ79pI9Pn7ci1u/bGufD9/jG71n/Jfn7h5/bW6FtWqOTs15fG7eXTQ/b+jQnrGbli3x36mPTl79i17BEbmjtl17Pv2s9u/8zeyx+z453T9lrhI4qpyPnLVyimwOLotK/9OTo1+J1npvbGryPmvFtoCSGEEAcRCSohxHPhIImpR9Ez/Ykd37phl5f77OORYxRT4JP8BYqpX7zvr59lvmGVTsrm1g5bYbPHDp3PWKrSId8ffNv+84/+q33lylftlVvn7VBP+GwyfDZ5n0Iq1ZkkV0rnbTEcO3Js7K2w/aT9evlte6/9sb27escdqm1PSCwOD1sp173m58ne3/ugCWohhBDi85CgEkI8U/Z7md+XYb6Qtcu5Mza+0m/ThUHr356kmBoIr5eGvkdBBcZXT+yKqVT1vn1n4O0ghFLk9YHbiZhyvjd8kmLq0J2T9knrzgNBtTNgV2fOWureSesJjFZvcQ3FwrNNR/xzeWQ/1T4JIxFCCCEeBwkqIcQzA67EswgleN4wza6Q4ft8/oaVNo9baf0jm8tn7JVrI9YTBNXp4qp9MP3OrqC6UbtkL58eppg6Md5mmV/PvXHr2R6z0dpwOM5tW2j1W6Xkxz2IPFJUhXv1IvxPCCGE+MtFgkoI8cx4UdyIF+U6/1wQo/6oe6N+KiGEEAcZCSohxFMHM5YwS2nvXKK/VB7lxAjn8+7Nsxj6K4QQQjwNJKiEEE+F3PBblun7to3e/ZGNZXvt+uVzdufWla79/tKozo9xqO/e7eIBnyeePm+7EEIIsZ+RoBJCPHHK+duW6T1kndWU/ePP/samsr/o2ucvFYmCL8LoI+8T+6mKY13bhRBCiP2MBJUQ4olTLtwNguolCiqw0fy4a5+/VB4lFEQ3cPIelfao+yeEEOKgIUElhHgqzIy+a51WyraWe6yc9/lILwKf1yMkumHq4yMcqZXF0h/9jd47CLAXpQdPCCHEwUKCSgghnhCeYKeH/j+HzxOgkz97y7LfesXGX/1ny/TfsEsXPrHe6xe69hNCCCGeNxJUQgjxhHhUJLj40+wVVYUzZy1z6IfWSZ2zmZd/bjM9H3V9RwghhNgvSFAJIcQTYq8wEF+MennCmtWZ3b/nLl+gmGr96jhfV65f7/qOEEIIsV+QoBJCiCfCo4fWii/G7ekP7cPsdyw19D3L5i7a0Jtv2/axs9Y+rTI/IYQQ+xsJKiGEeAIgXAHBCXu3iy/GB9lv21AnZa+e/gcb2k51fS6EEELsVySohBDiCSB36vE4NvRdCioiQSWEEOIAIUElhBBPAPVPPR6Z2bM2dC9lw9s9Vijf6fpcCCGE2K9IUAkhxBNAA2mFEEKIFxMJKiGEeEwWSpM2PX63a7sQQggh/vKRoBJCiMcE5X6l/FDXdiGEEEL85SNBJYQQj4nK/YQQQogXFwkqIYR4DBCXXlPCnxBCCPHCIkElhBCPgdL9hBBCiBcbCSohhHgMNH9KCCGEeLGRoBJCiMdAgkoIIYR4sZGgEkKIL0kV/VPF8a7tQgghhHhxkKASQogvCeZP7d0mhBBCiBcLCSohhPiSqNxPCCGEEBJUQgjxJVHCnxBCCCEkqIQQ4kuA3in1TwkhhBBCgkoIIb4E9fJU1zYhhBBCvHhIUAkhxJegrnI/IYQQQsxJUAkhxJ9NrThmjYocKiGEEEJIUAkhxJ8N0v0gqhCbjmCK6vxo1z5CCCGEeDGQoBJCiC/IdGHU3h+6a+9kbtvpiYydO3PCLpw7aTMT6a59hRBCCPFiIEElhBBfEIiodGfD3uwt2UB4nS4Md+0jhBBCiBcLCSohhPiCXMwNUVBdSfeF13Wbl6ASQgghXngkqIQQ4gtSDgLq7GTG0tsrNtGc6/pcCCGEEC8eElRCCCGEEEII8SWRoBJCCCGEEEKIL8n/By9gTbD4rZqBAAAAAElFTkSuQmCC"},
 "errors":[]
}
2024-05-06 12:12:19,124 [DEBUG] py4...: ǀǀReturning 'commands_post': {'filePath': 'C:\\Users\\joaop\\Desktop\\INSA\\Documentos\\Tese_ASD_Gene_Pred\\8_Network\\image.png', 'modifiedTime': '2024-05-06 12:12:19.0090', 'fileByteCount': 40449, 'fileBase64': ''}
2024-05-06 12:12:19,127 [DEBUG] py4...: ǀReturning 'sandbox_get_from': {'filePath': 'C:\\Users\\joaop\\Desktop\\INSA\\Documentos\\Tese_ASD_Gene_Pred\\8_Network\\image.png', 'modifiedTime': '2024-05-06 12:12:19.0090', 'fileByteCount': 40449}
2024-05-06 12:12:19,128 [DEBUG] py4...: Returning 'notebook_export_show_image': <IPython.core.display.Image object>
2024-05-06 12:12:19,128 [DEBUG] py4...: --------------------
2024-05-06 12:12:58,250 [DEBUG] py4...: Calling notebook_export_show_image(zoom=20)
2024-05-06 12:12:58,250 [DEBUG] py4...: ǀCalling export_image(filename='image.png', type='PNG', resolution=None, units=None, height=None, width=None, zoom=20, network=None, base_url='http://127.0.0.1:1234/v1', overwrite_file=True)
2024-05-06 12:12:58,250 [DEBUG] py4...: ǀǀCalling get_network_view_suid(None, base_url='http://127.0.0.1:1234/v1')
2024-05-06 12:12:58,251 [DEBUG] py4...: ǀǀǀCalling get_network_views(None, base_url='http://127.0.0.1:1234/v1')
2024-05-06 12:12:58,251 [DEBUG] py4...: ǀǀǀǀCalling get_network_suid(None, base_url='http://127.0.0.1:1234/v1')
2024-05-06 12:12:58,252 [DEBUG] py4...: ǀǀǀǀǀCalling commands_post('network get attribute network="current" namespace="default" columnList="SUID"', base_url='http://127.0.0.1:1234/v1')
2024-05-06 12:12:58,252 [DEBUG] py4...: ǀǀǀǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/get%20attribute), json: {'network': 'current', 'namespace': 'default', 'columnList': 'SUID'}
2024-05-06 12:12:58,266 [DEBUG] py4...: ǀǀǀǀǀOK[200], content: {
 "data": [ {
  "SUID": 1216901
}
],
 "errors":[]
}
2024-05-06 12:12:58,267 [DEBUG] py4...: ǀǀǀǀǀReturning 'commands_post': [{'SUID': 1216901}]
2024-05-06 12:12:58,268 [DEBUG] py4...: ǀǀǀǀReturning 'get_network_suid': 1216901
2024-05-06 12:12:58,268 [DEBUG] py4...: ǀǀǀǀCalling cyrest_get('networks/1216901/views', base_url='http://127.0.0.1:1234/v1')
2024-05-06 12:12:58,269 [DEBUG] py4...: ǀǀǀǀHTTP GET(http://127.0.0.1:1234/v1/networks/1216901/views)
2024-05-06 12:12:58,277 [DEBUG] py4...: ǀǀǀǀOK[200], content: [1220733]
2024-05-06 12:12:58,277 [DEBUG] py4...: ǀǀǀǀReturning 'cyrest_get': [1220733]
2024-05-06 12:12:58,279 [DEBUG] py4...: ǀǀǀReturning 'get_network_views': [1220733]
2024-05-06 12:12:58,280 [DEBUG] py4...: ǀǀReturning 'get_network_view_suid': 1220733
2024-05-06 12:12:58,280 [DEBUG] py4...: ǀǀCalling cytoscape_version_info(base_url='http://127.0.0.1:1234/v1')
2024-05-06 12:12:58,282 [DEBUG] py4...: ǀǀǀCalling cyrest_get('version', base_url='http://127.0.0.1:1234/v1')
2024-05-06 12:12:58,282 [DEBUG] py4...: ǀǀǀHTTP GET(http://127.0.0.1:1234/v1/version)
2024-05-06 12:12:58,296 [DEBUG] py4...: ǀǀǀOK[200], content: {"apiVersion":"v1","cytoscapeVersion":"3.10.2"}
2024-05-06 12:12:58,296 [DEBUG] py4...: ǀǀǀReturning 'cyrest_get': {'apiVersion': 'v1', 'cytoscapeVersion': '3.10.2'}
2024-05-06 12:12:58,297 [DEBUG] py4...: ǀǀReturning 'cytoscape_version_info': {'apiVersion': 'v1', 'cytoscapeVersion': '3.10.2', 'automationAPIVersion': '1.9.0', 'py4cytoscapeVersion': '1.9.0'}
2024-05-06 12:12:58,297 [DEBUG] py4...: ǀǀCalling sandbox_get_file_info('image.png', base_url='http://127.0.0.1:1234/v1')
2024-05-06 12:12:58,297 [DEBUG] py4...: ǀǀǀCalling commands_post('filetransfer getFileInfo fileName="c:\\Users\\joaop\\Desktop\\INSA\\Documentos\\Tese_ASD_Gene_Pred\\8_Network\\image.png"', base_url='http://127.0.0.1:1234/v1')
2024-05-06 12:12:58,298 [DEBUG] py4...: ǀǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/filetransfer/getFileInfo), json: {'fileName': 'c:\\Users\\joaop\\Desktop\\INSA\\Documentos\\Tese_ASD_Gene_Pred\\8_Network\\image.png'}
2024-05-06 12:12:58,321 [DEBUG] py4...: ǀǀǀOK[200], content: {
 "data": {"filePath":"C:\\Users\\joaop\\Desktop\\INSA\\Documentos\\Tese_ASD_Gene_Pred\\8_Network\\image.png","modifiedTime":"2024-05-06 12:12:19.0126","isFile":true},
 "errors":[]
}
2024-05-06 12:12:58,321 [DEBUG] py4...: ǀǀǀReturning 'commands_post': {'filePath': 'C:\\Users\\joaop\\Desktop\\INSA\\Documentos\\Tese_ASD_Gene_Pred\\8_Network\\image.png', 'modifiedTime': '2024-05-06 12:12:19.0126', 'isFile': True}
2024-05-06 12:12:58,321 [DEBUG] py4...: ǀǀReturning 'sandbox_get_file_info': {'filePath': 'C:\\Users\\joaop\\Desktop\\INSA\\Documentos\\Tese_ASD_Gene_Pred\\8_Network\\image.png', 'modifiedTime': '2024-05-06 12:12:19.0126', 'isFile': True}
2024-05-06 12:12:58,321 [DEBUG] py4...: ǀǀCalling sandbox_remove_file('image.png', base_url='http://127.0.0.1:1234/v1')
2024-05-06 12:12:58,321 [DEBUG] py4...: ǀǀǀCalling commands_post('filetransfer removeFile fileName="c:\\Users\\joaop\\Desktop\\INSA\\Documentos\\Tese_ASD_Gene_Pred\\8_Network\\image.png"', base_url='http://127.0.0.1:1234/v1')
2024-05-06 12:12:58,321 [DEBUG] py4...: ǀǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/filetransfer/removeFile), json: {'fileName': 'c:\\Users\\joaop\\Desktop\\INSA\\Documentos\\Tese_ASD_Gene_Pred\\8_Network\\image.png'}
2024-05-06 12:12:58,343 [DEBUG] py4...: ǀǀǀOK[200], content: {
 "data": {"filePath":"C:\\Users\\joaop\\Desktop\\INSA\\Documentos\\Tese_ASD_Gene_Pred\\8_Network\\image.png","existed":true},
 "errors":[]
}
2024-05-06 12:12:58,343 [DEBUG] py4...: ǀǀǀReturning 'commands_post': {'filePath': 'C:\\Users\\joaop\\Desktop\\INSA\\Documentos\\Tese_ASD_Gene_Pred\\8_Network\\image.png', 'existed': True}
2024-05-06 12:12:58,343 [DEBUG] py4...: ǀǀReturning 'sandbox_remove_file': {'filePath': 'C:\\Users\\joaop\\Desktop\\INSA\\Documentos\\Tese_ASD_Gene_Pred\\8_Network\\image.png', 'existed': True}
2024-05-06 12:12:58,343 [DEBUG] py4...: ǀǀCalling commands_post('view export png Zoom="20" outputFile="C:\\Users\\joaop\\Desktop\\INSA\\Documentos\\Tese_ASD_Gene_Pred\\8_Network\\image.png" view="SUID:1220733"', base_url='http://127.0.0.1:1234/v1')
2024-05-06 12:12:58,343 [DEBUG] py4...: ǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/view/export%20png), json: {'Zoom': '20', 'outputFile': 'C:\\Users\\joaop\\Desktop\\INSA\\Documentos\\Tese_ASD_Gene_Pred\\8_Network\\image.png', 'view': 'SUID:1220733'}
2024-05-06 12:12:58,492 [DEBUG] py4...: ǀǀOK[200], content: {
 "data": {"file":"C:\\Users\\joaop\\Desktop\\INSA\\Documentos\\Tese_ASD_Gene_Pred\\8_Network\\image.png"},
 "errors":[]
}
2024-05-06 12:12:58,492 [DEBUG] py4...: ǀǀReturning 'commands_post': {'file': 'C:\\Users\\joaop\\Desktop\\INSA\\Documentos\\Tese_ASD_Gene_Pred\\8_Network\\image.png'}
2024-05-06 12:12:58,492 [DEBUG] py4...: ǀReturning 'export_image': {'file': 'C:\\Users\\joaop\\Desktop\\INSA\\Documentos\\Tese_ASD_Gene_Pred\\8_Network\\image.png'}
2024-05-06 12:12:58,492 [DEBUG] py4...: ǀCalling sandbox_get_from('image.png', overwrite=True, sandbox_name=None, base_url='http://127.0.0.1:1234/v1')
2024-05-06 12:12:58,492 [DEBUG] py4...: ǀǀCalling commands_post('filetransfer fromSandbox fileName="c:\\Users\\joaop\\Desktop\\INSA\\Documentos\\Tese_ASD_Gene_Pred\\8_Network\\image.png"', base_url='http://127.0.0.1:1234/v1')
2024-05-06 12:12:58,492 [DEBUG] py4...: ǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/filetransfer/fromSandbox), json: {'fileName': 'c:\\Users\\joaop\\Desktop\\INSA\\Documentos\\Tese_ASD_Gene_Pred\\8_Network\\image.png'}
2024-05-06 12:12:58,504 [DEBUG] py4...: ǀǀOK[200], content: {
 "data": {"filePath":"C:\\Users\\joaop\\Desktop\\INSA\\Documentos\\Tese_ASD_Gene_Pred\\8_Network\\image.png","modifiedTime":"2024-05-06 12:12:58.0492","fileByteCount":2623,"fileBase64":"iVBORw0KGgoAAAANSUhEUgAAAKoAAAAuCAYAAAC4V4JMAAAKBklEQVR4Xu2dy2/b2BXG54/tthigi266LdBFH0CB6WA6aTEzSdomnSSO47ctyw/ZlkW9LJKiJEqixPdD1MNO0u3Xc648RcaadtpaAmLpLj5IFimRi1++c75zL5FPOg0FUotTQ1fwdLsEbW8TjfI5tN09PFafwigVoO8XoH11hIZyCSN7Cf3rHMr6IQr6AS63SjDKL2FUXmOf3h+/KqKYLeLNNyVkj8uo0PfVw3Wo2W3UKzns0Wd3r71M+uTuB1LzV6FYRItgMuuXsNQiCkYWJgFsaVWY5xdoawX0tDK9z6Np5NE28zDoO239BFbjAiq915QiTK2EynkR6lUJbaMEs3KMVjWHjlFAvV6bue4ySYIq9SAkQZV6EJKgSj0ISVClHoQkqFIPQhJUqQchCarUg5AEVepBSIJ6K7Wu4GhTwZePqjh7fIytL2v4zae/xlHlCbLr5yhubEPTz+jc4sx3pRavlQd1UyXtHeDk5AoFu4fICnE9HmCchBgPfAzCPvrtDqrlc2yaGez+rgrltYKGmp/5LanFaWVBzaklrK0pyO7tIg66GA9DTNIAw8RFGrt4O0mQhD2MUw/DgYfQNXE9iuAYNjmujrO/ltAoKjDrhZnflpq/VhJUtbCFPxSOoXV0dJtFeE5LwJmQe44GLkKvjckoROR1COIehrGDQdSnc/r0WRderwmnaOJgK4/TszJaunTXRWvlQC2vnWHrrACrVUXPrFJZv0JAQPp2ExE5a+RbVO5t+J6J0TBAGtlICNYBuWsSuYgJWNfSEfsdAtpC/mUZ+sExOevstaTmp5UCVV3P49nFBiyzQpBWCNYSnD5BF3aFq7p9A16/JUBlCNPYJ4e9dVZSQiD7dF5C8IrXgByYztF2PodW2ENTu5i5ptR8tDKgtgoZVF+codeoCUhZXQK136kJxwzdDjy7RaDq8N22AHHCjko96zDxCFqHWgCPjjfg2g0B7zX1sZNxjCGdt5NbR60qJwKL0sqAevRtHi4l9167Sk5KoHa49Feo9KtIQ0eU/ZDKud83yU1N0ZsGBOuQ3DOmdmDap7q3UJsYkJsm5MTX40gEsbKhYyv/N7QNGa4WoZUAtblzAPXvGYJThU0O6vbr5J6GgNZ3GqLch35bgBnYpjjGbYBjaXB7ughY3A4MExsjngKQw0aBJYJVEvXwdjLAu5sU2vFz6OXDmetL3V8rAerW/mdw1Rr1owb63SvY3TpBSIm/VabetEkO2qFAZYogxeA6XY3OUSk00SudNwgtEap4EjBOA3JVhtYTU4Jh6uKGQJ2QszYbNpTSupgk3L0Hqftp6UFtGgqyG6fkkA0RmBjUwOF+tAmnZ5ArUsqnPjRyp6U/oLLuk6uKtqBD57pNMWcdJNSjEqQ8V+WAlSY8X3XJYQMMBgG1ADFuSK9qW6jXeAVr9l6k/n8tPajG1SFqtQxBWRchSTiow+WdQhG9Rq4les/Q65OjdkQ5Z3gZ7MiflvY0cqgPpeA0jPFukoqe9IaCFC8AcAvA51yPUxGuqsoOlAuZ/uetpQf15KiGC6VAJXxaygOCk987FoFLKX9AEHLvyZ/7DvWpbovgnc5I2XXdXkOsVnF4uhkntytYHoHK0A5xM4zou13RFtwQrNqbKirP9mfuQ+p+WnpQd76qwqzVKThxwq/CJfhsDkkUmDyCMyCXjcMeQdoUZT8khwx5PEX9LAcpDlX8dxpPg5ToS6nsjwjeMTnsOA0xpGMpha33798jjNqoVtdm7kPqflp6UNfOr2CaHJymM1O7q4sgxa1AQA7KwSjxeRQ17U15nupS7xoGfKxPwBLAPpd3W/SyY+pHGdiYgI3p+Pu3lPhJPKb6x7sbOGkXO7UNOaaas5Ye1NfqLnoEJY+l+l1K/uSSUyftkDtaYuNJTKAmPkNqwrF18RkvqXLp53lqQm7Ja/088BduSiEqDnm2yunfoV41Fsn/ZjyAFYV4fFaUoM5ZSw9qJpOBfjUdN9mU+F3LECVerOlHXLItAS1vROH5aeTxPLUjeliPAPeo9PMMNSU4J0OGkUOVLxyVf4d7WF73n1Cw4oB16eg4tnMz9yF1Py09qI3NP8Mu7QhH7XWuRFn3GUix+YRHU45oAXhZNA54bEXHeZmURe4rdlINPAIxoJ50WvaFCwcMKgNOzkxuy33u9WgIbX8Xl6c7M/chdT8tPai10imerFXRMa/EXNTrc9pvEqD2dDeUKOs9ckxPJH6Xe1eepVK44nV93tr39jrFkHrT2OOgRW4sdlM5BGmXelluDVwxX52MQ2zvFWFopZn7kLqflh5U1s9++6kAlJdMuZTzvJT7zoRgmwxDDGJXOCqD7NN5HKh4OTXm1oAC1CjmvQDsorxsyt9lUC2xQMDA8tyVB/+8QeV1aR9NTe5PnbdWAtTM83McHJpU/jXhppzw09ATA/sxlXTej9rvqGLnFC8I8Agq9LsEnyucNySoeYzl223R1/K2QN5NxbNTLvvpwKGA5aPefgnNkjPURWglQNVqJXz9pIxusyKG/DxiYsDGDCI5Iqd/Xl4NHZ6XMqS895TX9x0BaOT3BJj8FAAvEKSRJwLVMJ06Mo+xeAfWL7/5C6V9uSq1CK0EqKzixS426nkBmZiDUrkej2Iq7YFwycBpCGC57McBl3wG0hHAclnn56a+2+kf++yoPEvlVsAS554qTbQVa+a6UvPRyoDKypW+gKFcTTeWcPih0s3gcq/KK08cpLhffTuJKeH7Yg/AaBCJGWpCcAYu7wPo3j6Wwj2uJ9w5753iqPp7+aDfArVSoLaqJehPyPVKCm4mqdhIMhnzjqjpg33soDwPZfcMPGoFvJ5wUd49lUZc9qdPpPLaP5d83jGlhgq2X+WgGifi0Rb53P9itFKgChWPYf9xA5VuEe/eXYtn98epL1aZeBl0lHjTAT85Jq/nCzfl5dOQn0BtE6i+eMCPoe52z/HZT38C3Tz51+/zUq3cjzp/rRSo30HUauax6TyCmt2hcMVQupTcbQEh96lc2ocxb/2bPpHKfSu3BoOY+1SevzrQc0+hPf4TeqZy66QfXKfJ15Gz1HlqZUCdwvN9p8u+OsfnL1TU98qIHApXaYyE0z3ByYEquF3rZ0B5LT+hct/MvcJa5RDtzunt7xYJ1LL4R/D96xXxplSGUpFTgHloJUD9IUg/VP3gECdHefz8F7/Chr6HvP4C241L7NYaODWz+NZ4hkfKOo6OTuGWt2a+P4V19hq5WgnNhnTWeWipQe028uJ/FrkL0L+TaVyiXD/Hmfoaz+tZPDvLI9c5RrXx4w/sMagyTC1OSw2qqe0jsNZnPv9Puk9vyS1Aa3cH9Vxm5pjU/bTUoP6vYuf9b933h1QzMjje/gK9yvnMMan7SYL6ge4GIqmPRxLUDyRB/XglQf1Ad+ehUh+PJKi3ymgFVOVa/UerfwLGULqPQ9LrZQAAAABJRU5ErkJggg\u003d\u003d"},
 "errors":[]
}
2024-05-06 12:12:58,504 [DEBUG] py4...: ǀǀReturning 'commands_post': {'filePath': 'C:\\Users\\joaop\\Desktop\\INSA\\Documentos\\Tese_ASD_Gene_Pred\\8_Network\\image.png', 'modifiedTime': '2024-05-06 12:12:58.0492', 'fileByteCount': 2623, 'fileBase64': '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'}
2024-05-06 12:12:58,504 [DEBUG] py4...: ǀReturning 'sandbox_get_from': {'filePath': 'C:\\Users\\joaop\\Desktop\\INSA\\Documentos\\Tese_ASD_Gene_Pred\\8_Network\\image.png', 'modifiedTime': '2024-05-06 12:12:58.0492', 'fileByteCount': 2623}
2024-05-06 12:12:58,504 [DEBUG] py4...: Returning 'notebook_export_show_image': <IPython.core.display.Image object>
2024-05-06 12:12:58,504 [DEBUG] py4...: --------------------
2024-05-06 12:13:02,533 [DEBUG] py4...: Calling notebook_export_show_image(zoom=2000)
2024-05-06 12:13:02,533 [DEBUG] py4...: ǀCalling export_image(filename='image.png', type='PNG', resolution=None, units=None, height=None, width=None, zoom=2000, network=None, base_url='http://127.0.0.1:1234/v1', overwrite_file=True)
2024-05-06 12:13:02,533 [DEBUG] py4...: ǀǀCalling get_network_view_suid(None, base_url='http://127.0.0.1:1234/v1')
2024-05-06 12:13:02,534 [DEBUG] py4...: ǀǀǀCalling get_network_views(None, base_url='http://127.0.0.1:1234/v1')
2024-05-06 12:13:02,534 [DEBUG] py4...: ǀǀǀǀCalling get_network_suid(None, base_url='http://127.0.0.1:1234/v1')
2024-05-06 12:13:02,534 [DEBUG] py4...: ǀǀǀǀǀCalling commands_post('network get attribute network="current" namespace="default" columnList="SUID"', base_url='http://127.0.0.1:1234/v1')
2024-05-06 12:13:02,534 [DEBUG] py4...: ǀǀǀǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/get%20attribute), json: {'network': 'current', 'namespace': 'default', 'columnList': 'SUID'}
2024-05-06 12:13:02,549 [DEBUG] py4...: ǀǀǀǀǀOK[200], content: {
 "data": [ {
  "SUID": 1216901
}
],
 "errors":[]
}
2024-05-06 12:13:02,550 [DEBUG] py4...: ǀǀǀǀǀReturning 'commands_post': [{'SUID': 1216901}]
2024-05-06 12:13:02,550 [DEBUG] py4...: ǀǀǀǀReturning 'get_network_suid': 1216901
2024-05-06 12:13:02,550 [DEBUG] py4...: ǀǀǀǀCalling cyrest_get('networks/1216901/views', base_url='http://127.0.0.1:1234/v1')
2024-05-06 12:13:02,551 [DEBUG] py4...: ǀǀǀǀHTTP GET(http://127.0.0.1:1234/v1/networks/1216901/views)
2024-05-06 12:13:02,559 [DEBUG] py4...: ǀǀǀǀOK[200], content: [1220733]
2024-05-06 12:13:02,560 [DEBUG] py4...: ǀǀǀǀReturning 'cyrest_get': [1220733]
2024-05-06 12:13:02,561 [DEBUG] py4...: ǀǀǀReturning 'get_network_views': [1220733]
2024-05-06 12:13:02,561 [DEBUG] py4...: ǀǀReturning 'get_network_view_suid': 1220733
2024-05-06 12:13:02,562 [DEBUG] py4...: ǀǀCalling cytoscape_version_info(base_url='http://127.0.0.1:1234/v1')
2024-05-06 12:13:02,562 [DEBUG] py4...: ǀǀǀCalling cyrest_get('version', base_url='http://127.0.0.1:1234/v1')
2024-05-06 12:13:02,562 [DEBUG] py4...: ǀǀǀHTTP GET(http://127.0.0.1:1234/v1/version)
2024-05-06 12:13:02,568 [DEBUG] py4...: ǀǀǀOK[200], content: {"apiVersion":"v1","cytoscapeVersion":"3.10.2"}
2024-05-06 12:13:02,568 [DEBUG] py4...: ǀǀǀReturning 'cyrest_get': {'apiVersion': 'v1', 'cytoscapeVersion': '3.10.2'}
2024-05-06 12:13:02,568 [DEBUG] py4...: ǀǀReturning 'cytoscape_version_info': {'apiVersion': 'v1', 'cytoscapeVersion': '3.10.2', 'automationAPIVersion': '1.9.0', 'py4cytoscapeVersion': '1.9.0'}
2024-05-06 12:13:02,572 [DEBUG] py4...: ǀǀCalling sandbox_get_file_info('image.png', base_url='http://127.0.0.1:1234/v1')
2024-05-06 12:13:02,572 [DEBUG] py4...: ǀǀǀCalling commands_post('filetransfer getFileInfo fileName="c:\\Users\\joaop\\Desktop\\INSA\\Documentos\\Tese_ASD_Gene_Pred\\8_Network\\image.png"', base_url='http://127.0.0.1:1234/v1')
2024-05-06 12:13:02,572 [DEBUG] py4...: ǀǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/filetransfer/getFileInfo), json: {'fileName': 'c:\\Users\\joaop\\Desktop\\INSA\\Documentos\\Tese_ASD_Gene_Pred\\8_Network\\image.png'}
2024-05-06 12:13:02,582 [DEBUG] py4...: ǀǀǀOK[200], content: {
 "data": {"filePath":"C:\\Users\\joaop\\Desktop\\INSA\\Documentos\\Tese_ASD_Gene_Pred\\8_Network\\image.png","modifiedTime":"2024-05-06 12:12:58.0504","isFile":true},
 "errors":[]
}
2024-05-06 12:13:02,583 [DEBUG] py4...: ǀǀǀReturning 'commands_post': {'filePath': 'C:\\Users\\joaop\\Desktop\\INSA\\Documentos\\Tese_ASD_Gene_Pred\\8_Network\\image.png', 'modifiedTime': '2024-05-06 12:12:58.0504', 'isFile': True}
2024-05-06 12:13:02,583 [DEBUG] py4...: ǀǀReturning 'sandbox_get_file_info': {'filePath': 'C:\\Users\\joaop\\Desktop\\INSA\\Documentos\\Tese_ASD_Gene_Pred\\8_Network\\image.png', 'modifiedTime': '2024-05-06 12:12:58.0504', 'isFile': True}
2024-05-06 12:13:02,584 [DEBUG] py4...: ǀǀCalling sandbox_remove_file('image.png', base_url='http://127.0.0.1:1234/v1')
2024-05-06 12:13:02,584 [DEBUG] py4...: ǀǀǀCalling commands_post('filetransfer removeFile fileName="c:\\Users\\joaop\\Desktop\\INSA\\Documentos\\Tese_ASD_Gene_Pred\\8_Network\\image.png"', base_url='http://127.0.0.1:1234/v1')
2024-05-06 12:13:02,584 [DEBUG] py4...: ǀǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/filetransfer/removeFile), json: {'fileName': 'c:\\Users\\joaop\\Desktop\\INSA\\Documentos\\Tese_ASD_Gene_Pred\\8_Network\\image.png'}
2024-05-06 12:13:02,595 [DEBUG] py4...: ǀǀǀOK[200], content: {
 "data": {"filePath":"C:\\Users\\joaop\\Desktop\\INSA\\Documentos\\Tese_ASD_Gene_Pred\\8_Network\\image.png","existed":true},
 "errors":[]
}
2024-05-06 12:13:02,596 [DEBUG] py4...: ǀǀǀReturning 'commands_post': {'filePath': 'C:\\Users\\joaop\\Desktop\\INSA\\Documentos\\Tese_ASD_Gene_Pred\\8_Network\\image.png', 'existed': True}
2024-05-06 12:13:02,596 [DEBUG] py4...: ǀǀReturning 'sandbox_remove_file': {'filePath': 'C:\\Users\\joaop\\Desktop\\INSA\\Documentos\\Tese_ASD_Gene_Pred\\8_Network\\image.png', 'existed': True}
2024-05-06 12:13:02,597 [DEBUG] py4...: ǀǀCalling commands_post('view export png Zoom="2000" outputFile="C:\\Users\\joaop\\Desktop\\INSA\\Documentos\\Tese_ASD_Gene_Pred\\8_Network\\image.png" view="SUID:1220733"', base_url='http://127.0.0.1:1234/v1')
2024-05-06 12:13:02,598 [DEBUG] py4...: ǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/view/export%20png), json: {'Zoom': '2000', 'outputFile': 'C:\\Users\\joaop\\Desktop\\INSA\\Documentos\\Tese_ASD_Gene_Pred\\8_Network\\image.png', 'view': 'SUID:1220733'}
2024-05-06 12:13:02,628 [DEBUG] py4...: ǀǀInternal Server Error[500], content: {
 "data": {"file":"C:\\Users\\joaop\\Desktop\\INSA\\Documentos\\Tese_ASD_Gene_Pred\\8_Network\\image.png"},
 "errors":[{"status":500,"type":"urn:cytoscape:ci:cyrest-core:v1:handle-json-command:errors:2","message":"Error processing arguments: Couldn\u0027t parse value from: 2000 for setting: Zoom","link":"file:/C:/Users/joaop/CytoscapeConfiguration/3/framework-cytoscape.log"}]
}
2024-05-06 12:13:02,628 [DEBUG] py4...: ǀǀ'commands_post' exception CyError("In commands_post(): Error processing arguments: Couldn't parse value from: 2000 for setting: Zoom")
2024-05-06 12:13:02,628 [DEBUG] py4...: ǀ'export_image' exception CyError("In commands_post(): Error processing arguments: Couldn't parse value from: 2000 for setting: Zoom")
2024-05-06 12:13:02,628 [DEBUG] py4...: 'notebook_export_show_image' exception CyError("In commands_post(): Error processing arguments: Couldn't parse value from: 2000 for setting: Zoom")
2024-05-06 12:13:02,628 [DEBUG] py4...: --------------------
2024-05-06 12:13:08,977 [DEBUG] py4...: Calling notebook_export_show_image(zoom=200)
2024-05-06 12:13:08,978 [DEBUG] py4...: ǀCalling export_image(filename='image.png', type='PNG', resolution=None, units=None, height=None, width=None, zoom=200, network=None, base_url='http://127.0.0.1:1234/v1', overwrite_file=True)
2024-05-06 12:13:08,978 [DEBUG] py4...: ǀǀCalling get_network_view_suid(None, base_url='http://127.0.0.1:1234/v1')
2024-05-06 12:13:08,979 [DEBUG] py4...: ǀǀǀCalling get_network_views(None, base_url='http://127.0.0.1:1234/v1')
2024-05-06 12:13:08,979 [DEBUG] py4...: ǀǀǀǀCalling get_network_suid(None, base_url='http://127.0.0.1:1234/v1')
2024-05-06 12:13:08,979 [DEBUG] py4...: ǀǀǀǀǀCalling commands_post('network get attribute network="current" namespace="default" columnList="SUID"', base_url='http://127.0.0.1:1234/v1')
2024-05-06 12:13:08,980 [DEBUG] py4...: ǀǀǀǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/get%20attribute), json: {'network': 'current', 'namespace': 'default', 'columnList': 'SUID'}
2024-05-06 12:13:08,993 [DEBUG] py4...: ǀǀǀǀǀOK[200], content: {
 "data": [ {
  "SUID": 1216901
}
],
 "errors":[]
}
2024-05-06 12:13:08,994 [DEBUG] py4...: ǀǀǀǀǀReturning 'commands_post': [{'SUID': 1216901}]
2024-05-06 12:13:08,994 [DEBUG] py4...: ǀǀǀǀReturning 'get_network_suid': 1216901
2024-05-06 12:13:08,994 [DEBUG] py4...: ǀǀǀǀCalling cyrest_get('networks/1216901/views', base_url='http://127.0.0.1:1234/v1')
2024-05-06 12:13:08,995 [DEBUG] py4...: ǀǀǀǀHTTP GET(http://127.0.0.1:1234/v1/networks/1216901/views)
2024-05-06 12:13:09,004 [DEBUG] py4...: ǀǀǀǀOK[200], content: [1220733]
2024-05-06 12:13:09,005 [DEBUG] py4...: ǀǀǀǀReturning 'cyrest_get': [1220733]
2024-05-06 12:13:09,005 [DEBUG] py4...: ǀǀǀReturning 'get_network_views': [1220733]
2024-05-06 12:13:09,006 [DEBUG] py4...: ǀǀReturning 'get_network_view_suid': 1220733
2024-05-06 12:13:09,006 [DEBUG] py4...: ǀǀCalling cytoscape_version_info(base_url='http://127.0.0.1:1234/v1')
2024-05-06 12:13:09,006 [DEBUG] py4...: ǀǀǀCalling cyrest_get('version', base_url='http://127.0.0.1:1234/v1')
2024-05-06 12:13:09,007 [DEBUG] py4...: ǀǀǀHTTP GET(http://127.0.0.1:1234/v1/version)
2024-05-06 12:13:09,008 [DEBUG] py4...: ǀǀǀOK[200], content: {"apiVersion":"v1","cytoscapeVersion":"3.10.2"}
2024-05-06 12:13:09,008 [DEBUG] py4...: ǀǀǀReturning 'cyrest_get': {'apiVersion': 'v1', 'cytoscapeVersion': '3.10.2'}
2024-05-06 12:13:09,008 [DEBUG] py4...: ǀǀReturning 'cytoscape_version_info': {'apiVersion': 'v1', 'cytoscapeVersion': '3.10.2', 'automationAPIVersion': '1.9.0', 'py4cytoscapeVersion': '1.9.0'}
2024-05-06 12:13:09,008 [DEBUG] py4...: ǀǀCalling sandbox_get_file_info('image.png', base_url='http://127.0.0.1:1234/v1')
2024-05-06 12:13:09,008 [DEBUG] py4...: ǀǀǀCalling commands_post('filetransfer getFileInfo fileName="c:\\Users\\joaop\\Desktop\\INSA\\Documentos\\Tese_ASD_Gene_Pred\\8_Network\\image.png"', base_url='http://127.0.0.1:1234/v1')
2024-05-06 12:13:09,008 [DEBUG] py4...: ǀǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/filetransfer/getFileInfo), json: {'fileName': 'c:\\Users\\joaop\\Desktop\\INSA\\Documentos\\Tese_ASD_Gene_Pred\\8_Network\\image.png'}
2024-05-06 12:13:09,029 [DEBUG] py4...: ǀǀǀOK[200], content: {
 "data": {"filePath":"C:\\Users\\joaop\\Desktop\\INSA\\Documentos\\Tese_ASD_Gene_Pred\\8_Network\\image.png","modifiedTime":"2024-05-06 12:13:02.0598","isFile":true},
 "errors":[]
}
2024-05-06 12:13:09,030 [DEBUG] py4...: ǀǀǀReturning 'commands_post': {'filePath': 'C:\\Users\\joaop\\Desktop\\INSA\\Documentos\\Tese_ASD_Gene_Pred\\8_Network\\image.png', 'modifiedTime': '2024-05-06 12:13:02.0598', 'isFile': True}
2024-05-06 12:13:09,030 [DEBUG] py4...: ǀǀReturning 'sandbox_get_file_info': {'filePath': 'C:\\Users\\joaop\\Desktop\\INSA\\Documentos\\Tese_ASD_Gene_Pred\\8_Network\\image.png', 'modifiedTime': '2024-05-06 12:13:02.0598', 'isFile': True}
2024-05-06 12:13:09,031 [DEBUG] py4...: ǀǀCalling sandbox_remove_file('image.png', base_url='http://127.0.0.1:1234/v1')
2024-05-06 12:13:09,031 [DEBUG] py4...: ǀǀǀCalling commands_post('filetransfer removeFile fileName="c:\\Users\\joaop\\Desktop\\INSA\\Documentos\\Tese_ASD_Gene_Pred\\8_Network\\image.png"', base_url='http://127.0.0.1:1234/v1')
2024-05-06 12:13:09,031 [DEBUG] py4...: ǀǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/filetransfer/removeFile), json: {'fileName': 'c:\\Users\\joaop\\Desktop\\INSA\\Documentos\\Tese_ASD_Gene_Pred\\8_Network\\image.png'}
2024-05-06 12:13:09,045 [DEBUG] py4...: ǀǀǀInternal Server Error[500], content: {
 "data": {},
 "errors":[{"status":500,"type":"urn:cytoscape:ci:cyrest-core:v1:handle-json-command:errors:2","message":"Unable to delete file: c:\\Users\\joaop\\Desktop\\INSA\\Documentos\\Tese_ASD_Gene_Pred\\8_Network\\image.png","link":"file:/C:/Users/joaop/CytoscapeConfiguration/3/framework-cytoscape.log"}]
}
2024-05-06 12:13:09,047 [DEBUG] py4...: ǀǀǀ'commands_post' exception CyError('In commands_post(): Unable to delete file: c:\\Users\\joaop\\Desktop\\INSA\\Documentos\\Tese_ASD_Gene_Pred\\8_Network\\image.png')
2024-05-06 12:13:09,048 [DEBUG] py4...: ǀǀ'sandbox_remove_file' exception CyError('In commands_post(): Unable to delete file: c:\\Users\\joaop\\Desktop\\INSA\\Documentos\\Tese_ASD_Gene_Pred\\8_Network\\image.png')
2024-05-06 12:13:09,048 [DEBUG] py4...: ǀ'export_image' exception CyError('In commands_post(): Unable to delete file: c:\\Users\\joaop\\Desktop\\INSA\\Documentos\\Tese_ASD_Gene_Pred\\8_Network\\image.png')
2024-05-06 12:13:09,050 [DEBUG] py4...: 'notebook_export_show_image' exception CyError('In commands_post(): Unable to delete file: c:\\Users\\joaop\\Desktop\\INSA\\Documentos\\Tese_ASD_Gene_Pred\\8_Network\\image.png')
2024-05-06 12:13:09,050 [DEBUG] py4...: --------------------
2024-05-06 12:13:14,518 [DEBUG] py4...: Calling notebook_export_show_image(zoom=100)
2024-05-06 12:13:14,519 [DEBUG] py4...: ǀCalling export_image(filename='image.png', type='PNG', resolution=None, units=None, height=None, width=None, zoom=100, network=None, base_url='http://127.0.0.1:1234/v1', overwrite_file=True)
2024-05-06 12:13:14,519 [DEBUG] py4...: ǀǀCalling get_network_view_suid(None, base_url='http://127.0.0.1:1234/v1')
2024-05-06 12:13:14,520 [DEBUG] py4...: ǀǀǀCalling get_network_views(None, base_url='http://127.0.0.1:1234/v1')
2024-05-06 12:13:14,520 [DEBUG] py4...: ǀǀǀǀCalling get_network_suid(None, base_url='http://127.0.0.1:1234/v1')
2024-05-06 12:13:14,520 [DEBUG] py4...: ǀǀǀǀǀCalling commands_post('network get attribute network="current" namespace="default" columnList="SUID"', base_url='http://127.0.0.1:1234/v1')
2024-05-06 12:13:14,520 [DEBUG] py4...: ǀǀǀǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/get%20attribute), json: {'network': 'current', 'namespace': 'default', 'columnList': 'SUID'}
2024-05-06 12:13:14,531 [DEBUG] py4...: ǀǀǀǀǀOK[200], content: {
 "data": [ {
  "SUID": 1216901
}
],
 "errors":[]
}
2024-05-06 12:13:14,532 [DEBUG] py4...: ǀǀǀǀǀReturning 'commands_post': [{'SUID': 1216901}]
2024-05-06 12:13:14,532 [DEBUG] py4...: ǀǀǀǀReturning 'get_network_suid': 1216901
2024-05-06 12:13:14,533 [DEBUG] py4...: ǀǀǀǀCalling cyrest_get('networks/1216901/views', base_url='http://127.0.0.1:1234/v1')
2024-05-06 12:13:14,533 [DEBUG] py4...: ǀǀǀǀHTTP GET(http://127.0.0.1:1234/v1/networks/1216901/views)
2024-05-06 12:13:14,536 [DEBUG] py4...: ǀǀǀǀOK[200], content: [1220733]
2024-05-06 12:13:14,543 [DEBUG] py4...: ǀǀǀǀReturning 'cyrest_get': [1220733]
2024-05-06 12:13:14,543 [DEBUG] py4...: ǀǀǀReturning 'get_network_views': [1220733]
2024-05-06 12:13:14,544 [DEBUG] py4...: ǀǀReturning 'get_network_view_suid': 1220733
2024-05-06 12:13:14,545 [DEBUG] py4...: ǀǀCalling cytoscape_version_info(base_url='http://127.0.0.1:1234/v1')
2024-05-06 12:13:14,546 [DEBUG] py4...: ǀǀǀCalling cyrest_get('version', base_url='http://127.0.0.1:1234/v1')
2024-05-06 12:13:14,546 [DEBUG] py4...: ǀǀǀHTTP GET(http://127.0.0.1:1234/v1/version)
2024-05-06 12:13:14,554 [DEBUG] py4...: ǀǀǀOK[200], content: {"apiVersion":"v1","cytoscapeVersion":"3.10.2"}
2024-05-06 12:13:14,554 [DEBUG] py4...: ǀǀǀReturning 'cyrest_get': {'apiVersion': 'v1', 'cytoscapeVersion': '3.10.2'}
2024-05-06 12:13:14,555 [DEBUG] py4...: ǀǀReturning 'cytoscape_version_info': {'apiVersion': 'v1', 'cytoscapeVersion': '3.10.2', 'automationAPIVersion': '1.9.0', 'py4cytoscapeVersion': '1.9.0'}
2024-05-06 12:13:14,555 [DEBUG] py4...: ǀǀCalling sandbox_get_file_info('image.png', base_url='http://127.0.0.1:1234/v1')
2024-05-06 12:13:14,556 [DEBUG] py4...: ǀǀǀCalling commands_post('filetransfer getFileInfo fileName="c:\\Users\\joaop\\Desktop\\INSA\\Documentos\\Tese_ASD_Gene_Pred\\8_Network\\image.png"', base_url='http://127.0.0.1:1234/v1')
2024-05-06 12:13:14,556 [DEBUG] py4...: ǀǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/filetransfer/getFileInfo), json: {'fileName': 'c:\\Users\\joaop\\Desktop\\INSA\\Documentos\\Tese_ASD_Gene_Pred\\8_Network\\image.png'}
2024-05-06 12:13:14,570 [DEBUG] py4...: ǀǀǀOK[200], content: {
 "data": {"filePath":"C:\\Users\\joaop\\Desktop\\INSA\\Documentos\\Tese_ASD_Gene_Pred\\8_Network\\image.png","modifiedTime":"2024-05-06 12:13:02.0598","isFile":true},
 "errors":[]
}
2024-05-06 12:13:14,570 [DEBUG] py4...: ǀǀǀReturning 'commands_post': {'filePath': 'C:\\Users\\joaop\\Desktop\\INSA\\Documentos\\Tese_ASD_Gene_Pred\\8_Network\\image.png', 'modifiedTime': '2024-05-06 12:13:02.0598', 'isFile': True}
2024-05-06 12:13:14,572 [DEBUG] py4...: ǀǀReturning 'sandbox_get_file_info': {'filePath': 'C:\\Users\\joaop\\Desktop\\INSA\\Documentos\\Tese_ASD_Gene_Pred\\8_Network\\image.png', 'modifiedTime': '2024-05-06 12:13:02.0598', 'isFile': True}
2024-05-06 12:13:14,572 [DEBUG] py4...: ǀǀCalling sandbox_remove_file('image.png', base_url='http://127.0.0.1:1234/v1')
2024-05-06 12:13:14,573 [DEBUG] py4...: ǀǀǀCalling commands_post('filetransfer removeFile fileName="c:\\Users\\joaop\\Desktop\\INSA\\Documentos\\Tese_ASD_Gene_Pred\\8_Network\\image.png"', base_url='http://127.0.0.1:1234/v1')
2024-05-06 12:13:14,573 [DEBUG] py4...: ǀǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/filetransfer/removeFile), json: {'fileName': 'c:\\Users\\joaop\\Desktop\\INSA\\Documentos\\Tese_ASD_Gene_Pred\\8_Network\\image.png'}
2024-05-06 12:13:14,589 [DEBUG] py4...: ǀǀǀInternal Server Error[500], content: {
 "data": {},
 "errors":[{"status":500,"type":"urn:cytoscape:ci:cyrest-core:v1:handle-json-command:errors:2","message":"Unable to delete file: c:\\Users\\joaop\\Desktop\\INSA\\Documentos\\Tese_ASD_Gene_Pred\\8_Network\\image.png","link":"file:/C:/Users/joaop/CytoscapeConfiguration/3/framework-cytoscape.log"}]
}
2024-05-06 12:13:14,589 [DEBUG] py4...: ǀǀǀ'commands_post' exception CyError('In commands_post(): Unable to delete file: c:\\Users\\joaop\\Desktop\\INSA\\Documentos\\Tese_ASD_Gene_Pred\\8_Network\\image.png')
2024-05-06 12:13:14,589 [DEBUG] py4...: ǀǀ'sandbox_remove_file' exception CyError('In commands_post(): Unable to delete file: c:\\Users\\joaop\\Desktop\\INSA\\Documentos\\Tese_ASD_Gene_Pred\\8_Network\\image.png')
2024-05-06 12:13:14,589 [DEBUG] py4...: ǀ'export_image' exception CyError('In commands_post(): Unable to delete file: c:\\Users\\joaop\\Desktop\\INSA\\Documentos\\Tese_ASD_Gene_Pred\\8_Network\\image.png')
2024-05-06 12:13:14,589 [DEBUG] py4...: 'notebook_export_show_image' exception CyError('In commands_post(): Unable to delete file: c:\\Users\\joaop\\Desktop\\INSA\\Documentos\\Tese_ASD_Gene_Pred\\8_Network\\image.png')
2024-05-06 12:13:14,589 [DEBUG] py4...: --------------------
2024-05-06 12:13:22,455 [DEBUG] py4...: Calling notebook_export_show_image()
2024-05-06 12:13:22,455 [DEBUG] py4...: ǀCalling export_image(filename='image.png', type='PNG', resolution=None, units=None, height=None, width=None, zoom=None, network=None, base_url='http://127.0.0.1:1234/v1', overwrite_file=True)
2024-05-06 12:13:22,456 [DEBUG] py4...: ǀǀCalling get_network_view_suid(None, base_url='http://127.0.0.1:1234/v1')
2024-05-06 12:13:22,456 [DEBUG] py4...: ǀǀǀCalling get_network_views(None, base_url='http://127.0.0.1:1234/v1')
2024-05-06 12:13:22,457 [DEBUG] py4...: ǀǀǀǀCalling get_network_suid(None, base_url='http://127.0.0.1:1234/v1')
2024-05-06 12:13:22,458 [DEBUG] py4...: ǀǀǀǀǀCalling commands_post('network get attribute network="current" namespace="default" columnList="SUID"', base_url='http://127.0.0.1:1234/v1')
2024-05-06 12:13:22,458 [DEBUG] py4...: ǀǀǀǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/get%20attribute), json: {'network': 'current', 'namespace': 'default', 'columnList': 'SUID'}
2024-05-06 12:13:22,471 [DEBUG] py4...: ǀǀǀǀǀOK[200], content: {
 "data": [ {
  "SUID": 1216901
}
],
 "errors":[]
}
2024-05-06 12:13:22,472 [DEBUG] py4...: ǀǀǀǀǀReturning 'commands_post': [{'SUID': 1216901}]
2024-05-06 12:13:22,472 [DEBUG] py4...: ǀǀǀǀReturning 'get_network_suid': 1216901
2024-05-06 12:13:22,472 [DEBUG] py4...: ǀǀǀǀCalling cyrest_get('networks/1216901/views', base_url='http://127.0.0.1:1234/v1')
2024-05-06 12:13:22,472 [DEBUG] py4...: ǀǀǀǀHTTP GET(http://127.0.0.1:1234/v1/networks/1216901/views)
2024-05-06 12:13:22,483 [DEBUG] py4...: ǀǀǀǀOK[200], content: [1220733]
2024-05-06 12:13:22,484 [DEBUG] py4...: ǀǀǀǀReturning 'cyrest_get': [1220733]
2024-05-06 12:13:22,484 [DEBUG] py4...: ǀǀǀReturning 'get_network_views': [1220733]
2024-05-06 12:13:22,485 [DEBUG] py4...: ǀǀReturning 'get_network_view_suid': 1220733
2024-05-06 12:13:22,485 [DEBUG] py4...: ǀǀCalling cytoscape_version_info(base_url='http://127.0.0.1:1234/v1')
2024-05-06 12:13:22,486 [DEBUG] py4...: ǀǀǀCalling cyrest_get('version', base_url='http://127.0.0.1:1234/v1')
2024-05-06 12:13:22,486 [DEBUG] py4...: ǀǀǀHTTP GET(http://127.0.0.1:1234/v1/version)
2024-05-06 12:13:22,493 [DEBUG] py4...: ǀǀǀOK[200], content: {"apiVersion":"v1","cytoscapeVersion":"3.10.2"}
2024-05-06 12:13:22,493 [DEBUG] py4...: ǀǀǀReturning 'cyrest_get': {'apiVersion': 'v1', 'cytoscapeVersion': '3.10.2'}
2024-05-06 12:13:22,494 [DEBUG] py4...: ǀǀReturning 'cytoscape_version_info': {'apiVersion': 'v1', 'cytoscapeVersion': '3.10.2', 'automationAPIVersion': '1.9.0', 'py4cytoscapeVersion': '1.9.0'}
2024-05-06 12:13:22,494 [DEBUG] py4...: ǀǀCalling sandbox_get_file_info('image.png', base_url='http://127.0.0.1:1234/v1')
2024-05-06 12:13:22,495 [DEBUG] py4...: ǀǀǀCalling commands_post('filetransfer getFileInfo fileName="c:\\Users\\joaop\\Desktop\\INSA\\Documentos\\Tese_ASD_Gene_Pred\\8_Network\\image.png"', base_url='http://127.0.0.1:1234/v1')
2024-05-06 12:13:22,495 [DEBUG] py4...: ǀǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/filetransfer/getFileInfo), json: {'fileName': 'c:\\Users\\joaop\\Desktop\\INSA\\Documentos\\Tese_ASD_Gene_Pred\\8_Network\\image.png'}
2024-05-06 12:13:22,507 [DEBUG] py4...: ǀǀǀOK[200], content: {
 "data": {"filePath":"C:\\Users\\joaop\\Desktop\\INSA\\Documentos\\Tese_ASD_Gene_Pred\\8_Network\\image.png","modifiedTime":"2024-05-06 12:13:02.0598","isFile":true},
 "errors":[]
}
2024-05-06 12:13:22,507 [DEBUG] py4...: ǀǀǀReturning 'commands_post': {'filePath': 'C:\\Users\\joaop\\Desktop\\INSA\\Documentos\\Tese_ASD_Gene_Pred\\8_Network\\image.png', 'modifiedTime': '2024-05-06 12:13:02.0598', 'isFile': True}
2024-05-06 12:13:22,508 [DEBUG] py4...: ǀǀReturning 'sandbox_get_file_info': {'filePath': 'C:\\Users\\joaop\\Desktop\\INSA\\Documentos\\Tese_ASD_Gene_Pred\\8_Network\\image.png', 'modifiedTime': '2024-05-06 12:13:02.0598', 'isFile': True}
2024-05-06 12:13:22,509 [DEBUG] py4...: ǀǀCalling sandbox_remove_file('image.png', base_url='http://127.0.0.1:1234/v1')
2024-05-06 12:13:22,509 [DEBUG] py4...: ǀǀǀCalling commands_post('filetransfer removeFile fileName="c:\\Users\\joaop\\Desktop\\INSA\\Documentos\\Tese_ASD_Gene_Pred\\8_Network\\image.png"', base_url='http://127.0.0.1:1234/v1')
2024-05-06 12:13:22,509 [DEBUG] py4...: ǀǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/filetransfer/removeFile), json: {'fileName': 'c:\\Users\\joaop\\Desktop\\INSA\\Documentos\\Tese_ASD_Gene_Pred\\8_Network\\image.png'}
2024-05-06 12:13:22,522 [DEBUG] py4...: ǀǀǀInternal Server Error[500], content: {
 "data": {},
 "errors":[{"status":500,"type":"urn:cytoscape:ci:cyrest-core:v1:handle-json-command:errors:2","message":"Unable to delete file: c:\\Users\\joaop\\Desktop\\INSA\\Documentos\\Tese_ASD_Gene_Pred\\8_Network\\image.png","link":"file:/C:/Users/joaop/CytoscapeConfiguration/3/framework-cytoscape.log"}]
}
2024-05-06 12:13:22,522 [DEBUG] py4...: ǀǀǀ'commands_post' exception CyError('In commands_post(): Unable to delete file: c:\\Users\\joaop\\Desktop\\INSA\\Documentos\\Tese_ASD_Gene_Pred\\8_Network\\image.png')
2024-05-06 12:13:22,522 [DEBUG] py4...: ǀǀ'sandbox_remove_file' exception CyError('In commands_post(): Unable to delete file: c:\\Users\\joaop\\Desktop\\INSA\\Documentos\\Tese_ASD_Gene_Pred\\8_Network\\image.png')
2024-05-06 12:13:22,522 [DEBUG] py4...: ǀ'export_image' exception CyError('In commands_post(): Unable to delete file: c:\\Users\\joaop\\Desktop\\INSA\\Documentos\\Tese_ASD_Gene_Pred\\8_Network\\image.png')
2024-05-06 12:13:22,522 [DEBUG] py4...: 'notebook_export_show_image' exception CyError('In commands_post(): Unable to delete file: c:\\Users\\joaop\\Desktop\\INSA\\Documentos\\Tese_ASD_Gene_Pred\\8_Network\\image.png')
2024-05-06 12:13:22,522 [DEBUG] py4...: --------------------
2024-05-06 12:13:25,319 [DEBUG] py4...: Calling commands_run('string disease query disease="breast cancer" species="Homo sapiens" limit=150 cutoff=0.9')
2024-05-06 12:13:25,319 [DEBUG] py4...: ǀCalling commands_get('string disease query disease="breast cancer" species="Homo sapiens" limit=150 cutoff=0.9', base_url='http://127.0.0.1:1234/v1')
2024-05-06 12:13:25,319 [DEBUG] py4...: ǀHTTP GET(http://127.0.0.1:1234/v1/commands/string/disease%20query), params: {'disease': 'breast cancer', 'species': 'Homo sapiens', 'limit': '150', 'cutoff': '0.9'}
2024-05-06 12:13:30,900 [DEBUG] py4...: ǀOK[200], content: Loaded network 'STRING network - breast cancer - 1' with 150 nodes and 731 edges
Finished

2024-05-06 12:13:30,900 [DEBUG] py4...: ǀReturning 'commands_get': ["Loaded network 'STRING network - breast cancer - 1' with 150 nodes and 731 edges"]
2024-05-06 12:13:30,900 [DEBUG] py4...: Returning 'commands_run': ["Loaded network 'STRING network - breast cancer - 1' with 150 nodes and 731 edges"]
2024-05-06 12:13:30,900 [DEBUG] py4...: --------------------
2024-05-06 12:13:30,922 [DEBUG] py4...: Calling get_network_list()
2024-05-06 12:13:30,923 [DEBUG] py4...: ǀCalling cyrest_get('networks.names', base_url='http://127.0.0.1:1234/v1')
2024-05-06 12:13:30,923 [DEBUG] py4...: ǀHTTP GET(http://127.0.0.1:1234/v1/networks.names)
2024-05-06 12:13:30,933 [DEBUG] py4...: ǀOK[200], content: [{"name":"my first network","SUID":1216740},{"name":"STRING network - breast cancer","SUID":1216901},{"name":"STRING network - breast cancer - 1","SUID":1221663}]
2024-05-06 12:13:30,934 [DEBUG] py4...: ǀReturning 'cyrest_get': [{'name': 'my first network', 'SUID': 1216740}, {'name': 'STRING network - breast cancer', 'SUID': 1216901}, {'name': 'STRING network - breast cancer - 1', 'SUID': 1221663}]
2024-05-06 12:13:30,935 [DEBUG] py4...: Returning 'get_network_list': ['my first network', 'STRING network - breast cancer', 'STRING network - breast cancer - 1']
2024-05-06 12:13:30,935 [DEBUG] py4...: --------------------
2024-05-06 12:13:30,953 [DEBUG] py4...: Calling layout_network('circular', 'STRING network - breast cancer')
2024-05-06 12:13:30,954 [DEBUG] py4...: ǀCalling get_network_suid('STRING network - breast cancer', base_url='http://127.0.0.1:1234/v1')
2024-05-06 12:13:30,954 [DEBUG] py4...: ǀǀCalling get_network_list(base_url='http://127.0.0.1:1234/v1')
2024-05-06 12:13:30,954 [DEBUG] py4...: ǀǀǀCalling cyrest_get('networks.names', base_url='http://127.0.0.1:1234/v1')
2024-05-06 12:13:30,955 [DEBUG] py4...: ǀǀǀHTTP GET(http://127.0.0.1:1234/v1/networks.names)
2024-05-06 12:13:30,957 [DEBUG] py4...: ǀǀǀOK[200], content: [{"name":"my first network","SUID":1216740},{"name":"STRING network - breast cancer","SUID":1216901},{"name":"STRING network - breast cancer - 1","SUID":1221663}]
2024-05-06 12:13:30,957 [DEBUG] py4...: ǀǀǀReturning 'cyrest_get': [{'name': 'my first network', 'SUID': 1216740}, {'name': 'STRING network - breast cancer', 'SUID': 1216901}, {'name': 'STRING network - breast cancer - 1', 'SUID': 1221663}]
2024-05-06 12:13:30,966 [DEBUG] py4...: ǀǀReturning 'get_network_list': ['my first network', 'STRING network - breast cancer', 'STRING network - breast cancer - 1']
2024-05-06 12:13:30,967 [DEBUG] py4...: ǀǀCalling commands_post('network get attribute network="STRING network - breast cancer" namespace="default" columnList="SUID"', base_url='http://127.0.0.1:1234/v1')
2024-05-06 12:13:30,967 [DEBUG] py4...: ǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/get%20attribute), json: {'network': 'STRING network - breast cancer', 'namespace': 'default', 'columnList': 'SUID'}
2024-05-06 12:13:30,981 [DEBUG] py4...: ǀǀOK[200], content: {
 "data": [ {
  "SUID": 1216901
}
],
 "errors":[]
}
2024-05-06 12:13:30,985 [DEBUG] py4...: ǀǀReturning 'commands_post': [{'SUID': 1216901}]
2024-05-06 12:13:30,992 [DEBUG] py4...: ǀReturning 'get_network_suid': 1216901
2024-05-06 12:13:30,999 [DEBUG] py4...: ǀCalling commands_post('layout circular network="SUID:1216901"', base_url='http://127.0.0.1:1234/v1')
2024-05-06 12:13:31,015 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/layout/circular), json: {'network': 'SUID:1216901'}
2024-05-06 12:13:31,057 [DEBUG] py4...: ǀOK[200], content: {
 "data": {},
 "errors":[]
}
2024-05-06 12:13:31,057 [DEBUG] py4...: ǀReturning 'commands_post': {}
2024-05-06 12:13:31,058 [DEBUG] py4...: Returning 'layout_network': {}
2024-05-06 12:13:31,058 [DEBUG] py4...: --------------------
2024-05-06 12:13:31,076 [DEBUG] py4...: Calling notebook_export_show_image()
2024-05-06 12:13:31,076 [DEBUG] py4...: ǀCalling export_image(filename='image.png', type='PNG', resolution=None, units=None, height=None, width=None, zoom=None, network=None, base_url='http://127.0.0.1:1234/v1', overwrite_file=True)
2024-05-06 12:13:31,077 [DEBUG] py4...: ǀǀCalling get_network_view_suid(None, base_url='http://127.0.0.1:1234/v1')
2024-05-06 12:13:31,077 [DEBUG] py4...: ǀǀǀCalling get_network_views(None, base_url='http://127.0.0.1:1234/v1')
2024-05-06 12:13:31,078 [DEBUG] py4...: ǀǀǀǀCalling get_network_suid(None, base_url='http://127.0.0.1:1234/v1')
2024-05-06 12:13:31,078 [DEBUG] py4...: ǀǀǀǀǀCalling commands_post('network get attribute network="current" namespace="default" columnList="SUID"', base_url='http://127.0.0.1:1234/v1')
2024-05-06 12:13:31,079 [DEBUG] py4...: ǀǀǀǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/get%20attribute), json: {'network': 'current', 'namespace': 'default', 'columnList': 'SUID'}
2024-05-06 12:13:31,099 [DEBUG] py4...: ǀǀǀǀǀOK[200], content: {
 "data": [ {
  "SUID": 1221663
}
],
 "errors":[]
}
2024-05-06 12:13:31,100 [DEBUG] py4...: ǀǀǀǀǀReturning 'commands_post': [{'SUID': 1221663}]
2024-05-06 12:13:31,101 [DEBUG] py4...: ǀǀǀǀReturning 'get_network_suid': 1221663
2024-05-06 12:13:31,102 [DEBUG] py4...: ǀǀǀǀCalling cyrest_get('networks/1221663/views', base_url='http://127.0.0.1:1234/v1')
2024-05-06 12:13:31,102 [DEBUG] py4...: ǀǀǀǀHTTP GET(http://127.0.0.1:1234/v1/networks/1221663/views)
2024-05-06 12:13:31,139 [DEBUG] py4...: ǀǀǀǀOK[200], content: [1225495]
2024-05-06 12:13:31,140 [DEBUG] py4...: ǀǀǀǀReturning 'cyrest_get': [1225495]
2024-05-06 12:13:31,141 [DEBUG] py4...: ǀǀǀReturning 'get_network_views': [1225495]
2024-05-06 12:13:31,141 [DEBUG] py4...: ǀǀReturning 'get_network_view_suid': 1225495
2024-05-06 12:13:31,141 [DEBUG] py4...: ǀǀCalling cytoscape_version_info(base_url='http://127.0.0.1:1234/v1')
2024-05-06 12:13:31,141 [DEBUG] py4...: ǀǀǀCalling cyrest_get('version', base_url='http://127.0.0.1:1234/v1')
2024-05-06 12:13:31,141 [DEBUG] py4...: ǀǀǀHTTP GET(http://127.0.0.1:1234/v1/version)
2024-05-06 12:13:31,152 [DEBUG] py4...: ǀǀǀOK[200], content: {"apiVersion":"v1","cytoscapeVersion":"3.10.2"}
2024-05-06 12:13:31,154 [DEBUG] py4...: ǀǀǀReturning 'cyrest_get': {'apiVersion': 'v1', 'cytoscapeVersion': '3.10.2'}
2024-05-06 12:13:31,154 [DEBUG] py4...: ǀǀReturning 'cytoscape_version_info': {'apiVersion': 'v1', 'cytoscapeVersion': '3.10.2', 'automationAPIVersion': '1.9.0', 'py4cytoscapeVersion': '1.9.0'}
2024-05-06 12:13:31,155 [DEBUG] py4...: ǀǀCalling sandbox_get_file_info('image.png', base_url='http://127.0.0.1:1234/v1')
2024-05-06 12:13:31,155 [DEBUG] py4...: ǀǀǀCalling commands_post('filetransfer getFileInfo fileName="c:\\Users\\joaop\\Desktop\\INSA\\Documentos\\Tese_ASD_Gene_Pred\\8_Network\\image.png"', base_url='http://127.0.0.1:1234/v1')
2024-05-06 12:13:31,156 [DEBUG] py4...: ǀǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/filetransfer/getFileInfo), json: {'fileName': 'c:\\Users\\joaop\\Desktop\\INSA\\Documentos\\Tese_ASD_Gene_Pred\\8_Network\\image.png'}
2024-05-06 12:13:31,172 [DEBUG] py4...: ǀǀǀOK[200], content: {
 "data": {"filePath":"C:\\Users\\joaop\\Desktop\\INSA\\Documentos\\Tese_ASD_Gene_Pred\\8_Network\\image.png","modifiedTime":"2024-05-06 12:13:02.0598","isFile":true},
 "errors":[]
}
2024-05-06 12:13:31,173 [DEBUG] py4...: ǀǀǀReturning 'commands_post': {'filePath': 'C:\\Users\\joaop\\Desktop\\INSA\\Documentos\\Tese_ASD_Gene_Pred\\8_Network\\image.png', 'modifiedTime': '2024-05-06 12:13:02.0598', 'isFile': True}
2024-05-06 12:13:31,174 [DEBUG] py4...: ǀǀReturning 'sandbox_get_file_info': {'filePath': 'C:\\Users\\joaop\\Desktop\\INSA\\Documentos\\Tese_ASD_Gene_Pred\\8_Network\\image.png', 'modifiedTime': '2024-05-06 12:13:02.0598', 'isFile': True}
2024-05-06 12:13:31,174 [DEBUG] py4...: ǀǀCalling sandbox_remove_file('image.png', base_url='http://127.0.0.1:1234/v1')
2024-05-06 12:13:31,174 [DEBUG] py4...: ǀǀǀCalling commands_post('filetransfer removeFile fileName="c:\\Users\\joaop\\Desktop\\INSA\\Documentos\\Tese_ASD_Gene_Pred\\8_Network\\image.png"', base_url='http://127.0.0.1:1234/v1')
2024-05-06 12:13:31,175 [DEBUG] py4...: ǀǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/filetransfer/removeFile), json: {'fileName': 'c:\\Users\\joaop\\Desktop\\INSA\\Documentos\\Tese_ASD_Gene_Pred\\8_Network\\image.png'}
2024-05-06 12:13:31,191 [DEBUG] py4...: ǀǀǀOK[200], content: {
 "data": {"filePath":"C:\\Users\\joaop\\Desktop\\INSA\\Documentos\\Tese_ASD_Gene_Pred\\8_Network\\image.png","existed":true},
 "errors":[]
}
2024-05-06 12:13:31,192 [DEBUG] py4...: ǀǀǀReturning 'commands_post': {'filePath': 'C:\\Users\\joaop\\Desktop\\INSA\\Documentos\\Tese_ASD_Gene_Pred\\8_Network\\image.png', 'existed': True}
2024-05-06 12:13:31,193 [DEBUG] py4...: ǀǀReturning 'sandbox_remove_file': {'filePath': 'C:\\Users\\joaop\\Desktop\\INSA\\Documentos\\Tese_ASD_Gene_Pred\\8_Network\\image.png', 'existed': True}
2024-05-06 12:13:31,193 [DEBUG] py4...: ǀǀCalling commands_post('view export png Zoom="100" outputFile="C:\\Users\\joaop\\Desktop\\INSA\\Documentos\\Tese_ASD_Gene_Pred\\8_Network\\image.png" view="SUID:1225495"', base_url='http://127.0.0.1:1234/v1')
2024-05-06 12:13:31,193 [DEBUG] py4...: ǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/view/export%20png), json: {'Zoom': '100', 'outputFile': 'C:\\Users\\joaop\\Desktop\\INSA\\Documentos\\Tese_ASD_Gene_Pred\\8_Network\\image.png', 'view': 'SUID:1225495'}
2024-05-06 12:13:31,213 [DEBUG] py4...: ǀǀInternal Server Error[500], content: {
 "data": {},
 "errors":[{"status":500,"type":"urn:cytoscape:ci:cyrest-core:v1:handle-json-command:errors:2","message":"Cannot invoke \"org.cytoscape.view.presentation.RenderingEngine.getViewModel()\" because \"re\" is null","link":"file:/C:/Users/joaop/CytoscapeConfiguration/3/framework-cytoscape.log"}]
}
2024-05-06 12:13:31,213 [DEBUG] py4...: ǀǀ'commands_post' exception CyError('In commands_post(): Cannot invoke "org.cytoscape.view.presentation.RenderingEngine.getViewModel()" because "re" is null')
2024-05-06 12:13:31,213 [DEBUG] py4...: ǀ'export_image' exception CyError('In commands_post(): Cannot invoke "org.cytoscape.view.presentation.RenderingEngine.getViewModel()" because "re" is null')
2024-05-06 12:13:31,217 [DEBUG] py4...: 'notebook_export_show_image' exception CyError('In commands_post(): Cannot invoke "org.cytoscape.view.presentation.RenderingEngine.getViewModel()" because "re" is null')
2024-05-06 12:13:31,217 [DEBUG] py4...: --------------------
2024-05-06 12:14:23,906 [DEBUG] py4...: Calling commands_run('string disease query disease="breast cancer" species="Homo sapiens" limit=150 cutoff=0.9')
2024-05-06 12:14:23,906 [DEBUG] py4...: ǀCalling commands_get('string disease query disease="breast cancer" species="Homo sapiens" limit=150 cutoff=0.9', base_url='http://127.0.0.1:1234/v1')
2024-05-06 12:14:23,907 [DEBUG] py4...: ǀHTTP GET(http://127.0.0.1:1234/v1/commands/string/disease%20query), params: {'disease': 'breast cancer', 'species': 'Homo sapiens', 'limit': '150', 'cutoff': '0.9'}
2024-05-06 12:14:26,801 [DEBUG] py4...: ǀOK[200], content: Loaded network 'STRING network - breast cancer' with 150 nodes and 731 edges
Finished

2024-05-06 12:14:26,816 [DEBUG] py4...: ǀReturning 'commands_get': ["Loaded network 'STRING network - breast cancer' with 150 nodes and 731 edges"]
2024-05-06 12:14:26,816 [DEBUG] py4...: Returning 'commands_run': ["Loaded network 'STRING network - breast cancer' with 150 nodes and 731 edges"]
2024-05-06 12:14:26,816 [DEBUG] py4...: --------------------
2024-05-06 12:14:26,825 [DEBUG] py4...: Calling get_network_list()
2024-05-06 12:14:26,825 [DEBUG] py4...: ǀCalling cyrest_get('networks.names', base_url='http://127.0.0.1:1234/v1')
2024-05-06 12:14:26,825 [DEBUG] py4...: ǀHTTP GET(http://127.0.0.1:1234/v1/networks.names)
2024-05-06 12:14:26,890 [DEBUG] py4...: ǀOK[200], content: [{"name":"STRING network - breast cancer","SUID":1226425}]
2024-05-06 12:14:26,904 [DEBUG] py4...: ǀReturning 'cyrest_get': [{'name': 'STRING network - breast cancer', 'SUID': 1226425}]
2024-05-06 12:14:26,905 [DEBUG] py4...: Returning 'get_network_list': ['STRING network - breast cancer']
2024-05-06 12:14:26,906 [DEBUG] py4...: --------------------
2024-05-06 12:14:29,811 [DEBUG] py4...: Calling layout_network('circular', 'STRING network - breast cancer')
2024-05-06 12:14:29,811 [DEBUG] py4...: ǀCalling get_network_suid('STRING network - breast cancer', base_url='http://127.0.0.1:1234/v1')
2024-05-06 12:14:29,811 [DEBUG] py4...: ǀǀCalling get_network_list(base_url='http://127.0.0.1:1234/v1')
2024-05-06 12:14:29,813 [DEBUG] py4...: ǀǀǀCalling cyrest_get('networks.names', base_url='http://127.0.0.1:1234/v1')
2024-05-06 12:14:29,813 [DEBUG] py4...: ǀǀǀHTTP GET(http://127.0.0.1:1234/v1/networks.names)
2024-05-06 12:14:29,823 [DEBUG] py4...: ǀǀǀOK[200], content: [{"name":"STRING network - breast cancer","SUID":1226425}]
2024-05-06 12:14:29,824 [DEBUG] py4...: ǀǀǀReturning 'cyrest_get': [{'name': 'STRING network - breast cancer', 'SUID': 1226425}]
2024-05-06 12:14:29,824 [DEBUG] py4...: ǀǀReturning 'get_network_list': ['STRING network - breast cancer']
2024-05-06 12:14:29,825 [DEBUG] py4...: ǀǀCalling commands_post('network get attribute network="STRING network - breast cancer" namespace="default" columnList="SUID"', base_url='http://127.0.0.1:1234/v1')
2024-05-06 12:14:29,825 [DEBUG] py4...: ǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/get%20attribute), json: {'network': 'STRING network - breast cancer', 'namespace': 'default', 'columnList': 'SUID'}
2024-05-06 12:14:29,835 [DEBUG] py4...: ǀǀOK[200], content: {
 "data": [ {
  "SUID": 1226425
}
],
 "errors":[]
}
2024-05-06 12:14:29,836 [DEBUG] py4...: ǀǀReturning 'commands_post': [{'SUID': 1226425}]
2024-05-06 12:14:29,837 [DEBUG] py4...: ǀReturning 'get_network_suid': 1226425
2024-05-06 12:14:29,838 [DEBUG] py4...: ǀCalling commands_post('layout circular network="SUID:1226425"', base_url='http://127.0.0.1:1234/v1')
2024-05-06 12:14:29,838 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/layout/circular), json: {'network': 'SUID:1226425'}
2024-05-06 12:14:29,850 [DEBUG] py4...: ǀOK[200], content: {
 "data": {},
 "errors":[]
}
2024-05-06 12:14:29,850 [DEBUG] py4...: ǀReturning 'commands_post': {}
2024-05-06 12:14:29,855 [DEBUG] py4...: Returning 'layout_network': {}
2024-05-06 12:14:29,855 [DEBUG] py4...: --------------------
2024-05-06 12:14:31,485 [DEBUG] py4...: Calling notebook_export_show_image()
2024-05-06 12:14:31,486 [DEBUG] py4...: ǀCalling export_image(filename='image.png', type='PNG', resolution=None, units=None, height=None, width=None, zoom=None, network=None, base_url='http://127.0.0.1:1234/v1', overwrite_file=True)
2024-05-06 12:14:31,486 [DEBUG] py4...: ǀǀCalling get_network_view_suid(None, base_url='http://127.0.0.1:1234/v1')
2024-05-06 12:14:31,486 [DEBUG] py4...: ǀǀǀCalling get_network_views(None, base_url='http://127.0.0.1:1234/v1')
2024-05-06 12:14:31,487 [DEBUG] py4...: ǀǀǀǀCalling get_network_suid(None, base_url='http://127.0.0.1:1234/v1')
2024-05-06 12:14:31,487 [DEBUG] py4...: ǀǀǀǀǀCalling commands_post('network get attribute network="current" namespace="default" columnList="SUID"', base_url='http://127.0.0.1:1234/v1')
2024-05-06 12:14:31,488 [DEBUG] py4...: ǀǀǀǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/get%20attribute), json: {'network': 'current', 'namespace': 'default', 'columnList': 'SUID'}
2024-05-06 12:14:31,498 [DEBUG] py4...: ǀǀǀǀǀOK[200], content: {
 "data": [ {
  "SUID": 1226425
}
],
 "errors":[]
}
2024-05-06 12:14:31,499 [DEBUG] py4...: ǀǀǀǀǀReturning 'commands_post': [{'SUID': 1226425}]
2024-05-06 12:14:31,500 [DEBUG] py4...: ǀǀǀǀReturning 'get_network_suid': 1226425
2024-05-06 12:14:31,500 [DEBUG] py4...: ǀǀǀǀCalling cyrest_get('networks/1226425/views', base_url='http://127.0.0.1:1234/v1')
2024-05-06 12:14:31,500 [DEBUG] py4...: ǀǀǀǀHTTP GET(http://127.0.0.1:1234/v1/networks/1226425/views)
2024-05-06 12:14:31,509 [DEBUG] py4...: ǀǀǀǀOK[200], content: [1230257]
2024-05-06 12:14:31,510 [DEBUG] py4...: ǀǀǀǀReturning 'cyrest_get': [1230257]
2024-05-06 12:14:31,510 [DEBUG] py4...: ǀǀǀReturning 'get_network_views': [1230257]
2024-05-06 12:14:31,511 [DEBUG] py4...: ǀǀReturning 'get_network_view_suid': 1230257
2024-05-06 12:14:31,512 [DEBUG] py4...: ǀǀCalling cytoscape_version_info(base_url='http://127.0.0.1:1234/v1')
2024-05-06 12:14:31,512 [DEBUG] py4...: ǀǀǀCalling cyrest_get('version', base_url='http://127.0.0.1:1234/v1')
2024-05-06 12:14:31,513 [DEBUG] py4...: ǀǀǀHTTP GET(http://127.0.0.1:1234/v1/version)
2024-05-06 12:14:31,520 [DEBUG] py4...: ǀǀǀOK[200], content: {"apiVersion":"v1","cytoscapeVersion":"3.10.2"}
2024-05-06 12:14:31,521 [DEBUG] py4...: ǀǀǀReturning 'cyrest_get': {'apiVersion': 'v1', 'cytoscapeVersion': '3.10.2'}
2024-05-06 12:14:31,521 [DEBUG] py4...: ǀǀReturning 'cytoscape_version_info': {'apiVersion': 'v1', 'cytoscapeVersion': '3.10.2', 'automationAPIVersion': '1.9.0', 'py4cytoscapeVersion': '1.9.0'}
2024-05-06 12:14:31,522 [DEBUG] py4...: ǀǀCalling sandbox_get_file_info('image.png', base_url='http://127.0.0.1:1234/v1')
2024-05-06 12:14:31,522 [DEBUG] py4...: ǀǀǀCalling commands_post('filetransfer getFileInfo fileName="c:\\Users\\joaop\\Desktop\\INSA\\Documentos\\Tese_ASD_Gene_Pred\\8_Network\\image.png"', base_url='http://127.0.0.1:1234/v1')
2024-05-06 12:14:31,523 [DEBUG] py4...: ǀǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/filetransfer/getFileInfo), json: {'fileName': 'c:\\Users\\joaop\\Desktop\\INSA\\Documentos\\Tese_ASD_Gene_Pred\\8_Network\\image.png'}
2024-05-06 12:14:31,532 [DEBUG] py4...: ǀǀǀOK[200], content: {
 "data": {"filePath":"C:\\Users\\joaop\\Desktop\\INSA\\Documentos\\Tese_ASD_Gene_Pred\\8_Network\\image.png","modifiedTime":"2024-05-06 12:13:31.0204","isFile":true},
 "errors":[]
}
2024-05-06 12:14:31,532 [DEBUG] py4...: ǀǀǀReturning 'commands_post': {'filePath': 'C:\\Users\\joaop\\Desktop\\INSA\\Documentos\\Tese_ASD_Gene_Pred\\8_Network\\image.png', 'modifiedTime': '2024-05-06 12:13:31.0204', 'isFile': True}
2024-05-06 12:14:31,532 [DEBUG] py4...: ǀǀReturning 'sandbox_get_file_info': {'filePath': 'C:\\Users\\joaop\\Desktop\\INSA\\Documentos\\Tese_ASD_Gene_Pred\\8_Network\\image.png', 'modifiedTime': '2024-05-06 12:13:31.0204', 'isFile': True}
2024-05-06 12:14:31,532 [DEBUG] py4...: ǀǀCalling sandbox_remove_file('image.png', base_url='http://127.0.0.1:1234/v1')
2024-05-06 12:14:31,532 [DEBUG] py4...: ǀǀǀCalling commands_post('filetransfer removeFile fileName="c:\\Users\\joaop\\Desktop\\INSA\\Documentos\\Tese_ASD_Gene_Pred\\8_Network\\image.png"', base_url='http://127.0.0.1:1234/v1')
2024-05-06 12:14:31,532 [DEBUG] py4...: ǀǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/filetransfer/removeFile), json: {'fileName': 'c:\\Users\\joaop\\Desktop\\INSA\\Documentos\\Tese_ASD_Gene_Pred\\8_Network\\image.png'}
2024-05-06 12:14:31,540 [DEBUG] py4...: ǀǀǀOK[200], content: {
 "data": {"filePath":"C:\\Users\\joaop\\Desktop\\INSA\\Documentos\\Tese_ASD_Gene_Pred\\8_Network\\image.png","existed":true},
 "errors":[]
}
2024-05-06 12:14:31,540 [DEBUG] py4...: ǀǀǀReturning 'commands_post': {'filePath': 'C:\\Users\\joaop\\Desktop\\INSA\\Documentos\\Tese_ASD_Gene_Pred\\8_Network\\image.png', 'existed': True}
2024-05-06 12:14:31,540 [DEBUG] py4...: ǀǀReturning 'sandbox_remove_file': {'filePath': 'C:\\Users\\joaop\\Desktop\\INSA\\Documentos\\Tese_ASD_Gene_Pred\\8_Network\\image.png', 'existed': True}
2024-05-06 12:14:31,540 [DEBUG] py4...: ǀǀCalling commands_post('view export png Zoom="100" outputFile="C:\\Users\\joaop\\Desktop\\INSA\\Documentos\\Tese_ASD_Gene_Pred\\8_Network\\image.png" view="SUID:1230257"', base_url='http://127.0.0.1:1234/v1')
2024-05-06 12:14:31,540 [DEBUG] py4...: ǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/view/export%20png), json: {'Zoom': '100', 'outputFile': 'C:\\Users\\joaop\\Desktop\\INSA\\Documentos\\Tese_ASD_Gene_Pred\\8_Network\\image.png', 'view': 'SUID:1230257'}
2024-05-06 12:14:31,706 [DEBUG] py4...: ǀǀOK[200], content: {
 "data": {"file":"C:\\Users\\joaop\\Desktop\\INSA\\Documentos\\Tese_ASD_Gene_Pred\\8_Network\\image.png"},
 "errors":[]
}
2024-05-06 12:14:31,706 [DEBUG] py4...: ǀǀReturning 'commands_post': {'file': 'C:\\Users\\joaop\\Desktop\\INSA\\Documentos\\Tese_ASD_Gene_Pred\\8_Network\\image.png'}
2024-05-06 12:14:31,706 [DEBUG] py4...: ǀReturning 'export_image': {'file': 'C:\\Users\\joaop\\Desktop\\INSA\\Documentos\\Tese_ASD_Gene_Pred\\8_Network\\image.png'}
2024-05-06 12:14:31,706 [DEBUG] py4...: ǀCalling sandbox_get_from('image.png', overwrite=True, sandbox_name=None, base_url='http://127.0.0.1:1234/v1')
2024-05-06 12:14:31,706 [DEBUG] py4...: ǀǀCalling commands_post('filetransfer fromSandbox fileName="c:\\Users\\joaop\\Desktop\\INSA\\Documentos\\Tese_ASD_Gene_Pred\\8_Network\\image.png"', base_url='http://127.0.0.1:1234/v1')
2024-05-06 12:14:31,706 [DEBUG] py4...: ǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/filetransfer/fromSandbox), json: {'fileName': 'c:\\Users\\joaop\\Desktop\\INSA\\Documentos\\Tese_ASD_Gene_Pred\\8_Network\\image.png'}
2024-05-06 12:14:31,746 [DEBUG] py4...: ǀǀOK[200], content: {
 "data": {"filePath":"C:\\Users\\joaop\\Desktop\\INSA\\Documentos\\Tese_ASD_Gene_Pred\\8_Network\\image.png","modifiedTime":"2024-05-06 12:14:31.0706","fileByteCount":149617,"fileBase64":"\u003d\u003d"},
 "errors":[]
}
2024-05-06 12:14:31,746 [DEBUG] py4...: ǀǀReturning 'commands_post': {'filePath': 'C:\\Users\\joaop\\Desktop\\INSA\\Documentos\\Tese_ASD_Gene_Pred\\8_Network\\image.png', 'modifiedTime': '2024-05-06 12:14:31.0706', 'fileByteCount': 149617, 'fileBase64': ''}
2024-05-06 12:14:31,746 [DEBUG] py4...: ǀReturning 'sandbox_get_from': {'filePath': 'C:\\Users\\joaop\\Desktop\\INSA\\Documentos\\Tese_ASD_Gene_Pred\\8_Network\\image.png', 'modifiedTime': '2024-05-06 12:14:31.0706', 'fileByteCount': 149617}
2024-05-06 12:14:31,746 [DEBUG] py4...: Returning 'notebook_export_show_image': <IPython.core.display.Image object>
2024-05-06 12:14:31,746 [DEBUG] py4...: --------------------
2024-05-06 12:14:40,952 [DEBUG] py4...: Calling get_network_list()
2024-05-06 12:14:40,952 [DEBUG] py4...: ǀCalling cyrest_get('networks.names', base_url='http://127.0.0.1:1234/v1')
2024-05-06 12:14:40,953 [DEBUG] py4...: ǀHTTP GET(http://127.0.0.1:1234/v1/networks.names)
2024-05-06 12:14:40,961 [DEBUG] py4...: ǀOK[200], content: []
2024-05-06 12:14:40,962 [DEBUG] py4...: ǀReturning 'cyrest_get': []
2024-05-06 12:14:40,962 [DEBUG] py4...: Returning 'get_network_list': []
2024-05-06 12:14:40,963 [DEBUG] py4...: --------------------
2024-05-06 12:15:05,573 [DEBUG] py4...: Calling commands_run('string disease query disease="breast cancer" species="Homo sapiens" limit=150 cutoff=0.9')
2024-05-06 12:15:05,573 [DEBUG] py4...: ǀCalling commands_get('string disease query disease="breast cancer" species="Homo sapiens" limit=150 cutoff=0.9', base_url='http://127.0.0.1:1234/v1')
2024-05-06 12:15:05,573 [DEBUG] py4...: ǀHTTP GET(http://127.0.0.1:1234/v1/commands/string/disease%20query), params: {'disease': 'breast cancer', 'species': 'Homo sapiens', 'limit': '150', 'cutoff': '0.9'}
2024-05-06 12:15:07,485 [DEBUG] py4...: ǀOK[200], content: Loaded network 'STRING network - breast cancer' with 150 nodes and 731 edges
Finished

2024-05-06 12:15:07,485 [DEBUG] py4...: ǀReturning 'commands_get': ["Loaded network 'STRING network - breast cancer' with 150 nodes and 731 edges"]
2024-05-06 12:15:07,487 [DEBUG] py4...: Returning 'commands_run': ["Loaded network 'STRING network - breast cancer' with 150 nodes and 731 edges"]
2024-05-06 12:15:07,487 [DEBUG] py4...: --------------------
2024-05-06 12:15:07,505 [DEBUG] py4...: Calling get_network_list()
2024-05-06 12:15:07,505 [DEBUG] py4...: ǀCalling cyrest_get('networks.names', base_url='http://127.0.0.1:1234/v1')
2024-05-06 12:15:07,506 [DEBUG] py4...: ǀHTTP GET(http://127.0.0.1:1234/v1/networks.names)
2024-05-06 12:15:07,514 [DEBUG] py4...: ǀOK[200], content: [{"name":"STRING network - breast cancer","SUID":1231187}]
2024-05-06 12:15:07,514 [DEBUG] py4...: ǀReturning 'cyrest_get': [{'name': 'STRING network - breast cancer', 'SUID': 1231187}]
2024-05-06 12:15:07,514 [DEBUG] py4...: Returning 'get_network_list': ['STRING network - breast cancer']
2024-05-06 12:15:07,514 [DEBUG] py4...: --------------------
2024-05-06 12:15:07,611 [DEBUG] py4...: Calling layout_network('circular', 'STRING network - breast cancer')
2024-05-06 12:15:07,612 [DEBUG] py4...: ǀCalling get_network_suid('STRING network - breast cancer', base_url='http://127.0.0.1:1234/v1')
2024-05-06 12:15:07,612 [DEBUG] py4...: ǀǀCalling get_network_list(base_url='http://127.0.0.1:1234/v1')
2024-05-06 12:15:07,612 [DEBUG] py4...: ǀǀǀCalling cyrest_get('networks.names', base_url='http://127.0.0.1:1234/v1')
2024-05-06 12:15:07,612 [DEBUG] py4...: ǀǀǀHTTP GET(http://127.0.0.1:1234/v1/networks.names)
2024-05-06 12:15:07,623 [DEBUG] py4...: ǀǀǀOK[200], content: [{"name":"STRING network - breast cancer","SUID":1231187}]
2024-05-06 12:15:07,623 [DEBUG] py4...: ǀǀǀReturning 'cyrest_get': [{'name': 'STRING network - breast cancer', 'SUID': 1231187}]
2024-05-06 12:15:07,624 [DEBUG] py4...: ǀǀReturning 'get_network_list': ['STRING network - breast cancer']
2024-05-06 12:15:07,624 [DEBUG] py4...: ǀǀCalling commands_post('network get attribute network="STRING network - breast cancer" namespace="default" columnList="SUID"', base_url='http://127.0.0.1:1234/v1')
2024-05-06 12:15:07,625 [DEBUG] py4...: ǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/get%20attribute), json: {'network': 'STRING network - breast cancer', 'namespace': 'default', 'columnList': 'SUID'}
2024-05-06 12:15:07,636 [DEBUG] py4...: ǀǀOK[200], content: {
 "data": [ {
  "SUID": 1231187
}
],
 "errors":[]
}
2024-05-06 12:15:07,637 [DEBUG] py4...: ǀǀReturning 'commands_post': [{'SUID': 1231187}]
2024-05-06 12:15:07,638 [DEBUG] py4...: ǀReturning 'get_network_suid': 1231187
2024-05-06 12:15:07,638 [DEBUG] py4...: ǀCalling commands_post('layout circular network="SUID:1231187"', base_url='http://127.0.0.1:1234/v1')
2024-05-06 12:15:07,639 [DEBUG] py4...: ǀHTTP POST(http://127.0.0.1:1234/v1/commands/layout/circular), json: {'network': 'SUID:1231187'}
2024-05-06 12:15:07,657 [DEBUG] py4...: ǀOK[200], content: {
 "data": {},
 "errors":[]
}
2024-05-06 12:15:07,658 [DEBUG] py4...: ǀReturning 'commands_post': {}
2024-05-06 12:15:07,658 [DEBUG] py4...: Returning 'layout_network': {}
2024-05-06 12:15:07,659 [DEBUG] py4...: --------------------
2024-05-06 12:15:08,823 [DEBUG] py4...: Calling notebook_export_show_image()
2024-05-06 12:15:08,824 [DEBUG] py4...: ǀCalling export_image(filename='image.png', type='PNG', resolution=None, units=None, height=None, width=None, zoom=None, network=None, base_url='http://127.0.0.1:1234/v1', overwrite_file=True)
2024-05-06 12:15:08,824 [DEBUG] py4...: ǀǀCalling get_network_view_suid(None, base_url='http://127.0.0.1:1234/v1')
2024-05-06 12:15:08,825 [DEBUG] py4...: ǀǀǀCalling get_network_views(None, base_url='http://127.0.0.1:1234/v1')
2024-05-06 12:15:08,825 [DEBUG] py4...: ǀǀǀǀCalling get_network_suid(None, base_url='http://127.0.0.1:1234/v1')
2024-05-06 12:15:08,825 [DEBUG] py4...: ǀǀǀǀǀCalling commands_post('network get attribute network="current" namespace="default" columnList="SUID"', base_url='http://127.0.0.1:1234/v1')
2024-05-06 12:15:08,825 [DEBUG] py4...: ǀǀǀǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/network/get%20attribute), json: {'network': 'current', 'namespace': 'default', 'columnList': 'SUID'}
2024-05-06 12:15:08,836 [DEBUG] py4...: ǀǀǀǀǀOK[200], content: {
 "data": [ {
  "SUID": 1231187
}
],
 "errors":[]
}
2024-05-06 12:15:08,836 [DEBUG] py4...: ǀǀǀǀǀReturning 'commands_post': [{'SUID': 1231187}]
2024-05-06 12:15:08,836 [DEBUG] py4...: ǀǀǀǀReturning 'get_network_suid': 1231187
2024-05-06 12:15:08,837 [DEBUG] py4...: ǀǀǀǀCalling cyrest_get('networks/1231187/views', base_url='http://127.0.0.1:1234/v1')
2024-05-06 12:15:08,837 [DEBUG] py4...: ǀǀǀǀHTTP GET(http://127.0.0.1:1234/v1/networks/1231187/views)
2024-05-06 12:15:08,843 [DEBUG] py4...: ǀǀǀǀOK[200], content: [1235019]
2024-05-06 12:15:08,843 [DEBUG] py4...: ǀǀǀǀReturning 'cyrest_get': [1235019]
2024-05-06 12:15:08,843 [DEBUG] py4...: ǀǀǀReturning 'get_network_views': [1235019]
2024-05-06 12:15:08,843 [DEBUG] py4...: ǀǀReturning 'get_network_view_suid': 1235019
2024-05-06 12:15:08,843 [DEBUG] py4...: ǀǀCalling cytoscape_version_info(base_url='http://127.0.0.1:1234/v1')
2024-05-06 12:15:08,843 [DEBUG] py4...: ǀǀǀCalling cyrest_get('version', base_url='http://127.0.0.1:1234/v1')
2024-05-06 12:15:08,843 [DEBUG] py4...: ǀǀǀHTTP GET(http://127.0.0.1:1234/v1/version)
2024-05-06 12:15:08,857 [DEBUG] py4...: ǀǀǀOK[200], content: {"apiVersion":"v1","cytoscapeVersion":"3.10.2"}
2024-05-06 12:15:08,859 [DEBUG] py4...: ǀǀǀReturning 'cyrest_get': {'apiVersion': 'v1', 'cytoscapeVersion': '3.10.2'}
2024-05-06 12:15:08,859 [DEBUG] py4...: ǀǀReturning 'cytoscape_version_info': {'apiVersion': 'v1', 'cytoscapeVersion': '3.10.2', 'automationAPIVersion': '1.9.0', 'py4cytoscapeVersion': '1.9.0'}
2024-05-06 12:15:08,860 [DEBUG] py4...: ǀǀCalling sandbox_get_file_info('image.png', base_url='http://127.0.0.1:1234/v1')
2024-05-06 12:15:08,860 [DEBUG] py4...: ǀǀǀCalling commands_post('filetransfer getFileInfo fileName="c:\\Users\\joaop\\Desktop\\INSA\\Documentos\\Tese_ASD_Gene_Pred\\8_Network\\image.png"', base_url='http://127.0.0.1:1234/v1')
2024-05-06 12:15:08,861 [DEBUG] py4...: ǀǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/filetransfer/getFileInfo), json: {'fileName': 'c:\\Users\\joaop\\Desktop\\INSA\\Documentos\\Tese_ASD_Gene_Pred\\8_Network\\image.png'}
2024-05-06 12:15:08,871 [DEBUG] py4...: ǀǀǀOK[200], content: {
 "data": {"filePath":"C:\\Users\\joaop\\Desktop\\INSA\\Documentos\\Tese_ASD_Gene_Pred\\8_Network\\image.png","modifiedTime":"2024-05-06 12:14:31.0746","isFile":true},
 "errors":[]
}
2024-05-06 12:15:08,873 [DEBUG] py4...: ǀǀǀReturning 'commands_post': {'filePath': 'C:\\Users\\joaop\\Desktop\\INSA\\Documentos\\Tese_ASD_Gene_Pred\\8_Network\\image.png', 'modifiedTime': '2024-05-06 12:14:31.0746', 'isFile': True}
2024-05-06 12:15:08,873 [DEBUG] py4...: ǀǀReturning 'sandbox_get_file_info': {'filePath': 'C:\\Users\\joaop\\Desktop\\INSA\\Documentos\\Tese_ASD_Gene_Pred\\8_Network\\image.png', 'modifiedTime': '2024-05-06 12:14:31.0746', 'isFile': True}
2024-05-06 12:15:08,875 [DEBUG] py4...: ǀǀCalling sandbox_remove_file('image.png', base_url='http://127.0.0.1:1234/v1')
2024-05-06 12:15:08,875 [DEBUG] py4...: ǀǀǀCalling commands_post('filetransfer removeFile fileName="c:\\Users\\joaop\\Desktop\\INSA\\Documentos\\Tese_ASD_Gene_Pred\\8_Network\\image.png"', base_url='http://127.0.0.1:1234/v1')
2024-05-06 12:15:08,876 [DEBUG] py4...: ǀǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/filetransfer/removeFile), json: {'fileName': 'c:\\Users\\joaop\\Desktop\\INSA\\Documentos\\Tese_ASD_Gene_Pred\\8_Network\\image.png'}
2024-05-06 12:15:08,889 [DEBUG] py4...: ǀǀǀOK[200], content: {
 "data": {"filePath":"C:\\Users\\joaop\\Desktop\\INSA\\Documentos\\Tese_ASD_Gene_Pred\\8_Network\\image.png","existed":true},
 "errors":[]
}
2024-05-06 12:15:08,889 [DEBUG] py4...: ǀǀǀReturning 'commands_post': {'filePath': 'C:\\Users\\joaop\\Desktop\\INSA\\Documentos\\Tese_ASD_Gene_Pred\\8_Network\\image.png', 'existed': True}
2024-05-06 12:15:08,889 [DEBUG] py4...: ǀǀReturning 'sandbox_remove_file': {'filePath': 'C:\\Users\\joaop\\Desktop\\INSA\\Documentos\\Tese_ASD_Gene_Pred\\8_Network\\image.png', 'existed': True}
2024-05-06 12:15:08,889 [DEBUG] py4...: ǀǀCalling commands_post('view export png Zoom="100" outputFile="C:\\Users\\joaop\\Desktop\\INSA\\Documentos\\Tese_ASD_Gene_Pred\\8_Network\\image.png" view="SUID:1235019"', base_url='http://127.0.0.1:1234/v1')
2024-05-06 12:15:08,889 [DEBUG] py4...: ǀǀHTTP POST(http://127.0.0.1:1234/v1/commands/view/export%20png), json: {'Zoom': '100', 'outputFile': 'C:\\Users\\joaop\\Desktop\\INSA\\Documentos\\Tese_ASD_Gene_Pred\\8_Network\\image.png', 'view': 'SUID:1235019'}
2024-05-06 12:15:08,910 [DEBUG] py4...: ǀǀInternal Server Error[500], content: {
 "data": {},
 "errors":[{"status":500,"type":"urn:cytoscape:ci:cyrest-core:v1:handle-json-command:errors:2","message":"Cannot invoke \"org.cytoscape.view.presentation.RenderingEngine.getViewModel()\" because \"re\" is null","link":"file:/C:/Users/joaop/CytoscapeConfiguration/3/framework-cytoscape.log"}]
}
2024-05-06 12:15:08,911 [DEBUG] py4...: ǀǀ'commands_post' exception CyError('In commands_post(): Cannot invoke "org.cytoscape.view.presentation.RenderingEngine.getViewModel()" because "re" is null')
2024-05-06 12:15:08,912 [DEBUG] py4...: ǀ'export_image' exception CyError('In commands_post(): Cannot invoke "org.cytoscape.view.presentation.RenderingEngine.getViewModel()" because "re" is null')
2024-05-06 12:15:08,912 [DEBUG] py4...: 'notebook_export_show_image' exception CyError('In commands_post(): Cannot invoke "org.cytoscape.view.presentation.RenderingEngine.getViewModel()" because "re" is null')
2024-05-06 12:15:08,913 [DEBUG] py4...: --------------------
